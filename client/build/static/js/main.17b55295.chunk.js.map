{"version":3,"sources":["components/info.jsx","components/tutorial.jsx","components/corner/panel.jsx","components/corner/index.jsx","components/loginManager/formField.jsx","components/loginManager/login.jsx","components/loginManager/register.jsx","components/loginManager/index.jsx","components/wordsForm.jsx","components/wordsInfo.jsx","components/footer.jsx","ui.jsx","index.js"],"names":["Info","className","Tutorial","props","id","Panel","updateAnimationIndex","bind","speed","ref","React","createRef","w","undefined","state","animationIndex","this","RAF","window","requestAnimationFrame","cancelAnimationFrame","newAnimationIndex","current","offsetLeft","offsetWidth","setState","offsetParent","startAnimation","stopAnimation","style","left","word","author","Component","SVGPathSmall","width","height","d","SVGPathBig","Corner","animationSpeed","moved","switched","panelsSorted","messages","map","i","user","forEach","panel","key","push","transform","FormField","class","htmlFor","children","tabIndex","value","onChange","type","name","required","LoginForm","handleChange","handleSubmit","password","errorMessage","csrf","fetch","method","then","res","ok","json","data","csrf_token","catch","err","console","error","e","target","log","preventDefault","user_name","user_pass","options","headers","body","JSON","stringify","onLogin","onSubmit","autoComplete","RegisterForm","password2","secretKey","user_pass_repeat","secret_key","autocomplete","LoginManager","switchToLogin","switchToRegister","tab","form","registerActive","loginActive","onClick","WordsForm","words","split","filter","s","match","mode","Error","status","addedNewWords","added_words","placeholder","WordsInfo","addedWordsMessage","newWords","length","NewWordsInfo","wordsCount","color","fontWeight","copySuccess","showSuccessMessage","setSuccessMessage","GetWordsButton","handleClick","navigator","clipboard","writeText","fontSize","Footer","href","UI","onLogout","switchCorner","loggedIn","opened","logged","setInterval","content","DefaultScreen","Logo","LogoutButton","LoggedScreen","count","setTimeout","fetchWordsCount","fetchWordsForSlider","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17b55295.chunk.js","sourcesContent":["import \"./info.css\"\n\nfunction Info() {\n    return (\n        <article className=\"info\">\n                <ul>\n                    <li>\n                        <h2>\n                            This app allows you to create and\n                            store words dictionary. First, you have to\n                            log in, or register, if you don't have an account.\n                        </h2>\n                    </li>\n                    <li>\n                        <h2>\n                            After login you can see already existing \n                            words in slider, or add your\n                            own ones!\n                        </h2>\n                    </li>\n                    <li>\n                        <h2>\n                            You can also retrieve dictionary from the database.\n                            Words are returned in form of text, separated by comma (so they are \n                            ready to put in pictionary game)\n                        </h2>\n                    </li>\n                </ul>\n\n        </article>\n    )\n}\n\nexport default Info;","function Tutorial(props) {\n    return (\n        <article id=\"tutorial\">\n            <h2>Type phrases or words separated by coma, then hit “Send” button to add them to database!\n            Words can only contain letters and numbers, and can be separated by spaces to form phrases.\n                    </h2>\n        </article>\n    );\n}\n\nexport default Tutorial;","import React from \"react\";\n\n\n\nclass Panel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.updateAnimationIndex = this.updateAnimationIndex.bind(this);\n\n        this.speed = this.props.speed || 1;\n        this.ref = React.createRef();\n        this.w = undefined;\n\n        this.state = { \n            animationIndex: 0,\n        };\n    }\n\n    startAnimation() {\n        if (!this.RAF) {\n            this.RAF = window.requestAnimationFrame( this.updateAnimationIndex );\n        }\n    }\n\n    stopAnimation() {\n        window.cancelAnimationFrame(this.RAF);\n    }\n\n    updateAnimationIndex() {\n        let newAnimationIndex = this.state.animationIndex + this.speed;\n        if (this.ref.current.offsetLeft - this.ref.current.offsetWidth >= this.w) {\n            newAnimationIndex -= this.w;\n        }\n        this.setState({ animationIndex: newAnimationIndex });\n\n        this.RAF = window.requestAnimationFrame( this.updateAnimationIndex );\n    }\n\n    componentDidMount() {\n        this.w = this.ref.current.offsetParent.offsetWidth;\n        this.startAnimation();\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    render() {\n        return (\n            <div className=\"panel\" ref={this.ref} style={{ left: this.state.animationIndex }}>\n                <p className=\"panel__word\">{this.props.word}</p>\n                <p className=\"panel__author\">{this.props.author}</p>\n            </div>\n        )\n    }\n}\n\nexport default Panel;","import \"./corner.css\";\nimport Panel from \"./panel\";\nimport React from \"react\";\n\nfunction SVGPathSmall() {\n    return (\n        <svg width=\"0\" height=\"0\">\n            <defs>\n                <clipPath id=\"smallClip\">\n                    <path d=\"M632 0V553H0L632 0Z\" />\n                </clipPath>\n            </defs>\n        </svg>\n    );\n}\n\nfunction SVGPathBig() {\n    return (\n        <svg width=\"0\" height=\"0\">\n            <defs>\n                <clipPath id=\"mainClip\">\n                    <path d=\"M2828 0H0V2189H2226L2828 1664V0Z\" />\n                </clipPath>\n            </defs>\n        </svg>\n    );\n}\n\n\n\nclass Corner extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.animationSpeed = 1;\n    }\n\n\n    render() {\n        const moved = this.props.switched \n        ? \"corner corner__background moved\"\n        : \"corner corner__background\";\n\n        let panelsSorted = [ [], [], [] ];\n        let panels = this.props.messages.map( ({user, word}, i) => (<Panel author={user} word={word} speed={this.animationSpeed} key={i} />) );\n        \n        panels.forEach(panel => {\n            let i = panel.key % 3;\n            panelsSorted[i].push(panel);\n        });\n\n        return (\n            <div className=\"animationContainer\">\n                <SVGPathSmall />\n                <SVGPathBig />\n\n                <div className={moved}> </div>\n                <div className=\"corner corner__slider\">\n\n\n                    <div className=\"messagesWrapper\">\n                        <div className=\"row\">\n                            {panelsSorted[0]}\n                        </div>\n\n                        <div className=\"row\" style={{ transform: \"translate(300px, 0)\"}}>\n                            {panelsSorted[1]}\n                        </div>\n\n                        <div className=\"row\">\n                            {panelsSorted[2]}\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Corner;","function FormField(props) {\n    return (\n        <div className={props.class + \" formField\"}>\n            <label htmlFor={props.id}>{props.children}</label>\n            <div className=\"wrapper\" tabIndex=\"-1\">\n                <input value={props.value} onChange={props.onChange} id={props.id} type={props.type} name={props.name} required />\n                <div className=\"bar\"></div>\n            </div>\n        </div>\n    );\n}\n\nexport default FormField;","import React from \"react\";\nimport FormField from \"./formField\"\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            name: \"\",\n            password: \"\",\n            errorMessage: \"\",\n            csrf: \"\",\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"/api/login\", {\n            method: \"GET\",\n        })\n            .then(res => {\n                if (res.ok) return res.json()\n            })\n            .then(data => {\n                this.setState({ csrf: data.csrf_token })\n            })\n            .catch(err => console.error(err));\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.id]: e.target.value });\n        console.log(this.state);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        let data = {\n            user_name: this.state.name,\n            user_pass: this.state.password,\n        }\n\n        let options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": this.state.csrf,\n            },\n            body: JSON.stringify(data),\n        }\n\n        fetch(\"/api/login\", options)\n            .then(res => {\n                if (!res.ok) {\n                    this.setState({ errorMessage: \"Something went wrong!\" });\n                    return;\n                }\n                this.props.onLogin();\n            })\n            .catch(err => console.error(err));\n\n    }\n\n    render() {\n        console.log(this.state);\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit} id=\"loginForm\" autoComplete=\"off\">\n                    <FormField id=\"name\" value={this.state.name} onChange={this.handleChange} class=\"loginField\" name=\"user_name\" type=\"text\" >Login: </FormField>\n                    <FormField id=\"password\" value={this.state.password} onChange={this.handleChange} class=\"passwordField\" name=\"user_pass\" type=\"password\" >Password: </FormField>\n\n                    <div className=\"buttonErrorWrapper\">\n                        <p className=\"errorMessage\">{this.state.errorMessage}</p>\n                        <button type=\"submit\" className=\"submitButton\">Submit</button>\n                    </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\n\nexport default LoginForm;","import React from \"react\";\nimport FormField from \"./formField\"\n\nclass RegisterForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            name: \"\",\n            password: \"\",\n            password2: \"\",\n            secretKey: \"\",\n            errorMessage: \"\",\n            csrf: \"\",\n            style: {},\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"/api/register\", {\n            method: \"GET\",\n        })\n            .then(res => {\n                if (res.ok) return res.json()\n            })\n            .then(data => {\n                console.log(data);\n                this.setState({ csrf: data.csrf_token })\n            })\n            .catch(err => console.error(err));\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.id]: e.target.value });\n        console.log(this.state);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        let data = {\n            user_name: this.state.name,\n            user_pass: this.state.password,\n            user_pass_repeat: this.state.password2,\n            secret_key: this.state.secretKey,\n        }\n\n        let options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": this.state.csrf,\n            },\n            body: JSON.stringify(data),\n        }\n\n        fetch(\"/api/register\", options)\n            .then(res => {\n                if (!res.ok) {\n                    this.setState({ errorMessage: \"Something went wrong\" });\n                    return\n                }\n                console.log(\"sucess\");\n            })\n            .catch(err => console.error(err));\n\n        console.log(this.state);\n    }\n\n\n    render() {\n        return (\n            <div style={this.state.style}>\n                <form onSubmit={this.handleSubmit} id=\"registerForm\" autocomplete=\"off\">\n                    <FormField id=\"name\" value={this.state.name} onChange={this.handleChange} className=\"loginField\" name=\"user_name\" type=\"text\" >Login: </FormField>\n                    <FormField id=\"password\" value={this.state.password} onChange={this.handleChange} className=\"passwordField\" name=\"user_pass\" type=\"password\" >Password: </FormField>\n                    <FormField id=\"password2\" value={this.state.password2} onChange={this.handleChange} className=\"passwordField\" name=\"user_pass2\" type=\"password\" >Retype password: </FormField>\n                    <FormField id=\"secretKey\" value={this.state.secretKey} onChange={this.handleChange} className=\"keyField\" name=\"secret_key\" type=\"text\" >Group key: </FormField>\n\n\n                    <div className=\"buttonErrorWrapper\">\n                        <p className=\"errorMessage\">{this.state.errorMessage}</p>\n                        <button type=\"submit\" className=\"submitButton\" onSubmit={this.handleSubmit}>Submit</button>\n                    </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\n\nexport default RegisterForm;","import React from \"react\";\nimport LoginForm from \"./login\";\nimport RegisterForm from \"./register\";\nimport \"./index.css\";\n\nclass LoginManager extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.switchToLogin = this.switchToLogin.bind(this);\n        this.switchToRegister = this.switchToRegister.bind(this);\n\n        this.state = { tab: \"login\" };\n    }\n\n    switchToLogin() {\n        this.setState({ tab: \"login\" });\n    }\n\n    switchToRegister() {\n        this.setState({ tab: \"register\" });\n    }\n\n    render() {\n        const form = this.state.tab === \"login\" ? <LoginForm onLogin={this.props.onLogin} /> : <RegisterForm />\n        const registerActive = this.state.tab === \"register\" ? \"active\" : \"\";\n        const loginActive = this.state.tab === \"login\" ? \"active\" : \"\";\n        return (\n            <div className=\"loginWindow\">\n                \n                { form }\n\n                <div className=\"switch\">\n                    <button type=\"button\" className={registerActive} onClick={this.switchToRegister} >Register</button>\n                    <div className=\"divisorWrapper\">\n                        <div className=\"divisor\"></div>\n                    </div>\n                    <button type=\"button\" className={loginActive} onClick={this.switchToLogin} >Login</button>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default LoginManager;","import React from \"react\";\nimport \"./wordsForm.css\"\n\nclass WordsForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = { \n            words: \"\",\n            csrf: \"\",\n        };\n    }\n\n    handleChange(e) {\n        this.setState({ words:e.target.value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        let words_unfiltered = this.state.words.split(\",\");\n        let words = words_unfiltered.filter( (s) => s.match(\"^[A-Za-z0-9ąćęłńóśźżĄĘŁŃÓŚŹŻ ]+$\"))\n    \n        fetch(\"/api/add\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": this.state.csrf,\n\n            },\n            body: JSON.stringify({ words: words }),\n        })\n        .then(res => {\n    \n            if (res.ok)  return res.json()\n            else                    throw Error(`Bad response, status ${res.status}`)\n    \n        })\n        .then(data => {console.log(data); return data;})\n        .then(data => this.props.addedNewWords( data.added_words ) )\n        .catch(err => console.error(err));\n\n    }\n\n    componentDidMount() {\n        fetch(\"/api/add\", {\n            method: \"GET\",\n        })\n        .then(res => {\n            if (res.ok) return res.json()\n        })\n        .then(data => this.setState({ csrf: data.csrf_token }))\n        .then( () => console.log(this.state))\n        .catch(err => console.error(err));\n    }\n\n    render() {\n        return(\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" className=\"wordsForm\">\n                <label htmlFor=\"words\">Words: </label>\n                <div className=\"wrapper\" tabIndex=\"-1\">\n                    <textarea onChange={this.handleChange} id=\"words\" name=\"words\" placeholder=\"Type word(s) here\">{this.state.words}</textarea>\n                    <div className=\"bar\"></div>\n                </div>\n                <button type=\"submit\" className=\"submitButton\" onSubmit={this.handleSubmit}>Submit</button>\n            </form>\n        );\n    }\n}\n\nexport default WordsForm;","import React from \"react\";\nimport \"./wordsInfo.css\"\n\nclass WordsInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const addedWordsMessage = this.props.newWords.length > 0\n            ? (<NewWordsInfo newWords={this.props.newWords} />)\n            :  null;\n        return (\n            <div className=\"wordsInfo\">\n                <article>\n                    {addedWordsMessage}\n                    <h2>There are <span className=\"wordsInfo__count\">{this.props.wordsCount}</span> words in database.</h2>\n                    <h2>Hit the button below to get words from database</h2>\n                    <h2 style={{ color: \"var(--form-color)\", fontWeight: \"bold\" }}>{this.props.copySuccess}</h2>\n                </article>\n\n                <GetWordsButton showSuccessMessage={this.props.setSuccessMessage} />\n            </div>\n        );\n    }\n}\n\nclass GetWordsButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        fetch(\"/api/bank\")\n            .then(res => res.json())\n            .then(data => {\n                navigator.clipboard.writeText(data);\n                this.props.showSuccessMessage();\n            })\n            .catch(err => console.error(err))\n    }\n\n    render() {\n        return (<button type=\"button\" className=\"getWordsButton\" onClick={this.handleClick}>Get words!</button>);\n\n    }\n}\n\nfunction NewWordsInfo(props) {\n    return (\n        <div>\n            <h2>Following words have been added to database:</h2>\n            <h2 style={{ fontSize: \"1.1em\", color: \"var(--form-color)\", fontWeight: \"bold\" }}>{props.newWords}</h2>\n        </div>\n    )\n}\n\nexport default WordsInfo;","function Footer(props) {\n    return(\n    <footer>\n        <p>Created by: <br /> <a href=\"https://github.com/RafalKornel\"> <i class=\"fab fa-github-square\"></i> Rafał Kornel </a> </p>\n    </footer>\n    )\n}\n\nexport default Footer;","import React from \"react\"\nimport './index.css';\nimport Info from \"./components/info\"\nimport Tutorial from \"./components/tutorial\"\nimport Corner from \"./components/corner/\"\nimport LoginManager from \"./components/loginManager/\"\nimport WordsForm from \"./components/wordsForm\"\nimport WordsInfo from \"./components/wordsInfo\"\nimport Footer from \"./components/footer\"\n\nclass UI extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogin = this.onLogin.bind(this);\n    this.onLogout = this.onLogout.bind(this);\n    this.switchCorner = this.switchCorner.bind(this);\n\n    this.state = {\n      loggedIn: false,\n      opened: false,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/api/check\", {\n      method: \"GET\",\n    })\n      .then(res => {\n        if (res.ok) return res.json()\n      })\n      .then(data => {\n        console.log(\"this is data \");\n        console.log(data);\n        if (data.logged) {\n          this.setState({ loggedIn: true });\n          this.switchCorner();\n        }\n        else if (data.logged == \"False\") {\n          this.setState({ loggedIn: false });\n        }\n      })\n      .catch(err => console.error(err));\n  }\n\n  onLogin() {\n    this.setState({ loggedIn: true });\n    this.switchCorner();\n  }\n\n  onLogout() {\n    fetch(\"/api/logout\", {\n      method: \"GET\"\n    })\n      .then(res => {\n        if (res.ok) {\n          this.setState({ loggedIn: false });\n        }\n      })\n      .catch(err => console.error(err));\n  }\n\n  switchCorner() {\n    setInterval(\n      () => { this.setState(state => ({ opened: state.loggedIn })) }\n      , 0)\n  }\n\n\n  render() {\n    let content = this.state.loggedIn \n      ? <LoggedScreen switched={this.state.opened} onLogout={this.onLogout} />\n      : <DefaultScreen onLogin={this.onLogin} />\n    return (\n      <div className=\"app\">\n        <Logo />\n        { content}\n        <Footer />\n      </div>\n    )\n  }\n}\n\nclass LogoutButton extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (<button onClick={this.props.onLogout} type=\"button\" className=\"submitButton logoutButton\">Logout</button>);\n  }\n}\n\nclass LoggedScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addedNewWords = this.addedNewWords.bind(this);\n    this.setSuccessMessage = this.setSuccessMessage.bind(this);\n\n    this.state = {\n      count: 0,\n      messages: [],\n      copySuccess: \"\",\n      newWords: [],\n    }\n  }\n\n  addedNewWords(words) {\n    this.setState({ newWords: words });\n    setTimeout(() => this.setState({ newWords: \"\" }), 5000);\n    this.fetchWordsCount();\n    this.fetchWordsForSlider();\n  }\n\n  setSuccessMessage() {\n    this.setState({ copySuccess: \"Database words have been copied to clipboard.\"});\n    setTimeout( () => this.setState({ copySuccess: \"\" }), 5000);\n  }\n\n  fetchWordsForSlider() {\n    fetch(\"/api/words\")\n      .then(res => {\n        console.log(res);\n        if (res.ok) return res.json();\n      })\n      .then(data => {\n        this.setState({ messages: data });\n      })\n      .catch(err => console.error(err));\n  }\n\n  fetchWordsCount() {\n    fetch(\"/api/count\")\n      .then(res => {\n        if (res.ok) return res.text()\n      })\n      .then(text => this.setState({ count: text }))\n      .catch(err => console.error(err));\n  }\n\n  componentDidMount() {\n    this.fetchWordsForSlider();\n    this.fetchWordsCount();\n  }\n\n  render() {\n    return (\n      <div className=\"mainScreen bcg\">\n        <LogoutButton onLogout={this.props.onLogout} />\n\n        <section>\n          <Tutorial />\n          <WordsForm addedNewWords={this.addedNewWords} />\n        </section>\n        <section>\n          <WordsInfo\n            newWords={this.state.newWords}\n            wordsCount={this.state.count}\n            copySuccess={this.state.copySuccess}\n            setSuccessMessage={this.setSuccessMessage}\n          />\n        </section>\n\n        <Corner switched={this.props.switched} messages={this.state.messages} />\n      </div>\n    );\n  }\n}\n\nfunction DefaultScreen(props) {\n  return (\n    <div className=\"defaultScreen bcg\">\n      <Info />\n      <LoginManager onLogin={props.onLogin} />\n    </div>\n  )\n}\n\nfunction Logo() {\n  return <h1 className=\"logo\">KALAMBURY</h1>;\n}\n\nexport default UI;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport UI from './ui';\n\nReactDOM.render(\n  <React.StrictMode>\n    <UI />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}