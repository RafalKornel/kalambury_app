{"version":3,"sources":["components/Utilities/footer.jsx","components/Utilities/logo.jsx","components/MainPage/tutorial.jsx","components/CornerAnimation/panel.jsx","components/CornerAnimation/index.jsx","components/Utilities/common.jsx","components/MainPage/wordsForm.jsx","components/MainPage/wordsInfo.jsx","components/Settings/colorPicker.jsx","components/Utilities/formField.jsx","components/Settings/groupManager.jsx","components/Settings/index.jsx","components/MainPage/index.jsx","components/LoginPage/info.jsx","components/LoginManager/login.jsx","components/LoginManager/register.jsx","components/LoginManager/index.jsx","components/LoginPage/index.jsx","components/ui.jsx","index.js"],"names":["FooterEl","styled","footer","Footer","props","href","class","Logo","h1","Tutorial","className","Wrapper","div","Word","p","Author","Panel","word","author","SVGPathSmall","width","height","id","d","SVGPathBig","AnimationContainer","corner","SliderCorner","moved","BackCorner","MessagesWrapper","slideshow","keyframes","Row","RowWrapper","Corner","state","panels","prevProps","prevState","messages","this","panelsSorted","map","i","user","forEach","panel","key","push","setState","switched","style","transform","React","Component","ErrorMessage","SubmitButton","button","Bar","InnerFieldWrapper","attrs","tabIndex","Page","GroupsSelect","name","onChange","handleChange","value","group","groups","g","ProtoBar","ButtonWrapper","Form","form","WordsForm","bind","handleSubmit","words","csrf","e","console","log","target","preventDefault","split","filter","s","match","fetch","method","mode","headers","body","JSON","stringify","then","res","ok","json","Error","status","data","addedNewWords","added_words","catch","err","error","csrf_token","onSubmit","autoComplete","htmlFor","placeholder","type","Button","NewWords","h2","CopySucess","WordsInfo","addedWordsMessage","newWords","length","NewWordsInfo","count","selectedGroup","copySuccess","showSuccessMessage","setSuccessMessage","setSelectedGroup","GetWordsButton","handleClick","query","slice","reduce","c","navigator","clipboard","writeText","onClick","labels","Box","rgb","ColorPicker","setTheme","themes","Themes","names","Object","keys","themeName","theme","prop","document","documentElement","setProperty","values","title","FormField","children","required","SuccessMessage","InputWrapper","JoinForm","onMount","errorMessage","successMessage","groupKey","CreateForm","GroupManager","joinGroup","createGroup","getCreateCSRF","getJoinCSRF","joinKey","createName","createKey","joinErrorMessage","createErrorMessage","create_csrf","join_csrf","group_key","options","setTimeout","joinSuccessMessage","fetchUserData","group_name","createSuccessMessage","join","loggedIn","Icon","version","x","y","viewBox","enable-background","fill-rule","clip-rule","Header","ButtonsWrapper","LogoutButton","onLogout","CornerButton","switchCorner","Settings","MainPage","cache","groupsCount","selectedCountGroup","fetchWordsCount","fetchWordsForSlider","article","Info","LoginForm","password","user_name","user_pass","onLogin","RegisterForm","password2","secretKey","user_pass_repeat","secret_key","autocomplete","LoginWindow","Switch","Divisor","DivisorWrapper","LoginManager","switchToLogin","switchToRegister","tab","LoginPage","UI","opened","username","openCorner","page","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2975f745.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst FooterEl = styled.footer`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  margin: 0.5em;\n  text-align: right;\n  font-size: 0.9em;\n  color: var(--form-color);\n  z-index: 3;\n\n  p {\n      margin: 0;\n  }\n\n  a {\n    text-decoration: none;\n    color: var(--form-color);\n    font-size: 1.4em;\n    font-weight: bold;\n  }\n\n    @media screen and (max-width: 1100px) {\n        text-align: center;\n        top: 5em;\n        bottom: unset;\n        height: auto;\n        left: 50%;\n        transform: translateX(-50%);\n    }\n`;\n\nfunction Footer(props) {\n    return(\n    <FooterEl>\n        <p>Created by: <br /> <a href=\"https://github.com/RafalKornel\"> <i class=\"fab fa-github-square\"></i> Rafał Kornel </a> </p>\n    </FooterEl>\n    )\n}\n\nexport default Footer;","import styled from \"styled-components\";\n\nconst Logo = styled.h1`\n    position: absolute;\n    font-size: 100px;\n    line-height: 70px;\n    margin: 2rem;\n    cursor: default;\n    user-select: none;\n\n    @media screen and (max-width: 1100px) {\n        margin: 0;\n        margin-top: 1rem;\n        font-size: 40px;\n        left: 40%;\n        transform: translateX(-50%);\n        text-align: center;\n    }\n\n    @media screen and (min-width: 1600px) {\n        margin: 4rem;\n    }\n\n`;\n\nexport default (props) => {\n    return <Logo>PICTIONAR</Logo>;\n  }","function Tutorial(props) {\n    return (\n        <article className=\"tutorial\">\n            <h2>Type phrases or words separated by coma, then hit “Send” button to add them to database!\n            Words can only contain letters and numbers, and can be separated by spaces to form phrases.\n            </h2>\n        </article>\n    );\n}\n\nexport default Tutorial;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n    min-width: 200px;\n    width: max-content;\n    height: 70px;\n    z-index: 2;\n    border-radius: 9px;\n    display: flex;\n    flex-direction: column;\n    margin: 10px;\n    cursor: default;\n\n    background-color: var(--input-color);\n    color: var(--form-color);\n\n    p {\n        margin: 5px 10px;\n    }\n`;\n\nconst Word = styled.p`\n    font-size: 1.6em;\n    text-align: left;\n`;\n\nconst Author = styled.p`\n    font-size: 1.3em;\n    text-align: right;\n`;\n\nexport default function Panel(props) {\n    return (\n        <Wrapper>\n            <Word>{props.word}</Word>\n            <Author>{props.author}</Author>\n        </Wrapper>\n    );\n}","import Panel from \"./panel\";\nimport React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\n// < SVG's components >\nfunction SVGPathSmall() {\n    return (\n        <svg width=\"0\" height=\"0\">\n            <defs>\n                <clipPath id=\"smallClip\">\n                    <path d=\"M632 0V553H0L632 0Z\" />\n                </clipPath>\n            </defs>\n        </svg>\n    );\n}\n\nfunction SVGPathBig() {\n    return (\n        <svg width=\"0\" height=\"0\">\n            <defs>\n                <clipPath id=\"mainClip\">\n                    <path d=\"M2828 0H0V2189H2226L2828 1664V0Z\" />\n                </clipPath>\n            </defs>\n        </svg>\n    );\n}\n// </ SVG's components >\n\n\n// < STYLE >\nconst AnimationContainer = styled.div`\n    position: absolute;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n`;\n\nconst corner = styled.div`\n    width: 632px;\n    height: 553px;\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    clip-path: url(#smallClip);\n    background-attachment: fixed;\n    transition: transform 500ms ease;\n\n    @media screen and (max-width: 1100px) {\n        transform: scale(0.4) translate(75%, 75%);\n        bottom: 0%;\n    }\n`;\n\nconst SliderCorner = styled(corner)`\n    background-image: var(--bcg);\n    z-index: 2;\n\n    ${props => props.moved ? \"transform: translate(200px, 200px)\" : \"\"};\n\n\n    @media screen and (max-width: 1100px) {\n        background-image: none;\n        background-color: var(--gradient-light);\n\n        ${props => props.moved ? \"transform: scale(0.4) translate(109%, 109%)\" : \"\"};\n    }\n`;\n\nconst BackCorner = styled(corner)`\n    background-color: var(--form-color);\n    display: flex;\n\n    z-index: 0;\n`;\n\nconst MessagesWrapper = styled.div`\n    display: flex;\n    transform-origin: top left;\n    transform: rotate(-41deg) translate(-60%, 76%);\n    flex-direction: column;\n`;\n\nlet slideshow = keyframes`\n    0% { transform: translate(-50%, 0); }\n    100% { transform: translate(50%, 0); }\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    animation: ${slideshow} 30s linear infinite;\n`;\n\nconst RowWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n`;\n// </ STYLE >\n\n\nclass Corner extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            panels: [],\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.messages === this.props.messages || this.props.messages === []) return;\n\n        let panelsSorted = [[], [], []];\n        let panels = this.props.messages.map(({ user, word }, i) => (<Panel author={user} word={word} key={i} />));\n\n        panels.forEach(panel => {\n            let i = panel.key % 3;\n            panelsSorted[i].push(panel);\n        });\n\n        this.setState({ panels: panelsSorted });\n    }\n\n\n    render() {\n        return (\n            <AnimationContainer>\n                <SVGPathSmall />\n                <SVGPathBig />\n\n                <SliderCorner moved={this.props.switched} />\n                <BackCorner >\n                    <MessagesWrapper>\n                        <RowWrapper>\n                            <Row>{this.state.panels[0]}</Row>\n                            <Row>{this.state.panels[0]}</Row>\n                        </RowWrapper>\n                        <RowWrapper style={{transform:\"translate(300px, 0)\"}}>\n                            <Row>{this.state.panels[1]}</Row>\n                            <Row>{this.state.panels[1]}</Row>\n                        </RowWrapper>\n                        <RowWrapper>\n                            <Row>{this.state.panels[2]}</Row>\n                            <Row>{this.state.panels[2]}</Row>\n                        </RowWrapper>\n                    </MessagesWrapper>\n                </BackCorner>\n            </AnimationContainer>\n        )\n    }\n}\n\nexport default Corner;","import styled from \"styled-components\";\n\n// < STYLE >\nexport const Wrapper = styled.div`\n    display: flex;\n    margin: 0.5em 0;\n`;\n\nexport const ErrorMessage = styled.p`\n    color: red;\n    margin: auto;\n    line-height: 100%;\n`;\n\nexport const SubmitButton = styled.button`\n    background-color: var(--input-color);\n    color: var(--form-color);\n    font-size: 1.15em;\n    width: 100px;\n    height: 30px;\n    margin-left: auto;  \n    margin-bottom: auto;\n`;\n\nexport const Bar = styled.div`\n    width: 90%;\n    height: 6px;\n    transition: 150ms all ease;\n    background-color: var(--input-color);\n    border-radius: 9px;\n    margin-left: auto;\n`;\n\nexport const InnerFieldWrapper = styled.div.attrs(props => ({\n    tabIndex: \"-1\",\n}))\n`\n    &:focus-within {\n        outline: none;\n    }\n\n    &:focus-within > ${Bar} {\n        width: 100%;\n    }\n`;\n\nexport const Page = styled.div`\n    display: flex;\n    height: 100%;\n\n    @media screen and (max-width: 1100px) {\n        flex-direction: column;\n        margin-top: 6.5em;\n    }\n`;\n\nexport const GroupsSelect = (props) => (\n    <select \n        name=\"group\" \n        id=\"group\" \n        onChange={props.handleChange} \n        value={props.group}>\n            {props.groups.map(g => (\n                <option value={g}>{g}</option> ))}\n    </select>\n);","import React from \"react\";\nimport { GroupsSelect, SubmitButton, InnerFieldWrapper, Bar as ProtoBar } from \"../Utilities/common\"\nimport styled from \"styled-components\";\n\n//  < STYLE >\nconst Bar = styled(ProtoBar)`\n    margin-bottom: 1em;\n`;\n\nconst ButtonWrapper = styled.div`\n    margin-left: auto;\n    display: flex;\n    width: 90%;\n\n    select {\n        margin-right: 1em;\n        margin-left: auto;\n        \n        outline: none;\n        border-radius: 3px;\n        border: none;\n        font-size: 1.1em;\n\n        color: var(--input-color);\n        background: var(--form-color);\n    }\n\n    ${SubmitButton} {\n        margin-left: 0;\n    }\n`;\n\nconst Form = styled.form`\n    background-color: var(--form-color);\n    color: var(--text-color);\n\n    display: flex;\n    flex-direction: column;\n\n    transition: all 400ms ease;\n\n    border-radius: 10px;\n    width: 25em;\n    padding: 3em;\n    margin: 0 auto;\n    \n    textarea {\n        margin-left: 10%;\n        margin-top: 1em;\n        height: 12em;\n        width: 90%;\n        resize: none;\n        border: none;\n        outline: none;\n        background-color: var(--form-color);\n        color: var(--text-color);\n        font-size: 1.1em;\n    }\n\n    @media screen and (max-width: 1100px) {\n        width: 80%;\n        padding: 2em;\n    }\n`;\n//  </ STYLE >\n\n\nclass WordsForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = { \n            words: \"\",\n            csrf: \"\",\n            group: this.props.groups[0],\n        };\n    }\n\n    handleChange(e) {\n        console.log(e.target);\n        this.setState({ [e.target.id]:e.target.value });\n        console.log(this.state);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        let words_unfiltered = this.state.words.split(\",\");\n        let words = words_unfiltered.filter( (s) => s.match(\"^[A-Za-z0-9ąćęłńóśźżĄĘŁŃÓŚŹŻ ]+$\"))\n    \n        fetch(\"/api/add\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": this.state.csrf,\n\n            },\n            body: JSON.stringify({ \n                words: words,\n                group: this.state.group,\n            }),\n        })\n        .then(res => {\n    \n            if (res.ok)  return res.json()\n            else                    throw Error(`Bad response, status ${res.status}`)\n    \n        })\n        .then(data => {console.log(data); return data;})\n        .then(data => this.props.addedNewWords( data.added_words ) )\n        .catch(err => console.error(err));\n\n    }\n\n    componentDidMount() {\n        console.log(this.props.groups);\n        fetch(\"/api/add\", {\n            method: \"GET\",\n        })\n        .then(res => {\n            if (res.ok) return res.json()\n        })\n        .then(data => this.setState({ csrf: data.csrf_token }))\n        .then( () => console.log(this.state))\n        .catch(err => console.error(err));\n    }\n\n    render() {\n        return(\n            <Form \n                onSubmit={this.handleSubmit} \n                autoComplete=\"off\" \n                className=\"wordsForm\">\n\n                <label htmlFor=\"words\">Words: </label>\n                <InnerFieldWrapper>\n                    <textarea \n                        onChange={this.handleChange} \n                        id=\"words\" \n                        name=\"words\" \n                        placeholder=\"Type word(s) here\">\n                            {this.state.words}\n                    </textarea>\n                    <Bar />\n                </InnerFieldWrapper>\n\n                <ButtonWrapper>\n\n                    <GroupsSelect \n                        handleChange={this.handleChange}\n                        group={this.state.group}\n                        groups={this.props.groups}\n                    />\n                    <SubmitButton \n                        type=\"submit\" \n                        onSubmit={this.handleSubmit}>\n                            Submit\n                    </SubmitButton>\n                </ButtonWrapper>\n            </Form>\n        );\n    }\n}\n\nexport default WordsForm;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { GroupsSelect } from \"../Utilities/common\";\n\nconst ButtonWrapper = styled.div`\n    position: relative;\n    width: max-content;\n    margin: 0 auto;\n    \n    transition: 400ms all ease;\n\n    &:hover {\n        transform: scale(1.2);\n    }\n\n    & > button:hover {\n        transform: none;\n    }\n\n    button {\n        padding-bottom: 8%;\n    }\n\n    select {\n        position: absolute;\n        bottom: 25%;\n        left: 50%;\n        transform: translate(-50%, 50%);\n        border: none;\n        background-color: var(--input-color);\n        color: var(--form-color);\n        font-size: 1.1em;\n        text-align: right;\n    }\n\n    @media screen and (max-width: 1100px) {\n        margin: 0 auto;\n        \n        select {\n        right: 0.3em;\n        }\n    }\n`;\n\nconst Button = styled.button`\n    height: 3em;\n    background-color: var(--input-color);\n    color: var(--form-color);\n    border: none;\n    border-radius: 12px;\n    font-size: 36px;\n    margin: 0 30px;\n    width: 9em;\n\n    &:focus {\n        outline: none;\n    }\n\n\n    @media screen and (max-width: 1100px) {\n        font-size: 32px;\n        height: 2.5em;\n        width: 7em;\n    }\n`;\n\nconst NewWords = styled.h2`\n    font-size: 1.1em;\n    color: var(--form-color);\n    font-weight: bold;\n`;\n\nconst CopySucess = styled.h2`\n    color: var(--form-color);\n    font-weight: bold;\n`;\n\nconst Wrapper = styled.div`\n    text-align: center;\n    margin: auto;\n\n    transition: all 400ms ease;   \n\n    span {\n        color: var(--form-color);\n        font-weight: bold;\n    }\n\n    @media screen and (max-width: 1100px) {\n        padding-bottom: 10em;\n        width: 100%;\n\n        article {\n            margin: 20px 0;\n        }\n        \n        h2 {\n            margin: 0.5em 0;\n        }\n    }\n\n    @media screen and (max-width: 1250px) {\n        padding-bottom: 15em;\n    }\n`;\n\n\nclass WordsInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const addedWordsMessage = this.props.newWords.length > 0\n            ? <NewWordsInfo newWords={this.props.newWords} />\n            : null;\n\n        console.log(this.props.count);\n        return (\n            <Wrapper>\n                <article>\n                    {addedWordsMessage}\n                    <h2>There are <span>{this.props.count}</span> words in group <span>{this.props.selectedGroup}</span>.</h2>\n                    <h2>Hit the button below to get words from database</h2>\n                    <CopySucess>{this.props.copySuccess}</CopySucess>\n                </article>\n\n                <GetWordsButton\n                    showSuccessMessage={this.props.setSuccessMessage}\n                    groups={this.props.groups}\n                    setSelectedGroup={this.props.setSelectedGroup}\n                />\n            </Wrapper>\n        );\n    }\n}\n\nclass GetWordsButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { \n            group: \"all\",\n            groups: [\n                \"all\",\n                ...this.props.groups,\n            ]\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps !== this.props) {\n            this.setState({ groups: [\n                \"all\", \n                ...this.props.groups,\n            ]});\n        }\n    }\n\n    handleClick(e) {\n\n        let groups = this.state.group == \"all\" ? this.state.groups.slice(1) : [ this.state.group ];\n        let query = groups.reduce( (p, c) => (p += (c + \",\") ), \"\" ).slice(0, -1);\n\n        fetch(`/api/bank?groups=${query}`)\n            .then(res => res.json())\n            .then(data => {\n                navigator.clipboard.writeText(data);\n                this.props.showSuccessMessage();\n            })\n            .catch(err => console.error(err))\n    }\n\n    handleChange(e) {\n        this.setState({ group: e.target.value });\n        this.props.setSelectedGroup(e.target.value);\n    }\n\n    render() {\n        return (\n            <ButtonWrapper>\n                <Button\n                    type=\"button\"\n                    onClick={this.handleClick}>\n                    Get words!\n                </Button>\n                <GroupsSelect\n                    handleChange={this.handleChange}\n                    value={this.state.group}\n                    groups={this.state.groups}\n                />\n            </ButtonWrapper>\n        );\n    }\n}\n\nfunction NewWordsInfo(props) {\n    return (\n        <div>\n            <h2>Following words have been added to database:</h2>\n            <NewWords>{props.newWords}</NewWords>\n        </div>\n    )\n}\n\nexport default WordsInfo;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Themes from \"./themes\";\n\nconst labels = [\n    \"light gradient\",\n    \"dark gradient\",\n    \"text\",\n    \"main\",\n    \"accent\"\n];\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    margin: 1em 0;\n    min-height: 30%;\n\n    overflow-y: scroll;\n\n    & > h3, p {\n        margin: 0;\n    }\n    \n`;\n\nconst Box = styled.div`\n    height: 1.5em;\n    width: 1.5em;\n\n    box-sizing: border-box;\n    border: 2px solid black;\n    ${props => \"background: \" + props.rgb + \";\"}\n`;\n\nconst Button = styled.div`\n    padding: 0 0.5em;\n    display: flex;\n    align-items: center;\n    \n    transition: 400ms all ease;\n\n    p {\n        margin-right: auto;\n        cursor: default;\n    }\n\n    ${Box} {\n        margin: 0.5em 0;\n        margin-left: 5px;\n    }\n\n    &:hover {\n        backdrop-filter: contrast(120%);\n    }\n`;\n\nexport default class ColorPicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.setTheme = this.setTheme.bind(this);\n\n        this.themes = Themes;\n        this.names = Object.keys(this.themes);\n    }\n\n    setTheme(themeName) {\n        let theme = this.themes[themeName];\n\n        for (let prop in theme) {\n            document.documentElement.style.setProperty(prop, theme[prop]);\n        }\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <h3>Select theme</h3>\n\n                {this.names.map((name, i) => (\n                    <Button onClick={() => this.setTheme(name)} key={i}>\n                        <p>{name}</p>\n                        {Object.values(this.themes[name]).map( (rgb, i) => <Box rgb={rgb} key={i} title={labels[i]} />)}\n                    </Button>)\n                )\n                }\n            </Wrapper>\n        );\n    }\n}","import styled from \"styled-components\";\nimport { InnerFieldWrapper, Bar } from \"./common\"\n\n// < STYLE >\nconst Wrapper = styled.div`\n    margin: 0.9em 0;\n\n    input {\n        width: 90%;\n        margin-left: 10%;\n        line-height: 1.8em;\n        border: none;\n        outline: none;\n        background-color: var(--form-color);\n        color: var(--text-color);\n        font-size: 1.1em;\n    }\n\n`;\n// </ STYLE >\n\n\nfunction FormField(props) {\n    return (\n        <Wrapper>\n            <label htmlFor={props.id}>{props.children}</label>\n            <InnerFieldWrapper>\n                <input \n                    value={props.value} \n                    onChange={props.onChange} \n                    id={props.id} \n                    type={props.type} \n                    name={props.name} \n                    placeholder={props.placeholder}\n                    autoComplete={props.autoComplete || \"off\"}\n                    required />\n                <Bar />\n            </InnerFieldWrapper>\n        </Wrapper>\n    );\n}\n\nexport default FormField;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SubmitButton, ErrorMessage } from \"../Utilities/common\";\nimport FormField from \"../Utilities/formField\";\n\nconst SuccessMessage = styled(ErrorMessage)`\n    color: green;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    margin-top: 1em;\n\n    button {\n        margin: 0;\n        margin-top: auto;\n        margin-left: 1em;\n        margin-bottom: 0.2em;\n    }\n\n    form {\n        display: flex;\n        margin-bottom: 1em;\n\n        input {\n        }\n    }\n`;\n\nconst InputWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    width: 100%;\n\n    > div {\n        margin: 0.2em 0;\n    }\n\n    h3 {\n        margin: 0;\n    }\n\n    ${ErrorMessage}, ${SuccessMessage} {\n        margin-left: 10%;\n        margin-top: 0.5em;\n    }\n`;\n\n\n\nclass JoinForm extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.props.onSubmit}>\n                <InputWrapper>\n                    <h3>Join existing group</h3>\n                    <ErrorMessage>{this.props.errorMessage}</ErrorMessage>\n                    <SuccessMessage>{this.props.successMessage}</SuccessMessage>\n                    <FormField\n                        value={this.props.groupKey}\n                        id=\"joinKey\"\n                        type=\"text\"\n                        onChange={this.props.onChange}\n                        name=\"joinKey\"\n                        placeholder=\"Key\" />\n                </InputWrapper>\n                <SubmitButton type=\"submit\">Join</SubmitButton>\n            </form>\n        );\n    }\n}\nclass CreateForm extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.props.onSubmit} id=\"createForm\">\n                <InputWrapper>\n                    <h3>Create new group</h3>\n                    <ErrorMessage>{this.props.errorMessage}</ErrorMessage>\n                    <SuccessMessage>{this.props.successMessage}</SuccessMessage>\n                    <FormField\n                        value={this.props.name}\n                        id=\"createName\"\n                        type=\"text\"\n                        onChange={this.props.onChange}\n                        name=\"createName\"\n                        placeholder=\"Name\" />\n                    <FormField\n                        value={this.props.groupKey}\n                        id=\"createKey\"\n                        type=\"text\"\n                        onChange={this.props.onChange}\n                        name=\"createKey\"\n                        placeholder=\"Key\" />\n                </InputWrapper>\n                <SubmitButton type=\"submit\">Create</SubmitButton>\n            </form>\n        );\n    }\n}\nexport default class GroupManager extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.joinGroup = this.joinGroup.bind(this);\n        this.createGroup = this.createGroup.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.getCreateCSRF = this.getCreateCSRF.bind(this);\n        this.getJoinCSRF = this.getJoinCSRF.bind(this);\n\n        this.state = {\n            joinKey: \"\",\n            createName: \"\",\n            createKey: \"\",\n            joinErrorMessage: \"\",\n            createErrorMessage: \"\",\n            create_csrf: \"\",\n            join_csrf: \"\",\n        }\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.id]: e.target.value });\n    }\n\n    getCreateCSRF() {\n        fetch(\"/api/create_group\")\n            .then(res => {\n                if (res.ok) return res.json();\n            })\n            .then(data => {\n                this.setState({ create_csrf: data.csrf_token });\n            })\n            .catch(err => console.error(err));\n    }\n\n    getJoinCSRF() {\n        fetch(\"/api/join_group\")\n            .then(res => {\n                if (res.ok) return res.json();\n            })\n            .then(data => {\n                this.setState({ join_csrf: data.csrf_token });\n            })\n            .catch(err => console.error(err));\n    }\n\n\n    joinGroup(e) {\n        e.preventDefault();\n\n        let data = {\n            group_key: this.state.joinKey,\n        }\n\n        let options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": this.state.create_csrf,\n            },\n            body: JSON.stringify(data),\n        }\n\n        fetch(\"/api/join_group\", options)\n        .then(res => {\n            if (!res.ok) {\n                this.setState({ joinErrorMessage: \"Something went wrong!\" });\n                setTimeout(() => this.setState({ joinErrorMessage: \"\"}), 5000);\n                throw new Error(\"Something went wrong.\");\n            }\n            return res.json();\n        })\n        .then(data => {\n            this.setState({ joinSuccessMessage: \"Joined group \" + data.name });\n            this.props.fetchUserData();\n            setTimeout(() => this.setState({ joinSuccessMessage: \"\" }), 5000);\n        })\n        .catch(err => console.error(err));\n    }\n\n    createGroup(e) {\n        e.preventDefault();\n\n        let data = {\n            group_key: this.state.createKey,\n            group_name: this.state.createName\n        }\n\n        let options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": this.state.create_csrf,\n            },\n            body: JSON.stringify(data),\n        }\n\n        fetch(\"/api/create_group\", options)\n        .then(res => {\n            if (!res.ok) {\n                this.setState({ createErrorMessage: \"Something went wrong!\" });\n                setTimeout(() => this.setState({ createErrorMessage: \"\" }), 5000);\n                throw new Error(\"Something went wrong.\");\n            }\n            return res.json();\n        })\n        .then(data => {\n            this.setState({ createSuccessMessage: \"Created group \" + data.name + \" with key \" + data.key });\n            setTimeout(() => this.setState({ createSuccessMessage: \"\" }), 5000);\n        })\n        .catch(err => console.error(err));\n    }\n\n    render() {\n        const join = this.props.loggedIn\n            ? (<JoinForm\n                onSubmit={this.joinGroup}\n                onChange={this.handleChange}\n                groupKey={this.state.joinKey}\n                errorMessage={this.state.joinErrorMessage}\n                successMessage={this.state.joinSuccessMessage}\n                onMount={this.getJoinCSRF}\n            />)\n            : \"\";\n        return (\n            <Wrapper>\n                { join}\n                <CreateForm\n                    onSubmit={this.createGroup}\n                    onChange={this.handleChange}\n                    name={this.state.createName}\n                    groupKey={this.state.createKey}\n                    errorMessage={this.state.createErrorMessage}\n                    successMessage={this.state.createSuccessMessage}\n                    onMount={this.getCreateCSRF}\n                />\n            </Wrapper>\n        );\n    }\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport ColorPicker from \"./colorPicker\";\nimport GroupManager from \"./groupManager\";\n\nconst Icon = (props) => (\n    <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" width=\"122.88px\" height=\"122.878px\" viewBox=\"0 0 122.88 122.878\" enable-background=\"new 0 0 122.88 122.878\"><g>\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M101.589,14.7l8.818,8.819c2.321,2.321,2.321,6.118,0,8.439l-7.101,7.101 c1.959,3.658,3.454,7.601,4.405,11.752h9.199c3.283,0,5.969,2.686,5.969,5.968V69.25c0,3.283-2.686,5.969-5.969,5.969h-10.039 c-1.231,4.063-2.992,7.896-5.204,11.418l6.512,6.51c2.321,2.323,2.321,6.12,0,8.44l-8.818,8.819c-2.321,2.32-6.119,2.32-8.439,0 l-7.102-7.102c-3.657,1.96-7.601,3.456-11.753,4.406v9.199c0,3.282-2.685,5.968-5.968,5.968H53.629 c-3.283,0-5.969-2.686-5.969-5.968v-10.039c-4.063-1.232-7.896-2.993-11.417-5.205l-6.511,6.512c-2.323,2.321-6.12,2.321-8.441,0 l-8.818-8.818c-2.321-2.321-2.321-6.118,0-8.439l7.102-7.102c-1.96-3.657-3.456-7.6-4.405-11.751H5.968 C2.686,72.067,0,69.382,0,66.099V53.628c0-3.283,2.686-5.968,5.968-5.968h10.039c1.232-4.063,2.993-7.896,5.204-11.418l-6.511-6.51 c-2.321-2.322-2.321-6.12,0-8.44l8.819-8.819c2.321-2.321,6.118-2.321,8.439,0l7.101,7.101c3.658-1.96,7.601-3.456,11.753-4.406 V5.969C50.812,2.686,53.498,0,56.78,0h12.471c3.282,0,5.968,2.686,5.968,5.969v10.036c4.064,1.231,7.898,2.992,11.422,5.204 l6.507-6.509C95.471,12.379,99.268,12.379,101.589,14.7L101.589,14.7z M61.44,36.92c13.54,0,24.519,10.98,24.519,24.519 c0,13.538-10.979,24.519-24.519,24.519c-13.539,0-24.519-10.98-24.519-24.519C36.921,47.9,47.901,36.92,61.44,36.92L61.44,36.92z\" />\n    </g>\n    </svg>\n);\n\nconst Button = styled.button`\n\n    width: 8em;\n    height: 2em;\n    font-size: 1.1em;\n    color: var(--form-color);\n    background-color: var(--input-color);\n\n    @media screen and (max-width: 1100px) {\n        font-size: 0.9em;\n        top: unset;\n        bottom: 0.5em;\n        right: unset;\n        left: 0.5em;\n        width: 4.5em;\n    }\n`;\n\nconst Wrapper = styled.div`\n    position: absolute;\n    top: 2rem;\n    right: 2rem;\n    padding: 2rem;\n    width: 20%;\n    min-height: 60%;\n    display: flex;\n    flex-direction: column;\n    z-index: 4;\n    border-radius: 10px;\n    background-color: var(--form-color);\n    transition: 500ms all cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n    clip-path: circle(8% at 88% 8%);\n\n    & > * {\n        transition: 500ms all ease-in-out;\n        opacity: 0;\n    }\n\n    &:hover {\n        clip-path: circle(100% at 50% 50%);\n    }\n\n    &:hover > * {\n        opacity: 1;\n    }\n\n    > svg {\n        transition: 200ms opacity ease;\n        position: absolute;\n        transform: translate(-50%, -50%) scale(0.35);\n        left: 88%;\n        top: 8%;\n        opacity: 1;\n        fill: var(--input-color);\n    }\n\n    &:hover > svg {\n        opacity: 0;\n    }\n\n    h1 {\n        margin: 0;\n    }\n\n    @media screen and (max-width: 1100px) {\n        width: 60%;\n        height: auto;\n\n        top: 1rem;\n        right: 1rem;\n\n        clip-path: circle(5% at 92% 2em);\n\n        > svg {\n            left: 92%;\n            top: 2em;\n            transform: translate(-50%, -50%) scale(0.15);\n        }\n\n    }\n`;\n\nconst Header = styled.h1`\n    margin: auto 0;\n    margin-right: auto;\n`;\n\nconst ButtonsWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 100%;\n\n    margin-top: auto;\n`;\n\n\n\nconst LogoutButton = (props) => (\n    <Button\n        onClick={props.onLogout}\n        type=\"button\">\n        Logout\n    </Button>\n);\n\nconst CornerButton = (props) => (\n    <Button\n        onClick={props.switchCorner}>\n        Switch corner\n    </Button>\n);\n\n\nexport default class Settings extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <Icon />\n                <Header>Hello {this.props.name}!</Header>\n                <GroupManager \n                    loggedIn={this.props.loggedIn} \n                    fetchUserData={this.props.fetchUserData}\n                    />\n                <ColorPicker />\n                { this.props.loggedIn \n                ? <ButtonsWrapper>\n                    <LogoutButton onLogout={this.props.onLogout} />\n                    <CornerButton switchCorner={this.props.switchCorner} />\n                </ButtonsWrapper>\n                : \"\" }\n            </Wrapper>\n        );\n    }\n}","import React from \"react\"\nimport Tutorial from \"./tutorial\";\nimport Corner from \"../CornerAnimation\";\nimport WordsForm from \"./wordsForm\";\nimport WordsInfo from \"./wordsInfo\";\nimport Settings from \"../Settings\";\nimport styled from \"styled-components\";\nimport { Page } from \"../Utilities/common\";\n\n// < STYLE >\nconst Wrapper = styled(Page)`\n    padding-right: 20%;\n\n    .tutorial {\n        padding-top: 5em;\n    }\n\n    section {\n        flex: 1;\n        margin: auto 2em;\n        display: flex;\n        flex-direction: column;\n    }\n\n    @media screen and (max-width: 1100px) {\n        position: relative;\n        padding: 0;\n        height: auto;\n\n        .tutorial {\n            padding-top: 0;\n        }\n    }\n`;\n// < STYLE >\n\n\nexport default class MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addedNewWords = this.addedNewWords.bind(this);\n        this.setSuccessMessage = this.setSuccessMessage.bind(this);\n        this.switchCorner = this.switchCorner.bind(this);\n        this.setSelectedGroup = this.setSelectedGroup.bind(this);\n\n        this.cache = [];\n\n        this.state = {\n            count: 0,\n            groupsCount: [],\n            messages: [],\n            copySuccess: \"\",\n            newWords: [],\n            groups: [],\n            selectedCountGroup: \"all\",\n        }\n    }\n\n    addedNewWords(words) {\n        this.setState({ newWords: words });\n        setTimeout(() => this.setState({ newWords: \"\" }), 5000);\n        this.fetchWordsCount();\n        this.fetchWordsForSlider();\n    }\n\n    setSuccessMessage() {\n        this.setState({ copySuccess: \"Database words have been copied to clipboard.\" });\n        setTimeout(() => this.setState({ copySuccess: \"\" }), 5000);\n    }\n\n    setSelectedGroup(group) {\n        this.setState({ selectedCountGroup: group });\n        let c = this.state.groupsCount[group];\n        this.setState({ count:c });\n    }\n\n    fetchWordsForSlider() {\n        fetch(\"/api/words\")\n            .then(res => {\n                if (res.ok) return res.json();\n            })\n            .then(data => {\n                this.setState({ messages: data });\n            })\n            .catch(err => console.error(err));\n    }\n\n    fetchWordsCount() {\n        fetch(\"/api/count\")\n            .then(res => {\n                if (res.ok) return res.json()\n            })\n            .then(data => { \n                this.setState(state => ({ \n                    groupsCount: data, \n                    count: data[state.selectedCountGroup],\n                }))\n            })\n            .catch(err => console.error(err));\n    }\n\n    switchCorner() {\n        this.props.switchCorner();\n        if (this.state.messages.length > 0) {\n            this.cache = this.state.messages;\n            setTimeout(() => this.setState({ messages: [] }), 300);\n        }\n        else {\n            this.setState({ messages: this.cache });\n        }\n    }\n\n    componentDidMount() {\n        this.fetchWordsForSlider();\n        this.fetchWordsCount();\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <section>\n                    <Tutorial />\n                    <WordsForm \n                        addedNewWords={this.addedNewWords} \n                        groups={this.props.groups} \n                    />\n                </section>\n                <section>\n                    <WordsInfo\n                        newWords={this.state.newWords}\n                        count={this.state.count}\n                        selectedGroup={this.state.selectedCountGroup}\n                        setSelectedGroup={this.setSelectedGroup}\n                        copySuccess={this.state.copySuccess}\n                        setSuccessMessage={this.setSuccessMessage}\n                        groups={this.props.groups}\n                    />\n                </section>\n\n                <Corner switched={this.props.switched} messages={this.state.messages} />\n            </Wrapper>\n        );\n    }\n}","import styled from \"styled-components\";\n\nconst Wrapper = styled.article`\n    margin: auto 3rem;\n    margin-right: 10%;\n    flex: 1;\n    font-size: 1.2em;\n\n    ul {\n        padding-left: 0;\n        list-style: none;\n    }\n\n    li {\n        margin: 20px 0;\n    }\n\n    @media screen and (max-width: 1100px) {\n        margin: 0 1em;\n        flex: unset;\n    }\n\n`;\n\nfunction Info() {\n    return (\n        <Wrapper>\n                <ul>\n                    <li>\n                        <h2>\n                            This app allows you to create and\n                            store words dictionary. First, you have to\n                            log in, or register, if you don't have an account.\n                        </h2>\n                    </li>\n                    <li>\n                        <h2>\n                            After login you can see already existing \n                            words in slider, or add your\n                            own ones!\n                        </h2>\n                    </li>\n                    <li>\n                        <h2>\n                            You can also retrieve dictionary from the database.\n                            Words are returned in form of text, separated by comma (so they are \n                            ready to put in pictionary game)\n                        </h2>\n                    </li>\n                </ul>\n\n        </Wrapper>\n    )\n}\n\nexport default Info;","import React from \"react\";\nimport FormField from \"../Utilities/formField\"\nimport { Wrapper, ErrorMessage, SubmitButton } from \"../Utilities/common\";\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            name: \"\",\n            password: \"\",\n            errorMessage: \"\",\n            csrf: \"\",\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"/api/login\", {\n            method: \"GET\",\n        })\n            .then(res => {\n                if (res.ok) return res.json()\n            })\n            .then(data => {\n                this.setState({ csrf: data.csrf_token })\n            })\n            .catch(err => console.error(err));\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.id]: e.target.value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        let data = {\n            user_name: this.state.name,\n            user_pass: this.state.password,\n        }\n\n        let options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": this.state.csrf,\n            },\n            body: JSON.stringify(data),\n        }\n\n        fetch(\"/api/login\", options)\n            .then(res => {\n                if (!res.ok) {\n                    this.setState({ errorMessage: \"Something went wrong!\" });\n                    throw new Error(\"Something went wrong.\");\n                }\n                this.props.onLogin();\n            })\n            .catch(err => console.error(err));\n\n    }\n\n    render() {\n        return (\n            <form \n                onSubmit={this.handleSubmit} \n                id=\"loginForm\" \n                autoComplete=\"off\">\n       \n                <FormField \n                    id=\"name\" \n                    value={this.state.name} \n                    onChange={this.handleChange} \n                    name=\"user_name\" \n                    type=\"text\" >\n                        Login: \n                </FormField>\n       \n                <FormField \n                    id=\"password\" \n                    value={this.state.password} \n                    onChange={this.handleChange} \n                    name=\"user_pass\" \n                    type=\"password\" >\n                        Password: \n                </FormField>\n\n                <Wrapper>\n                    <ErrorMessage>{this.state.errorMessage}</ErrorMessage>\n                    <SubmitButton type=\"submit\">Submit</SubmitButton>\n                </Wrapper>\n\n            </form>\n        );\n    }\n}\n\n\nexport default LoginForm;","import React from \"react\";\nimport FormField from \"../Utilities/formField\"\nimport { Wrapper, ErrorMessage, SubmitButton } from \"../Utilities/common\";\n\n\nclass RegisterForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            name: \"\",\n            password: \"\",\n            password2: \"\",\n            secretKey: \"\",\n            errorMessage: \"\",\n            csrf: \"\",\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"/api/register\", {\n            method: \"GET\",\n        })\n            .then(res => {\n                if (res.ok) return res.json()\n            })\n            .then(data => {\n                console.log(data);\n                this.setState({ csrf: data.csrf_token })\n            })\n            .catch(err => console.error(err));\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.id]: e.target.value });\n        console.log(this.state);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        let data = {\n            user_name: this.state.name,\n            user_pass: this.state.password,\n            user_pass_repeat: this.state.password2,\n            secret_key: this.state.secretKey,\n        }\n\n        let options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": this.state.csrf,\n            },\n            body: JSON.stringify(data),\n        }\n\n        fetch(\"/api/register\", options)\n            .then(res => {\n                if (!res.ok) {\n                    this.setState({ errorMessage: \"Something went wrong\" });\n                    return\n                }\n                console.log(\"sucess\");\n            })\n            .catch(err => console.error(err));\n\n        console.log(this.state);\n    }\n\n\n    render() {\n        return (\n            <form \n                onSubmit={this.handleSubmit} \n                id=\"registerForm\" \n                autocomplete=\"off\" \n                style={this.state.style}>\n\n                <FormField \n                    id=\"name\" \n                    value={this.state.name} \n                    onChange={this.handleChange} \n                    name=\"user_name\" \n                    type=\"text\" >\n                        Login: \n                </FormField>\n                \n                <FormField \n                    id=\"password\" \n                    value={this.state.password} \n                    onChange={this.handleChange} \n                    name=\"user_pass\" \n                    type=\"password\" >\n                        Password: \n                </FormField>\n\n                <FormField \n                    id=\"password2\" \n                    value={this.state.password2} \n                    onChange={this.handleChange} \n                    name=\"user_pass2\" \n                    type=\"password\" >\n                        Retype password: \n                </FormField>\n\n                <FormField \n                    id=\"secretKey\" \n                    value={this.state.secretKey} \n                    onChange={this.handleChange} \n                    name=\"secret_key\" \n                    type=\"text\" >\n                        Group key: \n                </FormField>\n\n\n                <Wrapper>\n                    <ErrorMessage>{this.state.errorMessage}</ErrorMessage>\n                    <SubmitButton type=\"submit\">Submit</SubmitButton>\n                </Wrapper>\n\n            </form>\n        );\n    }\n}\n\n\nexport default RegisterForm;","import React from \"react\";\nimport LoginForm from \"./login\";\nimport RegisterForm from \"./register\";\nimport styled from \"styled-components\";\n\n// < STYLE >\nconst LoginWindow = styled.div`\n    width: 25em;\n    border-radius: 10px;\n    margin: auto;\n    margin-right: 5em;\n    padding: 2.6em;\n\n    background-color: var(--form-color);\n    color: var(--text-color);\n\n    &, & form {\n        display: flex;\n        flex-direction: column;\n    }\n    \n    @media screen and (max-width: 1100px) {\n        width: 60%;\n        margin: 0 auto;\n        margin-bottom: 10%;\n    }\n`;\n\nconst Switch = styled.div`\n    position: relative;\n    width: 100%;\n    margin-top: 1em;\n    display: flex;\n\n    button {\n        background-color: var(--form-color);\n        color: var(--text-color);\n        font-size: 1.3em;\n        flex: 1;\n        transition: all 300ms ease;\n    }\n\n    button.active {\n        font-size: 1.8em;\n        color: var(--input-color);\n        font-weight: bold;\n    }\n\n    button.active:hover {\n        transform: none;\n    }\n`;\n\nconst Divisor = styled.div`\n    width: 6px;\n    height: 3em;\n    border-radius: 5px;\n    background-color: var(--input-color);\n    margin: 0 auto;\n`;\n\nconst DivisorWrapper = styled.div`flex: 1;`;\n// </ STYLE >\n\n\nclass LoginManager extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.switchToLogin = this.switchToLogin.bind(this);\n        this.switchToRegister = this.switchToRegister.bind(this);\n\n        this.state = { tab: \"login\" };\n    }\n\n    switchToLogin() {\n        this.setState({ tab: \"login\" });\n    }\n\n    switchToRegister() {\n        this.setState({ tab: \"register\" });\n    }\n\n    render() {\n        const form =\n            this.state.tab === \"login\"\n                ? <LoginForm onLogin={this.props.onLogin} />\n                : <RegisterForm />\n\n        return (\n            <LoginWindow>\n\n                { form }\n\n                <Switch>\n                    <button\n                        type=\"button\"\n                        className={this.state.tab === \"register\" ? 'active' : \"\"}\n                        onClick={this.switchToRegister} >\n                        Register\n                    </button>\n\n                    <DivisorWrapper>\n                        <Divisor />\n                    </DivisorWrapper>\n\n                    <button\n                        type=\"button\"\n                        className={this.state.tab === \"login\" ? 'active' : \"\"}\n                        onClick={this.switchToLogin}>\n                        Login\n                    </button>\n                </Switch>\n            </LoginWindow>\n        );\n    }\n}\n\nexport default LoginManager;","import React from \"react\"\nimport Info from \"./info\";\nimport LoginManager from \"../LoginManager\";\nimport { Page } from \"../Utilities/common\"\nimport styled from \"styled-components\";\n\nconst Wrapper = styled(Page)`\n  @media screen and (max-width: 1100px) {\n    article h2 {\n      margin: 0;\n      font-size: 20px;\n    }\n    article li {\n      margin: 10px 0;\n    }\n  }\n`;\n\nexport default function LoginPage(props) {\n    return (\n      <Wrapper>\n        <Info />\n        <LoginManager onLogin={props.onLogin} />\n      </Wrapper>\n    )\n  }\n  \n","import React from \"react\"\nimport './global.css';\nimport Footer from \"./Utilities/footer\";\nimport Logo from \"./Utilities/logo\";\nimport MainPage from \"./MainPage\";\nimport LoginPage from \"./LoginPage\";\nimport Settings from \"./Settings\";\n\nclass UI extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onLogin = this.onLogin.bind(this);\n        this.onLogout = this.onLogout.bind(this);\n        this.switchCorner = this.switchCorner.bind(this);\n        this.fetchUserData = this.fetchUserData.bind(this);\n\n        this.state = {\n            loggedIn: false,\n            opened: false,\n            username: \"stranger\",\n            groups: [],\n        };\n    }\n\n    fetchUserData() {\n        fetch(\"/api/user\", {\n            method: \"GET\",\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                }\n                else {\n                    this.setState({ loggedIn: false });\n                    throw new Error(\"Not logged.\");\n                }\n            })\n            .then(data => {\n                this.setState({\n                    loggedIn: true,\n                    username: data.name,\n                    groups: data.groups,\n                });\n                this.openCorner();\n            })\n            .catch(err => console.error(err));\n    }\n\n    componentDidMount() {\n        this.fetchUserData();\n    }\n\n    onLogin() {\n        this.fetchUserData();\n    }\n\n    onLogout() {\n        fetch(\"/api/logout\", {\n            method: \"GET\"\n        })\n            .then(res => {\n                if (res.ok) {\n                    this.setState({ \n                        loggedIn: false,\n                        username: \"stranger\",\n                    });\n                }\n            })\n            .catch(err => console.error(err));\n    }\n\n    openCorner() {\n        setTimeout(\n            () => { this.setState(state => ({ opened: state.loggedIn })) }\n            , 0)\n    }\n\n    switchCorner() {\n        setTimeout(\n            () => { this.setState(state => ({ opened: !state.opened })) }\n            , 0)\n        console.log(this.state)\n    }\n\n\n    render() {\n        let page = this.state.loggedIn\n            ? <MainPage \n                switched={this.state.opened} \n                switchCorner={this.switchCorner} \n                onLogout={this.onLogout} \n                groups={this.state.groups} />\n            : <LoginPage onLogin={this.onLogin} />\n\n        return (\n            <div className=\"app\">\n                <Logo />\n                <Settings\n                    name={this.state.username}\n                    onLogout={this.onLogout}\n                    switchCorner={this.switchCorner}\n                    loggedIn={this.state.loggedIn}\n                    fetchUserData={this.fetchUserData}\n                />\n                { page}\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default UI;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport UI from './components/ui';\n\nReactDOM.render(\n  <React.StrictMode>\n    <UI />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}