{"version":3,"sources":["components/Utilities/footer.jsx","components/Utilities/logo.jsx","components/MainPage/tutorial.jsx","components/CornerAnimation/panel.jsx","components/CornerAnimation/index.jsx","components/Utilities/common.jsx","components/Utilities/formLogic.jsx","components/MainPage/wordsForm.jsx","components/MainPage/wordsInfo.jsx","components/MainPage/index.jsx","components/LoginPage/info.jsx","components/Utilities/formField.jsx","components/LoginManager/login.jsx","components/LoginManager/register.jsx","components/LoginManager/index.jsx","components/LoginPage/index.jsx","components/Settings/colorPicker.jsx","components/GroupManager/common.jsx","components/GroupManager/createGroup.jsx","components/GroupManager/joinGroup.jsx","components/GroupManager/manageGroups.jsx","components/GroupManager/index.jsx","components/Settings/index.jsx","components/app.jsx","index.js"],"names":["FooterWrapper","styled","footer","Footer","props","href","className","LogoHeader","h1","Logo","Tutorial","Wrapper","div","Word","p","Author","Panel","word","author","SVGPathSmall","width","height","id","d","SVGPathBig","AnimationContainer","corner","SliderCorner","moved","BackCorner","MessagesWrapper","slideshow","keyframes","Row","RowWrapper","Corner","state","panels","prevProps","prevState","messages","this","panelsSorted","map","i","user","forEach","panel","key","push","setState","switched","style","transform","React","Component","ErrorMessage","SuccessMessage","SubmitButton","button","Bar","InnerFieldWrapper","attrs","tabIndex","Page","GroupsSelect","name","onChange","handleChange","value","group","groups","withFormLogic","WrappedComponent","dataShape","endpoint","createSuccessMessage","undefined","messageTimeout","bind","handleSubmit","fetchInterval","csrf","errorMessage","successMessage","fetchCSRFToken","setInterval","clearInterval","fetch","method","then","res","ok","json","window","location","reload","Error","data","csrf_token","catch","err","console","error","type","message","messageType","setTimeout","e","target","preventDefault","options","headers","body","JSON","stringify","text","setMessage","log","afterSuccessfulFetch","passThroughProps","ProtoBar","ButtonWrapper","Form","form","WordsForm","onSubmit","autoComplete","htmlFor","placeholder","words","Button","NewWords","h2","CopySucess","GetWordsButton","handleClick","query","slice","reduce","c","navigator","clipboard","writeText","showSuccessMessage","setSelectedGroup","onClick","NewWordsInfo","newWords","WordsInfo","addedWordsMessage","length","count","selectedGroup","filter","copySuccess","setSuccessMessage","MainPage","addedNewWords","switchCorner","cache","groupsCount","selectedCountGroup","added_words","fetchUserData","fetchWordsForSlider","article","Info","FormField","children","required","LoginForm","user_name","login","user_pass","pass","RegisterForm","user_pass_repeat","secret_key","LoginWindow","Switch","Divisor","DivisorWrapper","LoginManager","switchToLogin","switchToRegister","tab","onLogin","LoginPage","labels","Box","rgb","ColorPicker","setTheme","themes","Themes","names","Object","keys","themeName","theme","prop","document","documentElement","setProperty","values","title","H3","h3","GroupComponentWrapper","Header","for","opened","CreateForm","group_name_create","group_key_create","JoinForm","group_key_join","GroupsWrapper","LabelWrapper","Label","gridColumn","GroupPanel","groupKey","ManageForm","GroupManager","join","create","manage","sectionName","tempState","loggedIn","Icon","version","x","y","viewBox","enableBackground","fillRule","clipRule","ButtonsWrapper","LogoutButton","onLogout","CornerButton","Settings","App","username","openCorner","page","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a156606f.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\n\n// < STYLE >\nconst FooterWrapper = styled.footer`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  margin: 0.5em;\n  text-align: right;\n  font-size: 0.9em;\n  color: var(--form-color);\n  z-index: 3;\n\n  p {\n      margin: 0;\n  }\n\n  a {\n    text-decoration: none;\n    color: var(--form-color);\n    font-size: 1.4em;\n    font-weight: bold;\n  }\n\n    @media screen and (max-width: 1100px) {\n        text-align: center;\n        top: 5em;\n        bottom: unset;\n        height: auto;\n        left: 50%;\n        transform: translateX(-50%);\n    }\n`;\n// </ STYLE >\n\n\nfunction Footer(props) {\n    return(\n    <FooterWrapper>\n        <p>Created by: <br /> <a href=\"https://github.com/RafalKornel\"> <i className=\"fab fa-github-square\"></i> Rafał Kornel </a> </p>\n    </FooterWrapper>\n    )\n}\n\nexport default Footer;","import styled from \"styled-components\";\n\n// < STYLE >\nconst LogoHeader = styled.h1`\n    position: absolute;\n    font-size: 100px;\n    line-height: 70px;\n    margin: 2rem;\n    cursor: default;\n    user-select: none;\n\n    @media screen and (max-width: 1100px) {\n        margin: 0;\n        margin-top: 1rem;\n        font-size: 40px;\n        left: 40%;\n        transform: translateX(-50%);\n        text-align: center;\n    }\n\n    @media screen and (min-width: 1600px) {\n        margin: 4rem;\n    }\n`;\n// </ STYLE >\n\nexport default function Logo(props) {\n    return <LogoHeader>PICTIONAR</LogoHeader>;\n  }","export default function Tutorial(props) {\n    return (\n        <article className=\"tutorial\">\n            <h2>Type phrases or words separated by coma, then hit “Send” button to add them to database!\n            Words can only contain letters and numbers, and can be separated by spaces to form phrases.\n            </h2>\n        </article>\n    );\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n    min-width: 200px;\n    width: max-content;\n    height: 70px;\n    z-index: 2;\n    border-radius: 9px;\n    display: flex;\n    flex-direction: column;\n    margin: 10px;\n    cursor: default;\n\n    background-color: var(--input-color);\n    color: var(--form-color);\n\n    p {\n        margin: 5px 10px;\n    }\n`;\n\nconst Word = styled.p`\n    font-size: 1.6em;\n    text-align: left;\n`;\n\nconst Author = styled.p`\n    font-size: 1.3em;\n    text-align: right;\n`;\n\nexport default function Panel(props) {\n    return (\n        <Wrapper>\n            <Word>{props.word}</Word>\n            <Author>{props.author}</Author>\n        </Wrapper>\n    );\n}","import Panel from \"./panel\";\nimport React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\n// < SVG's components >\nfunction SVGPathSmall() {\n    return (\n        <svg width=\"0\" height=\"0\">\n            <defs>\n                <clipPath id=\"smallClip\">\n                    <path d=\"M632 0V553H0L632 0Z\" />\n                </clipPath>\n            </defs>\n        </svg>\n    );\n}\n\nfunction SVGPathBig() {\n    return (\n        <svg width=\"0\" height=\"0\">\n            <defs>\n                <clipPath id=\"mainClip\">\n                    <path d=\"M2828 0H0V2189H2226L2828 1664V0Z\" />\n                </clipPath>\n            </defs>\n        </svg>\n    );\n}\n// </ SVG's components >\n\n\n// < STYLE >\nconst AnimationContainer = styled.div`\n    position: absolute;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n`;\n\nconst corner = styled.div`\n    width: 632px;\n    height: 553px;\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    clip-path: url(#smallClip);\n    background-attachment: fixed;\n    transition: transform 500ms ease;\n\n    @media screen and (max-width: 1100px) {\n        transform: scale(0.4) translate(75%, 75%);\n        bottom: 0%;\n    }\n`;\n\nconst SliderCorner = styled(corner)`\n    background-image: var(--bcg);\n    z-index: 2;\n\n    ${props => props.moved ? \"transform: translate(200px, 200px)\" : \"\"};\n\n\n    @media screen and (max-width: 1100px) {\n        background-image: none;\n        background-color: var(--gradient-light);\n\n        ${props => props.moved ? \"transform: scale(0.4) translate(109%, 109%)\" : \"\"};\n    }\n`;\n\nconst BackCorner = styled(corner)`\n    background-color: var(--form-color);\n    display: flex;\n\n    z-index: 0;\n`;\n\nconst MessagesWrapper = styled.div`\n    display: flex;\n    transform-origin: top left;\n    transform: rotate(-41deg) translate(-60%, 76%);\n    flex-direction: column;\n`;\n\nlet slideshow = keyframes`\n    0% { transform: translate(-50%, 0); }\n    100% { transform: translate(50%, 0); }\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    animation: ${slideshow} 30s linear infinite;\n`;\n\nconst RowWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n`;\n// </ STYLE >\n\n\nclass Corner extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            panels: [],\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.messages === this.props.messages || this.props.messages === []) return;\n\n        let panelsSorted = [[], [], []];\n        let panels = this.props.messages.map(({ user, word }, i) => (<Panel author={user} word={word} key={i} />));\n\n        panels.forEach(panel => {\n            let i = panel.key % 3;\n            panelsSorted[i].push(panel);\n        });\n\n        this.setState({ panels: panelsSorted });\n    }\n\n\n    render() {\n        return (\n            <AnimationContainer>\n                <SVGPathSmall />\n                <SVGPathBig />\n\n                <SliderCorner moved={this.props.switched} />\n                <BackCorner >\n                    <MessagesWrapper>\n                        <RowWrapper>\n                            <Row>{this.state.panels[0]}</Row>\n                            <Row>{this.state.panels[0]}</Row>\n                        </RowWrapper>\n                        <RowWrapper style={{transform:\"translate(300px, 0)\"}}>\n                            <Row>{this.state.panels[1]}</Row>\n                            <Row>{this.state.panels[1]}</Row>\n                        </RowWrapper>\n                        <RowWrapper>\n                            <Row>{this.state.panels[2]}</Row>\n                            <Row>{this.state.panels[2]}</Row>\n                        </RowWrapper>\n                    </MessagesWrapper>\n                </BackCorner>\n            </AnimationContainer>\n        )\n    }\n}\n\nexport default Corner;","import styled from \"styled-components\";\n\n// < STYLE >\nexport const Wrapper = styled.div`\n    display: flex;\n    margin: 0.5em 0;\n`;\n\nexport const ErrorMessage = styled.p`\n    color: red;\n    margin: auto;\n    line-height: 100%;\n`;\n\nexport const SuccessMessage = styled(ErrorMessage)`\n    color: green;\n`;\n\nexport const SubmitButton = styled.button`\n    background-color: var(--input-color);\n    color: var(--form-color);\n    font-size: 1.15em;\n    width: 100px;\n    height: 30px;\n    margin-left: auto;  \n    margin-bottom: auto;\n`;\n\nexport const Bar = styled.div`\n    width: 90%;\n    height: 6px;\n    transition: 150ms all ease;\n    background-color: var(--input-color);\n    border-radius: 9px;\n    margin-left: auto;\n`;\n\nexport const InnerFieldWrapper = styled.div.attrs(props => ({\n    tabIndex: \"-1\",\n}))\n`\n    &:focus-within {\n        outline: none;\n    }\n\n    &:focus-within > ${Bar} {\n        width: 100%;\n    }\n`;\n\nexport const Page = styled.div`\n    display: flex;\n    height: 100%;\n\n    @media screen and (max-width: 1100px) {\n        flex-direction: column;\n        margin-top: 6.5em;\n    }\n`;\n\nexport const GroupsSelect = (props) => (\n    <select \n        name=\"group\" \n        id=\"group\" \n        onChange={props.handleChange} \n        value={props.group}>\n            {props.groups.map( (group, i) => (\n                <option value={group} key={i}>{group}</option> ))}\n    </select>\n);","import React from \"react\";\n\nexport default function withFormLogic(\n        WrappedComponent, \n        dataShape, \n        endpoint, \n        createSuccessMessage=undefined,\n        messageTimeout=5000) {\n    return class extends React.Component {\n        constructor(props) {\n            super(props);\n            this.handleChange = this.handleChange.bind(this);\n            this.handleSubmit = this.handleSubmit.bind(this);\n            this.fetchInterval = undefined;\n            this.state = {\n                ...dataShape,\n                csrf: \"\",\n                errorMessage: \"\",\n                successMessage: \"\",\n            };\n        }\n\n        componentDidMount() {\n            this.fetchCSRFToken();\n\n            this.fetchInterval = setInterval(this.fetchCSRFToken, 1000 * 60 * 5);\n        }\n\n        componentWillUnmount() {\n            clearInterval(this.fetchInterval);\n        }\n\n        fetchCSRFToken() {\n            fetch(endpoint, {\n                method: \"GET\",\n            })\n                .then(res => {\n                    if (res.ok) {\n                        return res.json();\n                    }\n                    else {\n                        window.location.reload();\n                        throw new Error(\"Refreshing page\");\n                    }\n                })\n                .then(data => {\n                    this.setState({ csrf: data.csrf_token })\n                })\n                .catch(err => console.error(err));\n        }\n\n        setMessage(type, message) {\n            let messageType = type === \"success\" ? \"successMessage\" : \"errorMessage\";\n            this.setState({ [messageType]: message });\n            setTimeout(() => this.setState({ [messageType]: \"\" }), messageTimeout);\n        }\n\n        handleChange(e) {\n            this.setState({ [e.target.id]: e.target.value });\n        }\n\n        async handleSubmit(e) {\n            e.preventDefault();\n\n            let options = {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-CSRF-TOKEN\": this.state.csrf,\n                },\n                body: JSON.stringify(this.state),\n            }\n\n            let res = await fetch(endpoint, options).catch(err => console.error(err));\n\n            if (!res.ok) {\n                let text = await res.text();\n                console.error(text);\n                this.setMessage(\"error\", text);\n                return;\n            }\n\n            let data = await res.json().catch(err => console.log(err));\n\n            if (this.props.afterSuccessfulFetch) this.props.afterSuccessfulFetch(data);\n            let message = createSuccessMessage ? createSuccessMessage(data) : \"Success!\"; \n            this.setMessage(\"success\", message);\n            \n\n            /*\n            fetch(endpoint, options)\n                .then(res => {\n                    if (!res.ok) {\n                        let message = \"Something went wrong\";\n                        this.setMessage(\"error\", message);\n                        throw res.text().then(text => new Error(text));\n                        \n                    }\n                    return res.json();\n                })\n                .then(data => {\n                    if (this.props.afterSuccessfulFetch) this.props.afterSuccessfulFetch(data);\n                    let message = createSuccessMessage ? createSuccessMessage(data) : \"Success!\"; \n                    this.setMessage(\"success\", message);\n\n                })\n                .catch(err => console.error(err)); */\n        }\n\n\n        render() {\n            const { afterSuccessfulFetch, ...passThroughProps} = this.props;\n            return <WrappedComponent \n                {...passThroughProps} \n                {...this.state}\n                handleChange={this.handleChange}\n                handleSubmit={this.handleSubmit} />;\n        }\n    }\n}","import React from \"react\";\nimport { ErrorMessage, GroupsSelect, SubmitButton, InnerFieldWrapper, Bar as ProtoBar } from \"../Utilities/common\"\nimport styled from \"styled-components\";\nimport withFormLogic from \"../Utilities/formLogic\";\n\n//  < STYLE >\nconst Bar = styled(ProtoBar)`\n    margin-bottom: 1em;\n`;\n\nconst ButtonWrapper = styled.div`\n    margin-left: auto;\n    display: flex;\n    width: 90%;\n\n    select {\n        margin-right: 1em;\n        margin-left: auto;\n        \n        outline: none;\n        border-radius: 3px;\n        border: none;\n        font-size: 1.1em;\n\n        color: var(--input-color);\n        background: var(--form-color);\n    }\n\n    ${SubmitButton} {\n        margin-left: 0;\n    }\n`;\n\nconst Form = styled.form`\n    background-color: var(--form-color);\n    color: var(--text-color);\n\n    display: flex;\n    flex-direction: column;\n\n    transition: all 400ms ease;\n\n    border-radius: 10px;\n    width: 25em;\n    padding: 3em;\n    margin: 0 auto;\n    \n    textarea {\n        margin-left: 10%;\n        margin-top: 1em;\n        height: 12em;\n        width: 90%;\n        resize: none;\n        border: none;\n        outline: none;\n        background-color: var(--form-color);\n        color: var(--text-color);\n        font-size: 1.1em;\n    }\n\n    @media screen and (max-width: 1100px) {\n        width: 80%;\n        padding: 2em;\n    }\n`;\n//  </ STYLE >\n\n\nclass WordsFormTemplate extends React.Component {\n    componentDidMount() {\n        this.props.handleChange({\n            target: {\n                id: \"group\",\n                value: this.props.groups[0].name,\n            }\n        })\n    }\n\n    render() {\n        return (\n            <Form\n                onSubmit={this.props.handleSubmit}\n                autoComplete=\"off\" >\n\n                <label htmlFor=\"words\">Words: </label>\n                <InnerFieldWrapper>\n                    <textarea\n                        onChange={this.props.handleChange}\n                        id=\"words\"\n                        name=\"words\"\n                        placeholder=\"Type word(s) here\" \n                        value={this.props.words} />\n                    <Bar />\n                </InnerFieldWrapper>\n\n                <ButtonWrapper>\n                    <ErrorMessage>{this.props.errorMessage}</ErrorMessage>\n                    <GroupsSelect\n                        handleChange={this.props.handleChange}\n                        group={this.props.group}\n                        groups={this.props.groups.map(e => e.name)}\n                    />\n                    <SubmitButton\n                        type=\"submit\"\n                        onSubmit={this.props.handleSubmit}>\n                        Submit\n                </SubmitButton>\n                </ButtonWrapper>\n            </Form>\n        );\n    }\n}\n\nconst WordsForm = withFormLogic(\n    WordsFormTemplate,\n    {\n        words: \"\",\n        group: \"\",\n    },\n    \"/api/add\",\n)\n\nexport default WordsForm;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { GroupsSelect } from \"../Utilities/common\";\n\n// < STYLE >\nconst ButtonWrapper = styled.div`\n    position: relative;\n    width: max-content;\n    margin: 0 auto;\n    \n    transition: 400ms all ease;\n\n    &:hover {\n        transform: scale(1.2);\n    }\n\n    & > button:hover {\n        transform: none;\n    }\n\n    button {\n        padding-bottom: 8%;\n    }\n\n    select {\n        position: absolute;\n        bottom: 25%;\n        left: 50%;\n        transform: translate(-50%, 50%);\n        border: none;\n        background-color: var(--input-color);\n        color: var(--form-color);\n        font-size: 1.1em;\n        text-align: right;\n    }\n\n    @media screen and (max-width: 1100px) {\n        margin: 0 auto;\n        \n        select {\n        right: 0.3em;\n        }\n    }\n`;\n\nconst Button = styled.button`\n    height: 3em;\n    background-color: var(--input-color);\n    color: var(--form-color);\n    border: none;\n    border-radius: 12px;\n    font-size: 36px;\n    margin: 0 30px;\n    width: 9em;\n\n    &:focus {\n        outline: none;\n    }\n\n\n    @media screen and (max-width: 1100px) {\n        font-size: 32px;\n        height: 2.5em;\n        width: 7em;\n    }\n`;\n\nconst NewWords = styled.h2`\n    font-size: 1.1em;\n    color: var(--form-color);\n    font-weight: bold;\n`;\n\nconst CopySucess = styled.h2`\n    color: var(--form-color);\n    font-weight: bold;\n`;\n\nconst Wrapper = styled.div`\n    text-align: center;\n    margin: auto;\n\n    transition: all 400ms ease;   \n\n    span {\n        color: var(--form-color);\n        font-weight: bold;\n    }\n\n    @media screen and (max-width: 1100px) {\n        padding-bottom: 10em;\n        width: 100%;\n\n        article {\n            margin: 20px 0;\n        }\n        \n        h2 {\n            margin: 0.5em 0;\n        }\n    }\n\n    @media screen and (max-width: 1250px) {\n        padding-bottom: 15em;\n    }\n`;\n// </ STYLE >\n\n\nclass GetWordsButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            group: \"all\",\n            groups: [\n                \"all\",\n                ...(this.props.groups.map(e => e.name)),\n            ]\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps !== this.props) {\n            this.setState({\n                groups: [\n                    \"all\",\n                    ...(this.props.groups.map(e => e.name)),\n                ]\n            });\n        }\n    }\n\n    handleClick(e) {\n        let groups = this.state.group === \"all\" ? this.state.groups.slice(1) : [this.state.group];\n        let query = groups.reduce((p, c) => (p += (c + \",\")), \"\").slice(0, -1);\n\n        fetch(`/api/bank?groups=${query}`)\n            .then(res => res.json())\n            .then(data => {\n                navigator.clipboard.writeText(data);\n                this.props.showSuccessMessage();\n            })\n            .catch(err => console.error(err))\n    }\n\n    handleChange(e) {\n        this.setState({ group: e.target.value });\n        this.props.setSelectedGroup(e.target.value);\n    }\n\n    render() {\n        return (\n            <ButtonWrapper>\n                <Button\n                    type=\"button\"\n                    onClick={this.handleClick}>\n                    Get words!\n                </Button>\n                <GroupsSelect\n                    handleChange={this.handleChange}\n                    value={this.state.group}\n                    groups={this.state.groups}\n                />\n            </ButtonWrapper>\n        );\n    }\n}\n\nfunction NewWordsInfo(props) {\n    return (\n        <div>\n            <h2>Following words have been added to database:</h2>\n            <NewWords>{props.newWords}</NewWords>\n        </div>\n    )\n}\n\nexport default function WordsInfo(props) {\n    const addedWordsMessage = props.newWords.length > 0\n        ? <NewWordsInfo newWords={props.newWords} />\n        : null;\n\n    const count = props.selectedGroup === \"all\"\n        ? props.groups.reduce((p, c) => p += c.count , 0)\n        : props.groups.filter(e => e.name === props.selectedGroup)[0].count;\n\n    return (\n        <Wrapper>\n            <article>\n                {addedWordsMessage}\n                <h2>There are <span>{count}</span> words in group <span>{props.selectedGroup}</span>.</h2>\n                <h2>Hit the button below to get words from database</h2>\n                <CopySucess>{props.copySuccess}</CopySucess>\n            </article>\n\n            <GetWordsButton\n                showSuccessMessage={props.setSuccessMessage}\n                groups={props.groups}\n                setSelectedGroup={props.setSelectedGroup}\n            />\n        </Wrapper>\n    );\n}","import React from \"react\"\nimport Tutorial from \"./tutorial\";\nimport Corner from \"../CornerAnimation\";\nimport WordsForm from \"./wordsForm\";\nimport WordsInfo from \"./wordsInfo\";\nimport styled from \"styled-components\";\nimport { Page } from \"../Utilities/common\";\n\n// < STYLE >\nconst Wrapper = styled(Page)`\n    padding-right: 20%;\n\n    .tutorial {\n        padding-top: 5em;\n    }\n\n    section {\n        flex: 1;\n        margin: auto 2em;\n        display: flex;\n        flex-direction: column;\n    }\n\n    @media screen and (max-width: 1100px) {\n        position: relative;\n        padding: 0;\n        height: auto;\n\n        .tutorial {\n            padding-top: 0;\n        }\n    }\n`;\n// < STYLE >\n\n\nexport default class MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addedNewWords = this.addedNewWords.bind(this);\n        this.setSuccessMessage = this.setSuccessMessage.bind(this);\n        this.switchCorner = this.switchCorner.bind(this);\n        this.setSelectedGroup = this.setSelectedGroup.bind(this);\n\n        this.cache = [];\n\n        this.state = {\n            count: 0,\n            groupsCount: [],\n            messages: [],\n            copySuccess: \"\",\n            newWords: [],\n            groups: [],\n            selectedCountGroup: \"all\",\n        }\n    }\n\n    addedNewWords(data) {\n        this.setState({ newWords: data.added_words });\n        console.log(this.state);\n        setTimeout(() => this.setState({ newWords: \"\" }), 5000);\n        this.props.fetchUserData();\n        this.fetchWordsForSlider();\n    }\n\n    setSuccessMessage() {\n        this.setState({ copySuccess: \"Database words have been copied to clipboard.\" });\n        setTimeout(() => this.setState({ copySuccess: \"\" }), 5000);\n    }\n\n    setSelectedGroup(group) {\n        this.setState({ selectedCountGroup: group });\n        let c = this.state.groupsCount[group];\n        this.setState({ count:c });\n    }\n\n    fetchWordsForSlider() {\n        fetch(\"/api/words\")\n            .then(res => {\n                if (res.ok) return res.json();\n            })\n            .then(data => {\n                this.setState({ messages: data });\n            })\n            .catch(err => console.error(err));\n    }\n\n    /*\n    fetchWordsCount() {\n        fetch(\"/api/count\")\n            .then(res => {\n                if (res.ok) return res.json()\n            })\n            .then(data => { \n                this.setState(state => ({ \n                    groupsCount: data, \n                    count: data[state.selectedCountGroup],\n                }))\n            })\n            .catch(err => console.error(err));\n    } */\n\n    switchCorner() {\n        this.props.switchCorner();\n        if (this.state.messages.length > 0) {\n            this.cache = this.state.messages;\n            setTimeout(() => this.setState({ messages: [] }), 300);\n        }\n        else {\n            this.setState({ messages: this.cache });\n        }\n    }\n\n    componentDidMount() {\n        this.fetchWordsForSlider();\n        //this.fetchWordsCount();\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <section>\n                    <Tutorial />\n                    <WordsForm \n                        afterSuccessfulFetch={this.addedNewWords} \n                        groups={this.props.groups} \n                    />\n                </section>\n                <section>\n                    <WordsInfo\n                        newWords={this.state.newWords}\n                        selectedGroup={this.state.selectedCountGroup}\n                        setSelectedGroup={this.setSelectedGroup}\n                        copySuccess={this.state.copySuccess}\n                        setSuccessMessage={this.setSuccessMessage}\n                        groups={this.props.groups}\n                    />\n                </section>\n\n                <Corner switched={this.props.switched} messages={this.state.messages} />\n            </Wrapper>\n        );\n    }\n}","import styled from \"styled-components\";\n\nconst Wrapper = styled.article`\n    margin: auto 3rem;\n    margin-right: 10%;\n    flex: 1;\n    font-size: 1.2em;\n\n    ul {\n        padding-left: 0;\n        list-style: none;\n    }\n\n    li {\n        margin: 20px 0;\n    }\n\n    @media screen and (max-width: 1100px) {\n        margin: 0 1em;\n        flex: unset;\n    }\n\n`;\n\nexport default function Info() {\n    return (\n        <Wrapper>\n                <ul>\n                    <li>\n                        <h2>\n                            This app allows you to create and\n                            store words dictionary. First, you have to\n                            log in, or register, if you don't have an account.\n                        </h2>\n                    </li>\n                    <li>\n                        <h2>\n                            After login you can see already existing \n                            words in slider, or add your\n                            own ones!\n                        </h2>\n                    </li>\n                    <li>\n                        <h2>\n                            You can also retrieve dictionary from the database.\n                            Words are returned in form of text, separated by comma (so they are \n                            ready to put in pictionary game)\n                        </h2>\n                    </li>\n                </ul>\n\n        </Wrapper>\n    )\n}","import styled from \"styled-components\";\nimport { InnerFieldWrapper, Bar } from \"./common\"\n\n// < STYLE >\nconst Wrapper = styled.div`\n    margin: 0.9em 0;\n\n    input {\n        width: 90%;\n        margin-left: 10%;\n        line-height: 1.8em;\n        border: none;\n        outline: none;\n        background-color: var(--form-color);\n        color: var(--text-color);\n        font-size: 1.1em;\n    }\n\n`;\n// </ STYLE >\n\n\nexport default function FormField(props) {\n    return (\n        <Wrapper>\n            <label htmlFor={props.id}>{props.children}</label>\n            <InnerFieldWrapper>\n                <input \n                    value={props.value} \n                    onChange={props.onChange} \n                    id={props.id} \n                    type={props.type} \n                    name={props.name} \n                    placeholder={props.placeholder}\n                    autoComplete={props.autoComplete || \"off\"}\n                    required />\n                <Bar />\n            </InnerFieldWrapper>\n        </Wrapper>\n    );\n}","import React from \"react\";\nimport FormField from \"../Utilities/formField\"\nimport { Wrapper, ErrorMessage, SubmitButton } from \"../Utilities/common\";\nimport withFormLogic from \"../Utilities/formLogic\";\n\nfunction LoginFormTemplate(props) {\n    return (\n        <form\n            onSubmit={props.handleSubmit}\n            id=\"loginForm\" >\n\n            <FormField\n                id=\"user_name\"\n                value={props.user_name || props.login}\n                onChange={props.handleChange}\n                autoComplete=\"on\"\n                name=\"user_name\"\n                type=\"text\" >\n                Login:\n            </FormField>\n\n            <FormField\n                id=\"user_pass\"\n                value={props.user_pass || props.pass}\n                onChange={props.handleChange}\n                name=\"user_pass\"\n                type=\"password\" >\n                Password:\n            </FormField>\n\n            <Wrapper>\n                <ErrorMessage>{props.errorMessage}</ErrorMessage>\n                <SubmitButton type=\"submit\">Submit</SubmitButton>\n            </Wrapper>\n\n        </form>\n    );\n}\n\nconst LoginForm = withFormLogic(\n    LoginFormTemplate, \n    {\n        user_name: \"\",\n        user_pass: \"\",\n    }, \n    \"/api/login\");\n\nexport default LoginForm;","import React from \"react\";\nimport FormField from \"../Utilities/formField\"\nimport { Wrapper, ErrorMessage, SuccessMessage, SubmitButton } from \"../Utilities/common\";\nimport withFormLogic from \"../Utilities/formLogic\";\n\nfunction RegisterFormTemplate(props) {\n    return (\n        <form\n            onSubmit={props.handleSubmit}\n            id=\"registerForm\"\n            style={props.style}>\n\n            <FormField\n                id=\"user_name\"\n                value={props.user_name}\n                onChange={props.handleChange}\n                name=\"user_name\"\n                type=\"text\" >\n                Login:\n            </FormField>\n\n            <FormField\n                id=\"user_pass\"\n                value={props.user_pass}\n                onChange={props.handleChange}\n                name=\"user_pass\"\n                type=\"password\" >\n                Password:\n            </FormField>\n\n            <FormField\n                id=\"user_pass_repeat\"\n                value={props.user_pass_repeat}\n                onChange={props.handleChange}\n                name=\"user_pass_repeat\"\n                type=\"password\" >\n                Retype password:\n            </FormField>\n\n            <FormField\n                id=\"secret_key\"\n                value={props.secret_key}\n                onChange={props.handleChange}\n                name=\"secret_key\"\n                type=\"text\" >\n                Group key:\n            </FormField>\n\n\n            <Wrapper>\n                <ErrorMessage>{props.errorMessage}</ErrorMessage>\n                <SuccessMessage>{props.successMessage}</SuccessMessage>\n                <SubmitButton type=\"submit\">Submit</SubmitButton>\n            </Wrapper>\n\n        </form>\n    );\n}\n\nconst RegisterForm = withFormLogic(\n    RegisterFormTemplate,\n    {\n        user_name: \"\",\n        user_pass: \"\",\n        user_pass_repeat: \"\",\n        secret_key: \"\",\n    },\n    \"/api/register\", \n    (data) => \"Successfuly registered!\",\n    15 * 1000\n    );\n\nexport default RegisterForm;","import React from \"react\";\nimport LoginForm from \"./login\";\nimport RegisterForm from \"./register\";\nimport styled from \"styled-components\";\n\n// < STYLE >\nconst LoginWindow = styled.div`\n    width: 25em;\n    border-radius: 10px;\n    margin: auto;\n    margin-right: 5em;\n    padding: 2.6em;\n\n    background-color: var(--form-color);\n    color: var(--text-color);\n\n    &, & form {\n        display: flex;\n        flex-direction: column;\n    }\n    \n    @media screen and (max-width: 1100px) {\n        width: 60%;\n        margin: 0 auto;\n        margin-bottom: 10%;\n    }\n`;\n\nconst Switch = styled.div`\n    position: relative;\n    width: 100%;\n    margin-top: 1em;\n    display: flex;\n\n    button {\n        background-color: var(--form-color);\n        color: var(--text-color);\n        font-size: 1.3em;\n        flex: 1;\n        transition: all 300ms ease;\n    }\n\n    button.active {\n        font-size: 1.8em;\n        color: var(--input-color);\n        font-weight: bold;\n    }\n\n    button.active:hover {\n        transform: none;\n    }\n`;\n\nconst Divisor = styled.div`\n    width: 6px;\n    height: 3em;\n    border-radius: 5px;\n    background-color: var(--input-color);\n    margin: 0 auto;\n`;\n\nconst DivisorWrapper = styled.div`\n    flex: 1;\n`;\n// </ STYLE >\n\n\nclass LoginManager extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.switchToLogin = this.switchToLogin.bind(this);\n        this.switchToRegister = this.switchToRegister.bind(this);\n\n        this.state = { \n            tab: \"login\",\n        };\n    }\n\n    switchToLogin() {\n        this.setState({ tab: \"login\" });\n    }\n\n    switchToRegister() {\n        this.setState({ tab: \"register\" });\n    }\n\n    render() {\n        const form =\n            this.state.tab === \"login\"\n                ? <LoginForm \n                    afterSuccessfulFetch={this.props.onLogin} />\n                : <RegisterForm />\n\n        return (\n            <LoginWindow>\n\n                { form }\n\n                <Switch>\n                    <button\n                        type=\"button\"\n                        className={this.state.tab === \"register\" ? 'active' : \"\"}\n                        onClick={this.switchToRegister} >\n                        Register\n                    </button>\n\n                    <DivisorWrapper>\n                        <Divisor />\n                    </DivisorWrapper>\n\n                    <button\n                        type=\"button\"\n                        className={this.state.tab === \"login\" ? 'active' : \"\"}\n                        onClick={this.switchToLogin}>\n                        Login\n                    </button>\n                </Switch>\n            </LoginWindow>\n        );\n    }\n}\n\nexport default LoginManager;","import React from \"react\"\nimport Info from \"./info\";\nimport LoginManager from \"../LoginManager\";\nimport { Page } from \"../Utilities/common\"\nimport styled from \"styled-components\";\n\nconst Wrapper = styled(Page)`\n  @media screen and (max-width: 1100px) {\n    article h2 {\n      margin: 0;\n      font-size: 20px;\n    }\n    article li {\n      margin: 10px 0;\n    }\n  }\n`;\n\nexport default function LoginPage(props) {\n    return (\n      <Wrapper>\n        <Info />\n        <LoginManager onLogin={props.onLogin} />\n      </Wrapper>\n    )\n  }\n  \n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Themes from \"./themes\";\n\n\n// < STYLE >\nconst labels = [\n    \"light gradient\",\n    \"dark gradient\",\n    \"text\",\n    \"main\",\n    \"accent\"\n];\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    margin: 1em 0;\n    min-height: 30%;\n\n    overflow-y: scroll;\n\n    & > h3, p {\n        margin: 0;\n    }\n    \n`;\n\nconst Box = styled.div`\n    height: 1.5em;\n    width: 1.5em;\n\n    @media screen and (max-width: 1100px) {\n        height: 1em;\n        width: 1em;\n    }\n    box-sizing: border-box;\n    border: 2px solid black;\n    ${props => \"background: \" + props.rgb + \";\"}\n`;\n\nconst Button = styled.div`\n    padding: 0 0.5em;\n    display: flex;\n    align-items: center;\n    \n    transition: 400ms all ease;\n\n    p {\n        margin-right: auto;\n        cursor: default;\n    }\n\n    ${Box} {\n        margin: 0.5em 0;\n        margin-left: 5px;\n    }\n\n    &:hover {\n        backdrop-filter: contrast(120%);\n    }\n`;\n// </ STYLE >\n\n\nexport default class ColorPicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.setTheme = this.setTheme.bind(this);\n\n        this.themes = Themes;\n        this.names = Object.keys(this.themes);\n    }\n\n    setTheme(themeName) {\n        let theme = this.themes[themeName];\n\n        for (let prop in theme) {\n            document.documentElement.style.setProperty(prop, theme[prop]);\n        }\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <h3>Select theme</h3>\n\n                {this.names.map((name, i) => (\n                    <Button onClick={() => this.setTheme(name)} key={i}>\n                        <p>{name}</p>\n                        {Object.values(this.themes[name]).map( (rgb, i) => <Box rgb={rgb} key={i} title={labels[i]} />)}\n                    </Button>))\n                    }\n            </Wrapper>\n        );\n    }\n}","import styled from \"styled-components\";\nimport { SuccessMessage, ErrorMessage } from \"../Utilities/common\";\n\nconst H3 = styled.h3`\n    margin: 0;\n    cursor: default;\n    user-select: none;\n`;\n\nexport const GroupComponentWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin-bottom: 1em;\n\n    form {\n        transform-origin: center top;\n        transition: all 200ms ease;\n        margin-bottom: 0 !important;\n    }\n\n    form > div {\n        width: 100%;\n    }\n\n\n    &, & * {\n        transition: all 400ms ease;\n    }\n\n    ${ErrorMessage}, ${SuccessMessage} {\n        margin-left: 10%;\n        margin-top: 0.5em;\n    }\n\n    .hidden {\n        opacity: 0;\n        transform: scaleY(0);\n        height: 0;\n    }\n\n    span {\n        display: inline-block;\n    }\n\n    .opened {\n        transform: rotate(-90deg);\n    }\n`;\n\nexport const Header = (props) => (\n        <H3 onClick={() => props.handleClick(props.for)}>\n            <span className={props.opened ? \"\" : \"opened\"}>▼</span>{props.children}\n        </H3>\n);","import withFormLogic from \"../Utilities/formLogic\";\nimport { SubmitButton, SuccessMessage, ErrorMessage, } from \"../Utilities/common\";\nimport FormField from \"../Utilities/formField\";\nimport { GroupComponentWrapper, Header } from \"./common\";\n\n\nfunction CreateFormTemplate(props) {\n    return (\n        <GroupComponentWrapper>\n            <Header\n                for=\"create\"\n                handleClick={props.handleClick}\n                opened={props.opened} >\n                Create new group\n            </Header>\n            <form\n                onSubmit={props.handleSubmit}\n                id=\"createForm\"\n                className={props.opened ? \"\" : \"hidden\"} >\n                <div>\n                    <ErrorMessage>{props.errorMessage}</ErrorMessage>\n                    <SuccessMessage>{props.successMessage}</SuccessMessage>\n                    <FormField\n                        value={props.group_name_create}\n                        id=\"group_name_create\"\n                        type=\"text\"\n                        onChange={props.handleChange}\n                        name=\"group_name_create\"\n                        placeholder=\"Name\" />\n                    <FormField\n                        value={props.group_key_create}\n                        id=\"group_key_create\"\n                        type=\"text\"\n                        onChange={props.handleChange}\n                        name=\"group_key_create\"\n                        placeholder=\"Key\" />\n                </div>\n                <SubmitButton type=\"submit\">Create</SubmitButton>\n            </form>\n        </GroupComponentWrapper>\n    );\n}\n\n\nconst CreateForm = withFormLogic(\n    CreateFormTemplate,\n    {\n        group_name_create: \"\",\n        group_key_create: \"\",\n    },\n    \"/api/create_group\",\n    (data) => `Created group ${data.name} with key ${data.key}`\n);\n\nexport default CreateForm;","import FormField from \"../Utilities/formField\";\nimport withFormLogic from \"../Utilities/formLogic\";\nimport { SubmitButton, SuccessMessage, ErrorMessage, } from \"../Utilities/common\";\nimport { GroupComponentWrapper, Header } from \"./common\";\n\n\nfunction JoinFormTemplate(props) {\n    return (\n        <GroupComponentWrapper>\n            <Header \n                for=\"join\"\n                handleClick={props.handleClick}\n                opened={props.opened} >\n                Join existing group\n            </Header>\n            <form \n                onSubmit={props.handleSubmit}\n                className={props.opened ? \"\" : \"hidden\"} >\n                <div>\n                    <ErrorMessage>{props.errorMessage}</ErrorMessage>\n                    <SuccessMessage>{props.successMessage}</SuccessMessage>\n                    <FormField\n                        value={props.group_key_join}\n                        id=\"group_key_join\"\n                        type=\"text\"\n                        onChange={props.handleChange}\n                        name=\"group_key_join\"\n                        placeholder=\"Key\" />\n                </div>\n                <SubmitButton type=\"submit\">Join</SubmitButton>\n            </form>\n        </GroupComponentWrapper>\n\n    );\n}\n\nconst JoinForm = withFormLogic(\n    JoinFormTemplate,\n    { group_key_join: \"\" },\n    \"/api/join_group\",\n    (data) => `Joined ${data.name} group.`\n);\n\nexport default JoinForm;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SuccessMessage, GroupComponentWrapper, Header } from \"./common\";\n\nconst GroupsWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 2em;\n\n    max-height: 150px;\n    overflow: scroll;\n    overflow-x: hidden;\n\n    p {\n        margin: 0.4em 0 0.4em 0.4em;\n    }\n`;\n\nconst LabelWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr calc(2em + 15px);\n\n    h4 {\n        margin: 0.5em 0;\n    }\n`;\n\nconst Button = styled.div`\n    width: 2em;\n    height: 2em;\n    display: flex;\n    place-items: center;\n    cursor: default;\n    user-select: none;\n\n    &:hover {\n        backdrop-filter: contrast(1.2);\n    }\n\n    p {\n        margin: auto;\n        font-weight: bold;\n        color: red;\n    }\n`;\n\nfunction Label(props) {\n    return (\n        <LabelWrapper>\n            <h4 style={{ gridColumn: 1 }}>Name</h4>\n            <h4 style={{ gridColumn: 2 }}>Key</h4>\n        </LabelWrapper>\n    );\n}\n\nfunction GroupPanel(props) {\n    return (\n        <>\n            <p style={{ gridColumn: 1 }}>{props.name}</p>\n            <p style={{ gridColumn: 2 }}>{props.groupKey}</p>\n            <Button\n                onClick={() => props.handleClick(props.groupKey)}\n                style={{ gridColumn: 3 }}\n                title=\"Leave group\"  >\n                <p>x</p>\n            </Button>\n        </>\n    );\n}\n\n\nexport default class ManageForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    async handleClick(groupKey) {\n        let res = await fetch(\"/api/leave_group/\" + groupKey);\n\n        if (res.ok) {\n            this.props.afterSuccessfulFetch();\n        }\n        else {\n            let message = await res.text();\n            console.error(message);\n        }\n    }\n\n    render() {\n        return (\n            <GroupComponentWrapper>\n                <Header\n                    for=\"manage\"\n                    handleClick={this.props.handleClick}\n                    opened={this.props.opened} >\n                    Manage your groups\n                </Header>\n                <div className={this.props.opened ? \"\" : \"hidden\"}>\n                    <Label />\n                    <GroupsWrapper>\n                        {this.props.groups.map( (group, i) => (\n                            <GroupPanel \n                                style={{ gridColumn: 1 / 3 }} \n                                name={group.name} \n                                groupKey={group.key} \n                                handleClick={this.handleClick} \n                                key={i} />\n                        ))}\n                    </GroupsWrapper>\n                </div>\n\n            </GroupComponentWrapper>\n        );\n    }\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport CreateForm from \"./createGroup\";\nimport JoinForm from \"./joinGroup\";\nimport ManageForm from \"./manageGroups\";\n\n// < STYLE >\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    margin-top: 1em;\n\n    button {\n        margin: auto 0 calc(0.9em - 6px) 1em;\n    }\n\n    form {\n        display: flex;\n        margin-bottom: 1em;\n\n        input {\n        }\n    }\n`;\n// </ STYLE >\n\n\nexport default class GroupManager extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n\n        this.state = {\n            join: false,\n            create: true,\n            manage: false,\n        }\n    }\n\n    handleClick(sectionName) {\n        this.setState(state => {\n            let tempState = { ...state };\n            for (let i in tempState) {\n                tempState[i] = (i === sectionName ? !tempState[i] : false);\n            }\n            return tempState;\n        }\n        )\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                { this.props.loggedIn &&\n                    <ManageForm\n                        afterSuccessfulFetch={this.props.fetchUserData}\n                        handleClick={this.handleClick}\n                        opened={this.state.manage}\n                        groups={this.props.groups} />\n                }\n                { this.props.loggedIn &&\n                    <JoinForm\n                        afterSuccessfulFetch={this.props.fetchUserData}\n                        handleClick={this.handleClick}\n                        opened={this.state.join} />\n                }\n\n                <CreateForm\n                    handleClick={this.handleClick}\n                    opened={this.state.create}\n                />\n            </Wrapper>\n        );\n    }\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport ColorPicker from \"./colorPicker\";\nimport GroupManager from \"../GroupManager\";\n\n\n// < STYLE >\nconst Icon = (props) => (\n    <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" width=\"122.88px\" height=\"122.878px\" viewBox=\"0 0 122.88 122.878\" enableBackground=\"new 0 0 122.88 122.878\"><g>\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M101.589,14.7l8.818,8.819c2.321,2.321,2.321,6.118,0,8.439l-7.101,7.101 c1.959,3.658,3.454,7.601,4.405,11.752h9.199c3.283,0,5.969,2.686,5.969,5.968V69.25c0,3.283-2.686,5.969-5.969,5.969h-10.039 c-1.231,4.063-2.992,7.896-5.204,11.418l6.512,6.51c2.321,2.323,2.321,6.12,0,8.44l-8.818,8.819c-2.321,2.32-6.119,2.32-8.439,0 l-7.102-7.102c-3.657,1.96-7.601,3.456-11.753,4.406v9.199c0,3.282-2.685,5.968-5.968,5.968H53.629 c-3.283,0-5.969-2.686-5.969-5.968v-10.039c-4.063-1.232-7.896-2.993-11.417-5.205l-6.511,6.512c-2.323,2.321-6.12,2.321-8.441,0 l-8.818-8.818c-2.321-2.321-2.321-6.118,0-8.439l7.102-7.102c-1.96-3.657-3.456-7.6-4.405-11.751H5.968 C2.686,72.067,0,69.382,0,66.099V53.628c0-3.283,2.686-5.968,5.968-5.968h10.039c1.232-4.063,2.993-7.896,5.204-11.418l-6.511-6.51 c-2.321-2.322-2.321-6.12,0-8.44l8.819-8.819c2.321-2.321,6.118-2.321,8.439,0l7.101,7.101c3.658-1.96,7.601-3.456,11.753-4.406 V5.969C50.812,2.686,53.498,0,56.78,0h12.471c3.282,0,5.968,2.686,5.968,5.969v10.036c4.064,1.231,7.898,2.992,11.422,5.204 l6.507-6.509C95.471,12.379,99.268,12.379,101.589,14.7L101.589,14.7z M61.44,36.92c13.54,0,24.519,10.98,24.519,24.519 c0,13.538-10.979,24.519-24.519,24.519c-13.539,0-24.519-10.98-24.519-24.519C36.921,47.9,47.901,36.92,61.44,36.92L61.44,36.92z\" />\n    </g>\n    </svg>\n);\n\nconst Button = styled.button`\n    width: 7.5em;\n    height: 2em;\n    font-size: 1.1em;\n    line-height: 0.9em;\n    color: var(--form-color);\n    background-color: var(--input-color);\n\n    @media screen and (max-width: 1100px) {\n        font-size: 0.9em;\n        top: unset;\n        bottom: 0.5em;\n        right: unset;\n        left: 0.5em;\n        width: 4.5em;\n    }\n`;\n\nconst Wrapper = styled.div`\n    position: absolute;\n    top: 2rem;\n    right: 2rem;\n    padding: 2rem;\n    width: 20%;\n    min-height: 30rem;\n    max-height: 40rem;\n    display: flex;\n    flex-direction: column;\n    z-index: 4;\n    border-radius: 10px;\n    background-color: var(--form-color);\n    transition: 500ms all cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n    clip-path: circle(8% at 88% 8%);\n\n    & > * {\n        transition: 500ms all ease-in-out;\n        opacity: 0;\n    }\n\n    &:hover {\n        clip-path: circle(100% at 50% 50%);\n    }\n\n    &:hover > * {\n        opacity: 1;\n    }\n\n    > svg {\n        transition: 200ms opacity ease;\n        position: absolute;\n        transform: translate(-50%, -50%) scale(0.35);\n        left: 88%;\n        top: 8%;\n        opacity: 1;\n        fill: var(--input-color);\n    }\n\n    &:hover > svg {\n        opacity: 0;\n    }\n\n    h1 {\n        margin: 0;\n    }\n\n    @media screen and (max-width: 1100px) {\n        width: 60%;\n        height: auto;\n\n        top: 1rem;\n        right: 1rem;\n\n        clip-path: circle(5% at 92% 2em);\n\n        > svg {\n            left: 92%;\n            top: 2em;\n            transform: translate(-50%, -50%) scale(0.15);\n        }\n\n    }\n`;\n\nconst Header = styled.h1`\n    margin: auto 0;\n    margin-right: auto;\n`;\n\nconst ButtonsWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 100%;\n\n    margin-top: auto;\n`;\n// </ STYLE >\n\n\nconst LogoutButton = (props) => (\n    <Button\n        onClick={props.onLogout}\n        type=\"button\">\n        Logout\n    </Button>\n);\n\nconst CornerButton = (props) => (\n    <Button\n        onClick={props.switchCorner}>\n        Switch corner\n    </Button>\n);\n\nexport default function Settings(props) {\n    return (\n        <Wrapper>\n            <Icon />\n            <Header>Hello {props.name}!</Header>\n            <GroupManager \n                loggedIn={props.loggedIn} \n                fetchUserData={props.fetchUserData}\n                groups={props.groups}\n                />\n            <ColorPicker />\n            { props.loggedIn \n            ? <ButtonsWrapper>\n                <LogoutButton onLogout={props.onLogout} />\n                <CornerButton switchCorner={props.switchCorner} />\n            </ButtonsWrapper>\n            : \"\" }\n        </Wrapper>\n    );\n}","import React from \"react\"\nimport './global.css';\nimport Footer from \"./Utilities/footer\";\nimport Logo from \"./Utilities/logo\";\nimport MainPage from \"./MainPage\";\nimport LoginPage from \"./LoginPage\";\nimport Settings from \"./Settings\";\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onLogin = this.onLogin.bind(this);\n        this.onLogout = this.onLogout.bind(this);\n        this.switchCorner = this.switchCorner.bind(this);\n        this.fetchUserData = this.fetchUserData.bind(this);\n\n        this.state = {\n            loggedIn: false,\n            opened: false,\n            username: \"stranger\",\n            groups: [],\n        };\n    }\n\n    fetchUserData() {\n        fetch(\"/api/user\", {\n            method: \"GET\",\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                }\n                else {\n                    this.onLogout();\n                    throw new Error(\"Not logged.\");\n                }\n            })\n            .then(data => {\n                this.setState({\n                    loggedIn: true,\n                    username: data.name,\n                    groups: data.groups,\n                });\n                this.openCorner();\n            })\n            .catch(err => console.error(err));\n    }\n\n    componentDidMount() {\n        this.fetchUserData();\n    }\n\n    onLogin() {\n        this.fetchUserData();\n    }\n\n    onLogout() {\n        fetch(\"/api/logout\", {\n            method: \"GET\"\n        })\n            .then(res => {\n                this.setState({\n                    loggedIn: false,\n                    username: \"stranger\",\n                });\n            })\n            .catch(err => console.error(err));\n    }\n\n    openCorner() {\n        setTimeout(\n            () => { this.setState(state => ({ opened: state.loggedIn })) }\n            , 0)\n    }\n\n    switchCorner() {\n        setTimeout(\n            () => { this.setState(state => ({ opened: !state.opened })) }\n            , 0)\n        console.log(this.state)\n    }\n\n\n    render() {\n        let page = this.state.loggedIn\n            ? <MainPage\n                switched={this.state.opened}\n                switchCorner={this.switchCorner}\n                groups={this.state.groups}\n                fetchUserData={this.fetchUserData} />\n            : <LoginPage onLogin={this.onLogin} />\n\n        return (\n            <div className=\"app\">\n                <Logo />\n                <Settings\n                    name={this.state.username}\n                    onLogout={this.onLogout}\n                    switchCorner={this.switchCorner}\n                    loggedIn={this.state.loggedIn}\n                    fetchUserData={this.fetchUserData}\n                    groups={this.state.groups}\n                />\n                {page}\n                <Footer />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}