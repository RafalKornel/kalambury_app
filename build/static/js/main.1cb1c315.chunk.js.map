{"version":3,"sources":["components/Utilities/footer.jsx","components/Utilities/logo.jsx","components/MainPage/tutorial.jsx","components/CornerAnimation/panel.jsx","components/CornerAnimation/index.jsx","components/Utilities/common.jsx","components/Utilities/formLogic.jsx","components/MainPage/wordsForm.jsx","components/MainPage/wordsInfo.jsx","components/MainPage/index.jsx","components/LoginPage/info.jsx","components/Utilities/formField.jsx","components/LoginManager/login.jsx","components/LoginManager/register.jsx","components/LoginManager/index.jsx","components/LoginPage/index.jsx","components/Settings/colorPicker.jsx","components/Settings/groupManager.jsx","components/Settings/index.jsx","components/app.jsx","index.js"],"names":["FooterWrapper","styled","footer","Footer","props","href","className","LogoHeader","h1","Logo","Tutorial","Wrapper","div","Word","p","Author","Panel","word","author","SVGPathSmall","width","height","id","d","SVGPathBig","AnimationContainer","corner","SliderCorner","moved","BackCorner","MessagesWrapper","slideshow","keyframes","Row","RowWrapper","Corner","state","panels","prevProps","prevState","messages","this","panelsSorted","map","i","user","forEach","panel","key","push","setState","switched","style","transform","React","Component","ErrorMessage","SubmitButton","button","Bar","InnerFieldWrapper","attrs","tabIndex","Page","GroupsSelect","name","onChange","handleChange","value","group","groups","withFormLogic","WrappedComponent","dataShape","endpoint","createSuccessMessage","undefined","bind","handleSubmit","csrf","errorMessage","successMessage","type","message","timeout","messageType","setTimeout","fetch","method","then","res","ok","json","data","csrf_token","catch","err","console","error","e","target","preventDefault","options","headers","body","JSON","stringify","setMessage","Error","afterSuccessfulFetch","ProtoBar","ButtonWrapper","Form","form","WordsForm","onSubmit","autoComplete","htmlFor","placeholder","words","Button","NewWords","h2","CopySucess","GetWordsButton","handleClick","query","slice","reduce","c","navigator","clipboard","writeText","showSuccessMessage","setSelectedGroup","onClick","NewWordsInfo","newWords","WordsInfo","addedWordsMessage","length","count","selectedGroup","copySuccess","setSuccessMessage","MainPage","addedNewWords","switchCorner","cache","groupsCount","selectedCountGroup","added_words","log","fetchWordsCount","fetchWordsForSlider","article","Info","FormField","children","required","LoginForm","user_name","user_pass","RegisterForm","user_pass_repeat","secret_key","LoginWindow","Switch","Divisor","DivisorWrapper","LoginManager","switchToLogin","switchToRegister","tab","onLogin","LoginPage","labels","Box","rgb","ColorPicker","setTheme","themes","Themes","names","Object","keys","themeName","theme","prop","document","documentElement","setProperty","values","title","SuccessMessage","InputWrapper","JoinForm","group_key_join","CreateForm","group_name_create","group_key_create","GroupManager","loggedIn","fetchUserData","Icon","version","x","y","viewBox","enableBackground","fillRule","clipRule","Header","ButtonsWrapper","LogoutButton","onLogout","CornerButton","Settings","App","opened","username","openCorner","page","ReactDOM","render","StrictMode","getElementById"],"mappings":"2wCAIA,IAAMA,EAAgBC,IAAOC,OAAV,KAyCJC,MARf,SAAgBC,GACZ,OACA,cAACJ,EAAD,UACI,6CAAe,uBAAf,IAAsB,oBAAGK,KAAK,iCAAR,cAA0C,mBAAGC,UAAU,yBAAvD,yBAAtB,U,mfCrCR,IAAMC,EAAaN,IAAOO,GAAV,KAuBD,SAASC,EAAKL,GACzB,OAAO,cAACG,EAAD,wBC3BI,SAASG,EAASN,GAC7B,OACI,yBAASE,UAAU,WAAnB,SACI,kO,knBCAZ,IAAMK,EAAUV,IAAOW,IAAV,KAmBPC,EAAOZ,IAAOa,EAAV,KAKJC,EAASd,IAAOa,EAAV,KAKG,SAASE,EAAMZ,GAC1B,OACI,eAACO,EAAD,WACI,cAACE,EAAD,UAAOT,EAAMa,OACb,cAACF,EAAD,UAASX,EAAMc,Y,2nDC/B3B,SAASC,IACL,OACI,qBAAKC,MAAM,IAAIC,OAAO,IAAtB,SACI,+BACI,0BAAUC,GAAG,YAAb,SACI,sBAAMC,EAAE,8BAO5B,SAASC,IACL,OACI,qBAAKJ,MAAM,IAAIC,OAAO,IAAtB,SACI,+BACI,0BAAUC,GAAG,WAAb,SACI,sBAAMC,EAAE,2CAU5B,IAAME,EAAqBxB,IAAOW,IAAV,KAQlBc,EAASzB,IAAOW,IAAV,KAgBNe,EAAe1B,YAAOyB,EAAPzB,CAAH,KAIZ,SAAAG,GAAK,OAAIA,EAAMwB,MAAQ,qCAAuC,MAO1D,SAAAxB,GAAK,OAAIA,EAAMwB,MAAQ,8CAAgD,MAI3EC,EAAa5B,YAAOyB,EAAPzB,CAAH,KAOV6B,EAAkB7B,IAAOW,IAAV,KAOjBmB,EAAYC,YAAH,KAKPC,EAAMhC,IAAOW,IAAV,IAIQmB,GAGXG,EAAajC,IAAOW,IAAV,KA2DDuB,E,kDAnDX,WAAY/B,GAAQ,IAAD,8BACf,cAAMA,IAEDgC,MAAQ,CACTC,OAAQ,IAJG,E,+DAQAC,EAAWC,GAC1B,GAAID,EAAUE,WAAaC,KAAKrC,MAAMoC,UAAYC,KAAKrC,MAAMoC,WAAa,GAA1E,CAEA,IAAIE,EAAe,CAAC,GAAI,GAAI,IACfD,KAAKrC,MAAMoC,SAASG,KAAI,WAAiBC,GAAjB,IAAGC,EAAH,EAAGA,KAAM5B,EAAT,EAASA,KAAT,OAAwB,cAACD,EAAD,CAAOE,OAAQ2B,EAAM5B,KAAMA,GAAW2B,MAE5FE,SAAQ,SAAAC,GACX,IAAIH,EAAIG,EAAMC,IAAM,EACpBN,EAAaE,GAAGK,KAAKF,MAGzBN,KAAKS,SAAS,CAAEb,OAAQK,O,+BAKxB,OACI,eAACjB,EAAD,WACI,cAACN,EAAD,IACA,cAACK,EAAD,IAEA,cAACG,EAAD,CAAcC,MAAOa,KAAKrC,MAAM+C,WAChC,cAACtB,EAAD,UACI,eAACC,EAAD,WACI,eAACI,EAAD,WACI,cAACD,EAAD,UAAMQ,KAAKL,MAAMC,OAAO,KACxB,cAACJ,EAAD,UAAMQ,KAAKL,MAAMC,OAAO,QAE5B,eAACH,EAAD,CAAYkB,MAAO,CAACC,UAAU,uBAA9B,UACI,cAACpB,EAAD,UAAMQ,KAAKL,MAAMC,OAAO,KACxB,cAACJ,EAAD,UAAMQ,KAAKL,MAAMC,OAAO,QAE5B,eAACH,EAAD,WACI,cAACD,EAAD,UAAMQ,KAAKL,MAAMC,OAAO,KACxB,cAACJ,EAAD,UAAMQ,KAAKL,MAAMC,OAAO,oB,GA3C/BiB,IAAMC,W,snCCrGpB,IAAM5C,GAAUV,IAAOW,IAAV,KAKP4C,GAAevD,IAAOa,EAAV,KAMZ2C,GAAexD,IAAOyD,OAAV,KAUZC,GAAM1D,IAAOW,IAAV,KASHgD,GAAoB3D,IAAOW,IAAIiD,OAAM,SAAAzD,GAAK,MAAK,CACxD0D,SAAU,QADmB7D,CAAH,IAQP0D,IAKVI,GAAO9D,IAAOW,IAAV,KAUJoD,GAAe,SAAC5D,GAAD,OACxB,wBACI6D,KAAK,QACL3C,GAAG,QACH4C,SAAU9D,EAAM+D,aAChBC,MAAOhE,EAAMiE,MAJjB,SAKSjE,EAAMkE,OAAO3B,KAAK,SAAC0B,EAAOzB,GAAR,OACf,wBAAQwB,MAAOC,EAAf,SAA+BA,GAAJzB,S,iBC7D5B,SAAS2B,GAChBC,EACAC,EACAC,GACiC,IAAjCC,EAAgC,4DAAXC,EACzB,yDACI,WAAYxE,GAAQ,IAAD,8BACf,cAAMA,IACD+D,aAAe,EAAKA,aAAaU,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKzC,MAAL,6BACOqC,GADP,IAEIM,KAAM,GACNC,aAAc,GACdC,eAAgB,KARL,EADvB,uDAaeC,EAAMC,GAChB,IAAD,OAD0BC,EAC1B,uDADkC,IAE1BC,EAAuB,YAATH,EAAqB,iBAAmB,eAC1DzC,KAAKS,SAAL,gBAAiBmC,EAAcF,IAC/BG,YAAW,kBAAM,EAAKpC,SAAL,gBAAiBmC,EAAc,OAAOD,KAjB/D,0CAqByB,IAAD,OAChBG,MAAMb,EAAU,CACZc,OAAQ,QAEPC,MAAK,SAAAC,GACF,GAAIA,EAAIC,GAAI,OAAOD,EAAIE,UAE1BH,MAAK,SAAAI,GACF,EAAK3C,SAAS,CAAE6B,KAAMc,EAAKC,gBAE9BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,QA/BxC,mCAkCiBG,GACT1D,KAAKS,SAAL,gBAAiBiD,EAAEC,OAAO9E,GAAK6E,EAAEC,OAAOhC,UAnChD,mCAsCiB+B,GAAI,IAAD,OACZA,EAAEE,iBAEF,IAAIC,EAAU,CACVd,OAAQ,OACRe,QAAS,CACL,eAAgB,mBAChB,eAAgB9D,KAAKL,MAAM2C,MAE/ByB,KAAMC,KAAKC,UAAUjE,KAAKL,QAG9BmD,MAAMb,EAAU4B,GACXb,MAAK,SAAAC,GACF,IAAKA,EAAIC,GAAI,CAGT,MADA,EAAKgB,WAAW,QADF,wBAER,IAAIC,MAAM,yBAEpB,OAAOlB,EAAIE,UAEdH,MAAK,SAAAI,GACE,EAAKzF,MAAMyG,sBAAsB,EAAKzG,MAAMyG,qBAAqBhB,GACrE,IAAIV,EAAUR,EAAuBA,EAAqBkB,GAAQ,WAClE,EAAKc,WAAW,UAAWxB,MAG9BY,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,QAjExC,+BAsEQ,OAAO,cAACxB,EAAD,0CACC/B,KAAKrC,OACLqC,KAAKL,OAFN,IAGH+B,aAAc1B,KAAK0B,aACnBW,aAAcrC,KAAKqC,oBA1E/B,GAAqBxB,IAAMC,W,mvCCD/B,IAAMI,GAAM1D,YAAO6G,GAAP7G,CAAH,MAIH8G,GAAgB9G,IAAOW,IAAV,KAkBb6C,IAKAuD,GAAO/G,IAAOgH,KAAV,MAwFKC,GATG3C,G,kLA1CV9B,KAAKrC,MAAM+D,aAAa,CACpBiC,OAAQ,CACJ9E,GAAI,QACJ8C,MAAO3B,KAAKrC,MAAMkE,OAAO,Q,+BAMjC,OACI,eAAC0C,GAAD,CACIG,SAAU1E,KAAKrC,MAAM0E,aACrBsC,aAAa,MAFjB,UAII,uBAAOC,QAAQ,QAAf,qBACA,eAACzD,GAAD,WACI,0BACIM,SAAUzB,KAAKrC,MAAM+D,aACrB7C,GAAG,QACH2C,KAAK,QACLqD,YAAY,oBACZlD,MAAO3B,KAAKrC,MAAMmH,QACtB,cAAC,GAAD,OAGJ,eAACR,GAAD,WACI,cAAC,GAAD,CACI5C,aAAc1B,KAAKrC,MAAM+D,aACzBE,MAAO5B,KAAKrC,MAAMiE,MAClBC,OAAQ7B,KAAKrC,MAAMkE,SAEvB,cAACb,GAAD,CACIyB,KAAK,SACLiC,SAAU1E,KAAKrC,MAAM0E,aAFzB,8B,GAjCYxB,IAAMC,WA8ClC,CACIgE,MAAO,GACPlD,MAAO,IAEX,Y,6hECjHJ,IAAM0C,GAAgB9G,IAAOW,IAAV,MAwCb4G,GAASvH,IAAOyD,OAAV,MAsBN+D,GAAWxH,IAAOyH,GAAV,MAMRC,GAAa1H,IAAOyH,GAAV,MAKV/G,GAAUV,IAAOW,IAAV,MA+BPgH,G,kDACF,WAAYxH,GAAQ,IAAD,8BACf,cAAMA,IAEDgC,MAAQ,CACTiC,MAAO,MACPC,OAAO,CACH,OADE,oBAEC,EAAKlE,MAAMkE,UAItB,EAAKuD,YAAc,EAAKA,YAAYhD,KAAjB,gBACnB,EAAKV,aAAe,EAAKA,aAAaU,KAAlB,gBAZL,E,+DAeAvC,EAAWC,GACtBD,IAAcG,KAAKrC,OACnBqC,KAAKS,SAAS,CACVoB,OAAO,CACH,OADE,oBAEC7B,KAAKrC,MAAMkE,a,kCAMlB6B,GAAI,IAAD,OAEP2B,GAD8B,QAArBrF,KAAKL,MAAMiC,MAAkB5B,KAAKL,MAAMkC,OAAOyD,MAAM,GAAK,CAACtF,KAAKL,MAAMiC,QAChE2D,QAAO,SAAClH,EAAGmH,GAAJ,OAAWnH,GAAMmH,EAAI,OAAO,IAAIF,MAAM,GAAI,GAEpExC,MAAM,oBAAD,OAAqBuC,IACrBrC,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACFqC,UAAUC,UAAUC,UAAUvC,GAC9B,EAAKzF,MAAMiI,wBAEdtC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,Q,mCAGvBG,GACT1D,KAAKS,SAAS,CAAEmB,MAAO8B,EAAEC,OAAOhC,QAChC3B,KAAKrC,MAAMkI,iBAAiBnC,EAAEC,OAAOhC,S,+BAIrC,OACI,eAAC,GAAD,WACI,cAACoD,GAAD,CACItC,KAAK,SACLqD,QAAS9F,KAAKoF,YAFlB,wBAKA,cAAC,GAAD,CACI1D,aAAc1B,KAAK0B,aACnBC,MAAO3B,KAAKL,MAAMiC,MAClBC,OAAQ7B,KAAKL,MAAMkC,gB,GAxDVhB,IAAMC,WA+DnC,SAASiF,GAAapI,GAClB,OACI,gCACI,8EACA,cAACqH,GAAD,UAAWrH,EAAMqI,cAKd,SAASC,GAAUtI,GAC9B,IAAMuI,EAAoBvI,EAAMqI,SAASG,OAAS,EAC5C,cAACJ,GAAD,CAAcC,SAAUrI,EAAMqI,WAC9B,KAEN,OACI,eAAC,GAAD,WACI,oCACKE,EACD,4CAAc,+BAAOvI,EAAMyI,QAA3B,mBAAwD,+BAAOzI,EAAM0I,gBAArE,OACA,iFACA,cAACnB,GAAD,UAAavH,EAAM2I,iBAGvB,cAAC,GAAD,CACIV,mBAAoBjI,EAAM4I,kBAC1B1E,OAAQlE,EAAMkE,OACdgE,iBAAkBlI,EAAMkI,sB,mdC7LxC,IAAM3H,GAAUV,YAAO8D,GAAP9D,CAAH,MA2BQgJ,G,kDACjB,WAAY7I,GAAQ,IAAD,8BACf,cAAMA,IAED8I,cAAgB,EAAKA,cAAcrE,KAAnB,gBACrB,EAAKmE,kBAAoB,EAAKA,kBAAkBnE,KAAvB,gBACzB,EAAKsE,aAAe,EAAKA,aAAatE,KAAlB,gBACpB,EAAKyD,iBAAmB,EAAKA,iBAAiBzD,KAAtB,gBAExB,EAAKuE,MAAQ,GAEb,EAAKhH,MAAQ,CACTyG,MAAO,EACPQ,YAAa,GACb7G,SAAU,GACVuG,YAAa,GACbN,SAAU,GACVnE,OAAQ,GACRgF,mBAAoB,OAjBT,E,0DAqBLzD,GAAO,IAAD,OAChBpD,KAAKS,SAAS,CAAEuF,SAAU5C,EAAK0D,cAC/BtD,QAAQuD,IAAI/G,KAAKL,OACjBkD,YAAW,kBAAM,EAAKpC,SAAS,CAAEuF,SAAU,OAAO,KAClDhG,KAAKgH,kBACLhH,KAAKiH,wB,0CAGY,IAAD,OAChBjH,KAAKS,SAAS,CAAE6F,YAAa,kDAC7BzD,YAAW,kBAAM,EAAKpC,SAAS,CAAE6F,YAAa,OAAO,O,uCAGxC1E,GACb5B,KAAKS,SAAS,CAAEoG,mBAAoBjF,IACpC,IAAI4D,EAAIxF,KAAKL,MAAMiH,YAAYhF,GAC/B5B,KAAKS,SAAS,CAAE2F,MAAMZ,M,4CAGH,IAAD,OAClB1C,MAAM,cACDE,MAAK,SAAAC,GACF,GAAIA,EAAIC,GAAI,OAAOD,EAAIE,UAE1BH,MAAK,SAAAI,GACF,EAAK3C,SAAS,CAAEV,SAAUqD,OAE7BE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,Q,wCAGjB,IAAD,OACdT,MAAM,cACDE,MAAK,SAAAC,GACF,GAAIA,EAAIC,GAAI,OAAOD,EAAIE,UAE1BH,MAAK,SAAAI,GACF,EAAK3C,UAAS,SAAAd,GAAK,MAAK,CACpBiH,YAAaxD,EACbgD,MAAOhD,EAAKzD,EAAMkH,2BAGzBvD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,Q,qCAGpB,IAAD,OACXvD,KAAKrC,MAAM+I,eACP1G,KAAKL,MAAMI,SAASoG,OAAS,GAC7BnG,KAAK2G,MAAQ3G,KAAKL,MAAMI,SACxB8C,YAAW,kBAAM,EAAKpC,SAAS,CAAEV,SAAU,OAAO,MAGlDC,KAAKS,SAAS,CAAEV,SAAUC,KAAK2G,U,0CAKnC3G,KAAKiH,sBACLjH,KAAKgH,oB,+BAIL,OACI,eAAC,GAAD,WACI,oCACI,cAAC/I,EAAD,IACA,cAAC,GAAD,CACImG,qBAAsBpE,KAAKyG,cAC3B5E,OAAQ7B,KAAKrC,MAAMkE,YAG3B,kCACI,cAACoE,GAAD,CACID,SAAUhG,KAAKL,MAAMqG,SACrBI,MAAOpG,KAAKL,MAAMyG,MAClBC,cAAerG,KAAKL,MAAMkH,mBAC1BhB,iBAAkB7F,KAAK6F,iBACvBS,YAAatG,KAAKL,MAAM2G,YACxBC,kBAAmBvG,KAAKuG,kBACxB1E,OAAQ7B,KAAKrC,MAAMkE,WAI3B,cAAC,EAAD,CAAQnB,SAAUV,KAAKrC,MAAM+C,SAAUX,SAAUC,KAAKL,MAAMI,kB,GAxGtCc,IAAMC,W,wXClC5C,IAAM5C,GAAUV,IAAO0J,QAAV,MAsBE,SAASC,KACpB,OACI,cAAC,GAAD,UACQ,+BACI,6BACI,mKAMJ,6BACI,mHAMJ,6BACI,iM,+VCvCxB,IAAMjJ,GAAUV,IAAOW,IAAV,MAkBE,SAASiJ,GAAUzJ,GAC9B,OACI,eAAC,GAAD,WACI,uBAAOiH,QAASjH,EAAMkB,GAAtB,SAA2BlB,EAAM0J,WACjC,eAAClG,GAAD,WACI,uBACIQ,MAAOhE,EAAMgE,MACbF,SAAU9D,EAAM8D,SAChB5C,GAAIlB,EAAMkB,GACV4D,KAAM9E,EAAM8E,KACZjB,KAAM7D,EAAM6D,KACZqD,YAAalH,EAAMkH,YACnBF,aAAchH,EAAMgH,cAAgB,MACpC2C,UAAQ,IACZ,cAACpG,GAAD,UCGhB,IAQeqG,GARGzF,IAlClB,SAA2BnE,GACvB,OACI,uBACI+G,SAAU/G,EAAM0E,aAChBxD,GAAG,YAFP,UAII,cAACuI,GAAD,CACIvI,GAAG,YACH8C,MAAOhE,EAAM6J,UACb/F,SAAU9D,EAAM+D,aAChBiD,aAAa,KACbnD,KAAK,YACLiB,KAAK,OANT,oBAUA,cAAC2E,GAAD,CACIvI,GAAG,YACH8C,MAAOhE,EAAM8J,UACbhG,SAAU9D,EAAM+D,aAChBF,KAAK,YACLiB,KAAK,WALT,uBASA,eAAC,GAAD,WACI,cAAC1B,GAAD,UAAepD,EAAM4E,eACrB,cAACvB,GAAD,CAAcyB,KAAK,SAAnB,4BASZ,CACI+E,UAAW,GACXC,UAAW,IAEf,cCaJ,IAUeC,GAVM5F,IArDrB,SAA8BnE,GAC1B,OACI,uBACI+G,SAAU/G,EAAM0E,aAChBxD,GAAG,eACH8B,MAAOhD,EAAMgD,MAHjB,UAKI,cAACyG,GAAD,CACIvI,GAAG,YACH8C,MAAOhE,EAAM6J,UACb/F,SAAU9D,EAAM+D,aAChBF,KAAK,YACLiB,KAAK,OALT,oBASA,cAAC2E,GAAD,CACIvI,GAAG,YACH8C,MAAOhE,EAAM8J,UACbhG,SAAU9D,EAAM+D,aAChBF,KAAK,YACLiB,KAAK,WALT,uBASA,cAAC2E,GAAD,CACIvI,GAAG,mBACH8C,MAAOhE,EAAMgK,iBACblG,SAAU9D,EAAM+D,aAChBF,KAAK,mBACLiB,KAAK,WALT,8BASA,cAAC2E,GAAD,CACIvI,GAAG,aACH8C,MAAOhE,EAAMiK,WACbnG,SAAU9D,EAAM+D,aAChBF,KAAK,aACLiB,KAAK,OALT,wBAUA,eAAC,GAAD,WACI,cAAC1B,GAAD,UAAepD,EAAM4E,eACrB,cAACvB,GAAD,CAAcyB,KAAK,SAAnB,4BASZ,CACI+E,UAAW,GACXC,UAAW,GACXE,iBAAkB,GAClBC,WAAY,IAEhB,iB,mwCC5DJ,IAAMC,GAAcrK,IAAOW,IAAV,MAsBX2J,GAAStK,IAAOW,IAAV,MAyBN4J,GAAUvK,IAAOW,IAAV,MAQP6J,GAAiBxK,IAAOW,IAAV,MA2DL8J,G,kDApDX,WAAYtK,GAAQ,IAAD,8BACf,cAAMA,IAEDuK,cAAgB,EAAKA,cAAc9F,KAAnB,gBACrB,EAAK+F,iBAAmB,EAAKA,iBAAiB/F,KAAtB,gBAExB,EAAKzC,MAAQ,CAAEyI,IAAK,SANL,E,4DAUfpI,KAAKS,SAAS,CAAE2H,IAAK,Y,yCAIrBpI,KAAKS,SAAS,CAAE2H,IAAK,e,+BAIrB,IAAM5D,EACiB,UAAnBxE,KAAKL,MAAMyI,IACL,cAAC,GAAD,CAAWhE,qBAAsBpE,KAAKrC,MAAM0K,UAC5C,cAAC,GAAD,IAEV,OACI,eAACR,GAAD,WAEMrD,EAEF,eAACsD,GAAD,WACI,wBACIrF,KAAK,SACL5E,UAA8B,aAAnBmC,KAAKL,MAAMyI,IAAqB,SAAW,GACtDtC,QAAS9F,KAAKmI,iBAHlB,sBAOA,cAACH,GAAD,UACI,cAACD,GAAD,MAGJ,wBACItF,KAAK,SACL5E,UAA8B,UAAnBmC,KAAKL,MAAMyI,IAAkB,SAAW,GACnDtC,QAAS9F,KAAKkI,cAHlB,6B,GAzCOrH,IAAMC,W,4OC7DjC,IAAM5C,GAAUV,YAAO8D,GAAP9D,CAAH,MAYE,SAAS8K,GAAU3K,GAC9B,OACE,eAAC,GAAD,WACE,cAACwJ,GAAD,IACA,cAAC,GAAD,CAAckB,QAAS1K,EAAM0K,a,o2BChBrC,IAAME,GAAS,CACX,iBACA,gBACA,OACA,OACA,UAGErK,GAAUV,IAAOW,IAAV,MAePqK,GAAMhL,IAAOW,IAAV,MAMH,SAAAR,GAAK,MAAI,eAAiBA,EAAM8K,IAAM,OAGtC1D,GAASvH,IAAOW,IAAV,KAYNqK,IAYeE,G,kDACjB,WAAY/K,GAAQ,IAAD,8BACf,cAAMA,IAEDgL,SAAW,EAAKA,SAASvG,KAAd,gBAEhB,EAAKwG,OAASC,GACd,EAAKC,MAAQC,OAAOC,KAAK,EAAKJ,QANf,E,qDASVK,GACL,IAAIC,EAAQlJ,KAAK4I,OAAOK,GAExB,IAAK,IAAIE,KAAQD,EACbE,SAASC,gBAAgB1I,MAAM2I,YAAYH,EAAMD,EAAMC,M,+BAIrD,IAAD,OACL,OACI,eAAC,GAAD,WACI,8CAECnJ,KAAK8I,MAAM5I,KAAI,SAACsB,EAAMrB,GAAP,OACZ,eAAC,GAAD,CAAQ2F,QAAS,kBAAM,EAAK6C,SAASnH,IAArC,UACI,4BAAIA,IACHuH,OAAOQ,OAAO,EAAKX,OAAOpH,IAAOtB,KAAK,SAACuI,EAAKtI,GAAN,OAAY,cAACqI,GAAD,CAAKC,IAAKA,EAAae,MAAOjB,GAAOpI,IAAjBA,QAF1BA,a,GAxB5BU,IAAMC,W,2wBCtD/C,IAAM2I,GAAiBjM,YAAOuD,GAAPvD,CAAH,MAIdU,GAAUV,IAAOW,IAAV,MAsBPuL,GAAelM,IAAOW,IAAV,KAcZ4C,GAAiB0I,IAuDvB,IAAME,GAAW7H,IA/CjB,SAA0BnE,GACtB,OACI,uBAAM+G,SAAU/G,EAAM0E,aAAtB,UACI,eAACqH,GAAD,WACI,qDACA,cAAC3I,GAAD,UAAepD,EAAM4E,eACrB,cAACkH,GAAD,UAAiB9L,EAAM6E,iBACvB,cAAC4E,GAAD,CACIzF,MAAOhE,EAAMiM,eACb/K,GAAG,iBACH4D,KAAK,OACLhB,SAAU9D,EAAM+D,aAChBF,KAAK,iBACLqD,YAAY,WAEpB,cAAC7D,GAAD,CAAcyB,KAAK,SAAnB,uBAkCR,CAAEmH,eAAgB,IAClB,mBACA,SAACxG,GAAD,uBAAoBA,EAAK5B,KAAzB,cAGEqI,GAAa/H,IAlCnB,SAA4BnE,GACxB,OACI,uBAAM+G,SAAU/G,EAAM0E,aAAcxD,GAAG,aAAvC,UACI,eAAC6K,GAAD,WACI,kDACA,cAAC3I,GAAD,UAAepD,EAAM4E,eACrB,cAACkH,GAAD,UAAiB9L,EAAM6E,iBACvB,cAAC4E,GAAD,CACIzF,MAAOhE,EAAMmM,kBACbjL,GAAG,oBACH4D,KAAK,OACLhB,SAAU9D,EAAM+D,aAChBF,KAAK,oBACLqD,YAAY,SAChB,cAACuC,GAAD,CACIzF,MAAOhE,EAAMoM,iBACblL,GAAG,mBACH4D,KAAK,OACLhB,SAAU9D,EAAM+D,aAChBF,KAAK,mBACLqD,YAAY,WAEpB,cAAC7D,GAAD,CAAcyB,KAAK,SAAnB,yBAcR,CACIqH,kBAAmB,GACnBC,iBAAkB,IAEtB,qBACA,SAAC3G,GAAD,8BAA2BA,EAAK5B,KAAhC,qBAAiD4B,EAAK7C,QAG3C,SAASyJ,GAAarM,GAC7B,OACI,eAAC,GAAD,WACMA,EAAMsM,SACN,cAACN,GAAD,CAAUvF,qBAAsBzG,EAAMuM,gBACtC,GACF,cAACL,GAAD,O,q/DCvHhB,IAAMM,GAAO,SAACxM,GAAD,OACT,qBAAKyM,QAAQ,MAAMvL,GAAG,UAAUwL,EAAE,MAAMC,EAAE,MAAM3L,MAAM,WAAWC,OAAO,YAAY2L,QAAQ,qBAAqBC,iBAAiB,yBAAlI,SAA2J,4BACvJ,sBAAMC,SAAS,UAAUC,SAAS,UAAU5L,EAAE,2uCAKhDiG,GAASvH,IAAOyD,OAAV,MAmBN/C,GAAUV,IAAOW,IAAV,MAiEPwM,GAASnN,IAAOO,GAAV,MAKN6M,GAAiBpN,IAAOW,IAAV,MAWd0M,GAAe,SAAClN,GAAD,OACjB,cAAC,GAAD,CACImI,QAASnI,EAAMmN,SACfrI,KAAK,SAFT,qBAOEsI,GAAe,SAACpN,GAAD,OACjB,cAAC,GAAD,CACImI,QAASnI,EAAM+I,aADnB,4BAMW,SAASsE,GAASrN,GAC7B,OACI,eAAC,GAAD,WACI,cAAC,GAAD,IACA,eAACgN,GAAD,oBAAehN,EAAM6D,KAArB,OACA,cAACwI,GAAD,CACIC,SAAUtM,EAAMsM,SAChBC,cAAevM,EAAMuM,gBAEzB,cAAC,GAAD,IACEvM,EAAMsM,SACN,eAACW,GAAD,WACE,cAAC,GAAD,CAAcE,SAAUnN,EAAMmN,WAC9B,cAAC,GAAD,CAAcpE,aAAc/I,EAAM+I,kBAEpC,M,ICxIOuE,G,kDACjB,WAAYtN,GAAQ,IAAD,8BACf,cAAMA,IAED0K,QAAU,EAAKA,QAAQjG,KAAb,gBACf,EAAK0I,SAAW,EAAKA,SAAS1I,KAAd,gBAChB,EAAKsE,aAAe,EAAKA,aAAatE,KAAlB,gBACpB,EAAK8H,cAAgB,EAAKA,cAAc9H,KAAnB,gBAErB,EAAKzC,MAAQ,CACTsK,UAAU,EACViB,QAAQ,EACRC,SAAU,WACVtJ,OAAQ,IAZG,E,4DAgBF,IAAD,OACZiB,MAAM,YAAa,CACfC,OAAQ,QAEPC,MAAK,SAAAC,GACF,GAAIA,EAAIC,GACJ,OAAOD,EAAIE,OAIX,MADA,EAAK1C,SAAS,CAAEwJ,UAAU,IACpB,IAAI9F,MAAM,kBAGvBnB,MAAK,SAAAI,GACF,EAAK3C,SAAS,CACVwJ,UAAU,EACVkB,SAAU/H,EAAK5B,KACfK,OAAQuB,EAAKvB,SAEjB,EAAKuJ,gBAER9H,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,Q,0CAIhCvD,KAAKkK,kB,gCAILlK,KAAKkK,kB,iCAGG,IAAD,OACPpH,MAAM,cAAe,CACjBC,OAAQ,QAEPC,MAAK,SAAAC,GACEA,EAAIC,IACJ,EAAKzC,SAAS,CACVwJ,UAAU,EACVkB,SAAU,gBAIrB7H,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,Q,mCAGtB,IAAD,OACTV,YACI,WAAQ,EAAKpC,UAAS,SAAAd,GAAK,MAAK,CAAEuL,OAAQvL,EAAMsK,eAC9C,K,qCAGM,IAAD,OACXpH,YACI,WAAQ,EAAKpC,UAAS,SAAAd,GAAK,MAAK,CAAEuL,QAASvL,EAAMuL,aAC/C,GACN1H,QAAQuD,IAAI/G,KAAKL,S,+BAKjB,IAAI0L,EAAOrL,KAAKL,MAAMsK,SAChB,cAAC,GAAD,CACEvJ,SAAUV,KAAKL,MAAMuL,OACrBxE,aAAc1G,KAAK0G,aACnBoE,SAAU9K,KAAK8K,SACfjJ,OAAQ7B,KAAKL,MAAMkC,SACrB,cAACyG,GAAD,CAAWD,QAASrI,KAAKqI,UAE/B,OACI,sBAAKxK,UAAU,MAAf,UACI,cAACG,EAAD,IACA,cAACgN,GAAD,CACIxJ,KAAMxB,KAAKL,MAAMwL,SACjBL,SAAU9K,KAAK8K,SACfpE,aAAc1G,KAAK0G,aACnBuD,SAAUjK,KAAKL,MAAMsK,SACrBC,cAAelK,KAAKkK,gBAEvBmB,EACD,cAAC,EAAD,W,GAlGiBxK,IAAMC,WCJvCwK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFpC,SAASqC,eAAe,W","file":"static/js/main.1cb1c315.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\n\n// < STYLE >\nconst FooterWrapper = styled.footer`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  margin: 0.5em;\n  text-align: right;\n  font-size: 0.9em;\n  color: var(--form-color);\n  z-index: 3;\n\n  p {\n      margin: 0;\n  }\n\n  a {\n    text-decoration: none;\n    color: var(--form-color);\n    font-size: 1.4em;\n    font-weight: bold;\n  }\n\n    @media screen and (max-width: 1100px) {\n        text-align: center;\n        top: 5em;\n        bottom: unset;\n        height: auto;\n        left: 50%;\n        transform: translateX(-50%);\n    }\n`;\n// </ STYLE >\n\n\nfunction Footer(props) {\n    return(\n    <FooterWrapper>\n        <p>Created by: <br /> <a href=\"https://github.com/RafalKornel\"> <i className=\"fab fa-github-square\"></i> Rafał Kornel </a> </p>\n    </FooterWrapper>\n    )\n}\n\nexport default Footer;","import styled from \"styled-components\";\n\n// < STYLE >\nconst LogoHeader = styled.h1`\n    position: absolute;\n    font-size: 100px;\n    line-height: 70px;\n    margin: 2rem;\n    cursor: default;\n    user-select: none;\n\n    @media screen and (max-width: 1100px) {\n        margin: 0;\n        margin-top: 1rem;\n        font-size: 40px;\n        left: 40%;\n        transform: translateX(-50%);\n        text-align: center;\n    }\n\n    @media screen and (min-width: 1600px) {\n        margin: 4rem;\n    }\n`;\n// </ STYLE >\n\nexport default function Logo(props) {\n    return <LogoHeader>PICTIONAR</LogoHeader>;\n  }","export default function Tutorial(props) {\n    return (\n        <article className=\"tutorial\">\n            <h2>Type phrases or words separated by coma, then hit “Send” button to add them to database!\n            Words can only contain letters and numbers, and can be separated by spaces to form phrases.\n            </h2>\n        </article>\n    );\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n    min-width: 200px;\n    width: max-content;\n    height: 70px;\n    z-index: 2;\n    border-radius: 9px;\n    display: flex;\n    flex-direction: column;\n    margin: 10px;\n    cursor: default;\n\n    background-color: var(--input-color);\n    color: var(--form-color);\n\n    p {\n        margin: 5px 10px;\n    }\n`;\n\nconst Word = styled.p`\n    font-size: 1.6em;\n    text-align: left;\n`;\n\nconst Author = styled.p`\n    font-size: 1.3em;\n    text-align: right;\n`;\n\nexport default function Panel(props) {\n    return (\n        <Wrapper>\n            <Word>{props.word}</Word>\n            <Author>{props.author}</Author>\n        </Wrapper>\n    );\n}","import Panel from \"./panel\";\nimport React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\n// < SVG's components >\nfunction SVGPathSmall() {\n    return (\n        <svg width=\"0\" height=\"0\">\n            <defs>\n                <clipPath id=\"smallClip\">\n                    <path d=\"M632 0V553H0L632 0Z\" />\n                </clipPath>\n            </defs>\n        </svg>\n    );\n}\n\nfunction SVGPathBig() {\n    return (\n        <svg width=\"0\" height=\"0\">\n            <defs>\n                <clipPath id=\"mainClip\">\n                    <path d=\"M2828 0H0V2189H2226L2828 1664V0Z\" />\n                </clipPath>\n            </defs>\n        </svg>\n    );\n}\n// </ SVG's components >\n\n\n// < STYLE >\nconst AnimationContainer = styled.div`\n    position: absolute;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n`;\n\nconst corner = styled.div`\n    width: 632px;\n    height: 553px;\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    clip-path: url(#smallClip);\n    background-attachment: fixed;\n    transition: transform 500ms ease;\n\n    @media screen and (max-width: 1100px) {\n        transform: scale(0.4) translate(75%, 75%);\n        bottom: 0%;\n    }\n`;\n\nconst SliderCorner = styled(corner)`\n    background-image: var(--bcg);\n    z-index: 2;\n\n    ${props => props.moved ? \"transform: translate(200px, 200px)\" : \"\"};\n\n\n    @media screen and (max-width: 1100px) {\n        background-image: none;\n        background-color: var(--gradient-light);\n\n        ${props => props.moved ? \"transform: scale(0.4) translate(109%, 109%)\" : \"\"};\n    }\n`;\n\nconst BackCorner = styled(corner)`\n    background-color: var(--form-color);\n    display: flex;\n\n    z-index: 0;\n`;\n\nconst MessagesWrapper = styled.div`\n    display: flex;\n    transform-origin: top left;\n    transform: rotate(-41deg) translate(-60%, 76%);\n    flex-direction: column;\n`;\n\nlet slideshow = keyframes`\n    0% { transform: translate(-50%, 0); }\n    100% { transform: translate(50%, 0); }\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    animation: ${slideshow} 30s linear infinite;\n`;\n\nconst RowWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n`;\n// </ STYLE >\n\n\nclass Corner extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            panels: [],\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.messages === this.props.messages || this.props.messages === []) return;\n\n        let panelsSorted = [[], [], []];\n        let panels = this.props.messages.map(({ user, word }, i) => (<Panel author={user} word={word} key={i} />));\n\n        panels.forEach(panel => {\n            let i = panel.key % 3;\n            panelsSorted[i].push(panel);\n        });\n\n        this.setState({ panels: panelsSorted });\n    }\n\n\n    render() {\n        return (\n            <AnimationContainer>\n                <SVGPathSmall />\n                <SVGPathBig />\n\n                <SliderCorner moved={this.props.switched} />\n                <BackCorner >\n                    <MessagesWrapper>\n                        <RowWrapper>\n                            <Row>{this.state.panels[0]}</Row>\n                            <Row>{this.state.panels[0]}</Row>\n                        </RowWrapper>\n                        <RowWrapper style={{transform:\"translate(300px, 0)\"}}>\n                            <Row>{this.state.panels[1]}</Row>\n                            <Row>{this.state.panels[1]}</Row>\n                        </RowWrapper>\n                        <RowWrapper>\n                            <Row>{this.state.panels[2]}</Row>\n                            <Row>{this.state.panels[2]}</Row>\n                        </RowWrapper>\n                    </MessagesWrapper>\n                </BackCorner>\n            </AnimationContainer>\n        )\n    }\n}\n\nexport default Corner;","import styled from \"styled-components\";\n\n// < STYLE >\nexport const Wrapper = styled.div`\n    display: flex;\n    margin: 0.5em 0;\n`;\n\nexport const ErrorMessage = styled.p`\n    color: red;\n    margin: auto;\n    line-height: 100%;\n`;\n\nexport const SubmitButton = styled.button`\n    background-color: var(--input-color);\n    color: var(--form-color);\n    font-size: 1.15em;\n    width: 100px;\n    height: 30px;\n    margin-left: auto;  \n    margin-bottom: auto;\n`;\n\nexport const Bar = styled.div`\n    width: 90%;\n    height: 6px;\n    transition: 150ms all ease;\n    background-color: var(--input-color);\n    border-radius: 9px;\n    margin-left: auto;\n`;\n\nexport const InnerFieldWrapper = styled.div.attrs(props => ({\n    tabIndex: \"-1\",\n}))\n`\n    &:focus-within {\n        outline: none;\n    }\n\n    &:focus-within > ${Bar} {\n        width: 100%;\n    }\n`;\n\nexport const Page = styled.div`\n    display: flex;\n    height: 100%;\n\n    @media screen and (max-width: 1100px) {\n        flex-direction: column;\n        margin-top: 6.5em;\n    }\n`;\n\nexport const GroupsSelect = (props) => (\n    <select \n        name=\"group\" \n        id=\"group\" \n        onChange={props.handleChange} \n        value={props.group}>\n            {props.groups.map( (group, i) => (\n                <option value={group} key={i}>{group}</option> ))}\n    </select>\n);","import React from \"react\";\n\nexport default function withFormLogic(\n        WrappedComponent, \n        dataShape, \n        endpoint, \n        createSuccessMessage=undefined) {\n    return class extends React.Component {\n        constructor(props) {\n            super(props);\n            this.handleChange = this.handleChange.bind(this);\n            this.handleSubmit = this.handleSubmit.bind(this);\n            this.state = {\n                ...dataShape,\n                csrf: \"\",\n                errorMessage: \"\",\n                successMessage: \"\",\n            };\n        }\n\n        setMessage(type, message, timeout=5000)\n        {\n            let messageType = type === \"success\" ? \"successMessage\" : \"errorMessage\";\n            this.setState({ [messageType]: message });\n            setTimeout(() => this.setState({ [messageType]: \"\" }), timeout);\n        }\n\n\n        componentDidMount() {\n            fetch(endpoint, {\n                method: \"GET\",\n            })\n                .then(res => {\n                    if (res.ok) return res.json()\n                })\n                .then(data => {\n                    this.setState({ csrf: data.csrf_token })\n                })\n                .catch(err => console.error(err));\n        }\n\n        handleChange(e) {\n            this.setState({ [e.target.id]: e.target.value });\n        }\n\n        handleSubmit(e) {\n            e.preventDefault();\n\n            let options = {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-CSRF-TOKEN\": this.state.csrf,\n                },\n                body: JSON.stringify(this.state),\n            }\n\n            fetch(endpoint, options)\n                .then(res => {\n                    if (!res.ok) {\n                        let message = \"Something went wrong\";\n                        this.setMessage(\"error\", message);\n                        throw new Error(\"Something went wrong.\");\n                    }\n                    return res.json();\n                })\n                .then(data => {\n                    if (this.props.afterSuccessfulFetch) this.props.afterSuccessfulFetch(data);\n                    let message = createSuccessMessage ? createSuccessMessage(data) : \"Success!\"; \n                    this.setMessage(\"success\", message);\n\n                })\n                .catch(err => console.error(err));\n        }\n\n\n        render() {\n            return <WrappedComponent \n                {...this.props} \n                {...this.state}\n                handleChange={this.handleChange}\n                handleSubmit={this.handleSubmit} />;\n        }\n    }\n}","import React from \"react\";\nimport { GroupsSelect, SubmitButton, InnerFieldWrapper, Bar as ProtoBar } from \"../Utilities/common\"\nimport styled from \"styled-components\";\nimport withFormLogic from \"../Utilities/formLogic\";\n\n//  < STYLE >\nconst Bar = styled(ProtoBar)`\n    margin-bottom: 1em;\n`;\n\nconst ButtonWrapper = styled.div`\n    margin-left: auto;\n    display: flex;\n    width: 90%;\n\n    select {\n        margin-right: 1em;\n        margin-left: auto;\n        \n        outline: none;\n        border-radius: 3px;\n        border: none;\n        font-size: 1.1em;\n\n        color: var(--input-color);\n        background: var(--form-color);\n    }\n\n    ${SubmitButton} {\n        margin-left: 0;\n    }\n`;\n\nconst Form = styled.form`\n    background-color: var(--form-color);\n    color: var(--text-color);\n\n    display: flex;\n    flex-direction: column;\n\n    transition: all 400ms ease;\n\n    border-radius: 10px;\n    width: 25em;\n    padding: 3em;\n    margin: 0 auto;\n    \n    textarea {\n        margin-left: 10%;\n        margin-top: 1em;\n        height: 12em;\n        width: 90%;\n        resize: none;\n        border: none;\n        outline: none;\n        background-color: var(--form-color);\n        color: var(--text-color);\n        font-size: 1.1em;\n    }\n\n    @media screen and (max-width: 1100px) {\n        width: 80%;\n        padding: 2em;\n    }\n`;\n//  </ STYLE >\n\n\nclass WordsFormTemplate extends React.Component {\n    componentDidMount() {\n        this.props.handleChange({\n            target: {\n                id: \"group\",\n                value: this.props.groups[0],\n            }\n        })\n    }\n\n    render() {\n        return (\n            <Form\n                onSubmit={this.props.handleSubmit}\n                autoComplete=\"off\" >\n\n                <label htmlFor=\"words\">Words: </label>\n                <InnerFieldWrapper>\n                    <textarea\n                        onChange={this.props.handleChange}\n                        id=\"words\"\n                        name=\"words\"\n                        placeholder=\"Type word(s) here\" \n                        value={this.props.words} />\n                    <Bar />\n                </InnerFieldWrapper>\n\n                <ButtonWrapper>\n                    <GroupsSelect\n                        handleChange={this.props.handleChange}\n                        group={this.props.group}\n                        groups={this.props.groups}\n                    />\n                    <SubmitButton\n                        type=\"submit\"\n                        onSubmit={this.props.handleSubmit}>\n                        Submit\n                </SubmitButton>\n                </ButtonWrapper>\n            </Form>\n        );\n    }\n}\n\nconst WordsForm = withFormLogic(\n    WordsFormTemplate,\n    {\n        words: \"\",\n        group: \"\",\n    },\n    \"/api/add\",\n)\n\nexport default WordsForm;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { GroupsSelect } from \"../Utilities/common\";\n\n// < STYLE >\nconst ButtonWrapper = styled.div`\n    position: relative;\n    width: max-content;\n    margin: 0 auto;\n    \n    transition: 400ms all ease;\n\n    &:hover {\n        transform: scale(1.2);\n    }\n\n    & > button:hover {\n        transform: none;\n    }\n\n    button {\n        padding-bottom: 8%;\n    }\n\n    select {\n        position: absolute;\n        bottom: 25%;\n        left: 50%;\n        transform: translate(-50%, 50%);\n        border: none;\n        background-color: var(--input-color);\n        color: var(--form-color);\n        font-size: 1.1em;\n        text-align: right;\n    }\n\n    @media screen and (max-width: 1100px) {\n        margin: 0 auto;\n        \n        select {\n        right: 0.3em;\n        }\n    }\n`;\n\nconst Button = styled.button`\n    height: 3em;\n    background-color: var(--input-color);\n    color: var(--form-color);\n    border: none;\n    border-radius: 12px;\n    font-size: 36px;\n    margin: 0 30px;\n    width: 9em;\n\n    &:focus {\n        outline: none;\n    }\n\n\n    @media screen and (max-width: 1100px) {\n        font-size: 32px;\n        height: 2.5em;\n        width: 7em;\n    }\n`;\n\nconst NewWords = styled.h2`\n    font-size: 1.1em;\n    color: var(--form-color);\n    font-weight: bold;\n`;\n\nconst CopySucess = styled.h2`\n    color: var(--form-color);\n    font-weight: bold;\n`;\n\nconst Wrapper = styled.div`\n    text-align: center;\n    margin: auto;\n\n    transition: all 400ms ease;   \n\n    span {\n        color: var(--form-color);\n        font-weight: bold;\n    }\n\n    @media screen and (max-width: 1100px) {\n        padding-bottom: 10em;\n        width: 100%;\n\n        article {\n            margin: 20px 0;\n        }\n        \n        h2 {\n            margin: 0.5em 0;\n        }\n    }\n\n    @media screen and (max-width: 1250px) {\n        padding-bottom: 15em;\n    }\n`;\n// </ STYLE >\n\n\nclass GetWordsButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            group: \"all\",\n            groups: [\n                \"all\",\n                ...this.props.groups,\n            ]\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps !== this.props) {\n            this.setState({\n                groups: [\n                    \"all\",\n                    ...this.props.groups,\n                ]\n            });\n        }\n    }\n\n    handleClick(e) {\n        let groups = this.state.group === \"all\" ? this.state.groups.slice(1) : [this.state.group];\n        let query = groups.reduce((p, c) => (p += (c + \",\")), \"\").slice(0, -1);\n\n        fetch(`/api/bank?groups=${query}`)\n            .then(res => res.json())\n            .then(data => {\n                navigator.clipboard.writeText(data);\n                this.props.showSuccessMessage();\n            })\n            .catch(err => console.error(err))\n    }\n\n    handleChange(e) {\n        this.setState({ group: e.target.value });\n        this.props.setSelectedGroup(e.target.value);\n    }\n\n    render() {\n        return (\n            <ButtonWrapper>\n                <Button\n                    type=\"button\"\n                    onClick={this.handleClick}>\n                    Get words!\n                </Button>\n                <GroupsSelect\n                    handleChange={this.handleChange}\n                    value={this.state.group}\n                    groups={this.state.groups}\n                />\n            </ButtonWrapper>\n        );\n    }\n}\n\nfunction NewWordsInfo(props) {\n    return (\n        <div>\n            <h2>Following words have been added to database:</h2>\n            <NewWords>{props.newWords}</NewWords>\n        </div>\n    )\n}\n\nexport default function WordsInfo(props) {\n    const addedWordsMessage = props.newWords.length > 0\n        ? <NewWordsInfo newWords={props.newWords} />\n        : null;\n\n    return (\n        <Wrapper>\n            <article>\n                {addedWordsMessage}\n                <h2>There are <span>{props.count}</span> words in group <span>{props.selectedGroup}</span>.</h2>\n                <h2>Hit the button below to get words from database</h2>\n                <CopySucess>{props.copySuccess}</CopySucess>\n            </article>\n\n            <GetWordsButton\n                showSuccessMessage={props.setSuccessMessage}\n                groups={props.groups}\n                setSelectedGroup={props.setSelectedGroup}\n            />\n        </Wrapper>\n    );\n}","import React from \"react\"\nimport Tutorial from \"./tutorial\";\nimport Corner from \"../CornerAnimation\";\nimport WordsForm from \"./wordsForm\";\nimport WordsInfo from \"./wordsInfo\";\nimport styled from \"styled-components\";\nimport { Page } from \"../Utilities/common\";\n\n// < STYLE >\nconst Wrapper = styled(Page)`\n    padding-right: 20%;\n\n    .tutorial {\n        padding-top: 5em;\n    }\n\n    section {\n        flex: 1;\n        margin: auto 2em;\n        display: flex;\n        flex-direction: column;\n    }\n\n    @media screen and (max-width: 1100px) {\n        position: relative;\n        padding: 0;\n        height: auto;\n\n        .tutorial {\n            padding-top: 0;\n        }\n    }\n`;\n// < STYLE >\n\n\nexport default class MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addedNewWords = this.addedNewWords.bind(this);\n        this.setSuccessMessage = this.setSuccessMessage.bind(this);\n        this.switchCorner = this.switchCorner.bind(this);\n        this.setSelectedGroup = this.setSelectedGroup.bind(this);\n\n        this.cache = [];\n\n        this.state = {\n            count: 0,\n            groupsCount: [],\n            messages: [],\n            copySuccess: \"\",\n            newWords: [],\n            groups: [],\n            selectedCountGroup: \"all\",\n        }\n    }\n\n    addedNewWords(data) {\n        this.setState({ newWords: data.added_words });\n        console.log(this.state);\n        setTimeout(() => this.setState({ newWords: \"\" }), 5000);\n        this.fetchWordsCount();\n        this.fetchWordsForSlider();\n    }\n\n    setSuccessMessage() {\n        this.setState({ copySuccess: \"Database words have been copied to clipboard.\" });\n        setTimeout(() => this.setState({ copySuccess: \"\" }), 5000);\n    }\n\n    setSelectedGroup(group) {\n        this.setState({ selectedCountGroup: group });\n        let c = this.state.groupsCount[group];\n        this.setState({ count:c });\n    }\n\n    fetchWordsForSlider() {\n        fetch(\"/api/words\")\n            .then(res => {\n                if (res.ok) return res.json();\n            })\n            .then(data => {\n                this.setState({ messages: data });\n            })\n            .catch(err => console.error(err));\n    }\n\n    fetchWordsCount() {\n        fetch(\"/api/count\")\n            .then(res => {\n                if (res.ok) return res.json()\n            })\n            .then(data => { \n                this.setState(state => ({ \n                    groupsCount: data, \n                    count: data[state.selectedCountGroup],\n                }))\n            })\n            .catch(err => console.error(err));\n    }\n\n    switchCorner() {\n        this.props.switchCorner();\n        if (this.state.messages.length > 0) {\n            this.cache = this.state.messages;\n            setTimeout(() => this.setState({ messages: [] }), 300);\n        }\n        else {\n            this.setState({ messages: this.cache });\n        }\n    }\n\n    componentDidMount() {\n        this.fetchWordsForSlider();\n        this.fetchWordsCount();\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <section>\n                    <Tutorial />\n                    <WordsForm \n                        afterSuccessfulFetch={this.addedNewWords} \n                        groups={this.props.groups} \n                    />\n                </section>\n                <section>\n                    <WordsInfo\n                        newWords={this.state.newWords}\n                        count={this.state.count}\n                        selectedGroup={this.state.selectedCountGroup}\n                        setSelectedGroup={this.setSelectedGroup}\n                        copySuccess={this.state.copySuccess}\n                        setSuccessMessage={this.setSuccessMessage}\n                        groups={this.props.groups}\n                    />\n                </section>\n\n                <Corner switched={this.props.switched} messages={this.state.messages} />\n            </Wrapper>\n        );\n    }\n}","import styled from \"styled-components\";\n\nconst Wrapper = styled.article`\n    margin: auto 3rem;\n    margin-right: 10%;\n    flex: 1;\n    font-size: 1.2em;\n\n    ul {\n        padding-left: 0;\n        list-style: none;\n    }\n\n    li {\n        margin: 20px 0;\n    }\n\n    @media screen and (max-width: 1100px) {\n        margin: 0 1em;\n        flex: unset;\n    }\n\n`;\n\nexport default function Info() {\n    return (\n        <Wrapper>\n                <ul>\n                    <li>\n                        <h2>\n                            This app allows you to create and\n                            store words dictionary. First, you have to\n                            log in, or register, if you don't have an account.\n                        </h2>\n                    </li>\n                    <li>\n                        <h2>\n                            After login you can see already existing \n                            words in slider, or add your\n                            own ones!\n                        </h2>\n                    </li>\n                    <li>\n                        <h2>\n                            You can also retrieve dictionary from the database.\n                            Words are returned in form of text, separated by comma (so they are \n                            ready to put in pictionary game)\n                        </h2>\n                    </li>\n                </ul>\n\n        </Wrapper>\n    )\n}","import styled from \"styled-components\";\nimport { InnerFieldWrapper, Bar } from \"./common\"\n\n// < STYLE >\nconst Wrapper = styled.div`\n    margin: 0.9em 0;\n\n    input {\n        width: 90%;\n        margin-left: 10%;\n        line-height: 1.8em;\n        border: none;\n        outline: none;\n        background-color: var(--form-color);\n        color: var(--text-color);\n        font-size: 1.1em;\n    }\n\n`;\n// </ STYLE >\n\n\nexport default function FormField(props) {\n    return (\n        <Wrapper>\n            <label htmlFor={props.id}>{props.children}</label>\n            <InnerFieldWrapper>\n                <input \n                    value={props.value} \n                    onChange={props.onChange} \n                    id={props.id} \n                    type={props.type} \n                    name={props.name} \n                    placeholder={props.placeholder}\n                    autoComplete={props.autoComplete || \"off\"}\n                    required />\n                <Bar />\n            </InnerFieldWrapper>\n        </Wrapper>\n    );\n}","import React from \"react\";\nimport FormField from \"../Utilities/formField\"\nimport { Wrapper, ErrorMessage, SubmitButton } from \"../Utilities/common\";\nimport withFormLogic from \"../Utilities/formLogic\";\n\nfunction LoginFormTemplate(props) {\n    return (\n        <form\n            onSubmit={props.handleSubmit}\n            id=\"loginForm\" >\n\n            <FormField\n                id=\"user_name\"\n                value={props.user_name}\n                onChange={props.handleChange}\n                autoComplete=\"on\"\n                name=\"user_name\"\n                type=\"text\" >\n                Login:\n            </FormField>\n\n            <FormField\n                id=\"user_pass\"\n                value={props.user_pass}\n                onChange={props.handleChange}\n                name=\"user_pass\"\n                type=\"password\" >\n                Password:\n            </FormField>\n\n            <Wrapper>\n                <ErrorMessage>{props.errorMessage}</ErrorMessage>\n                <SubmitButton type=\"submit\">Submit</SubmitButton>\n            </Wrapper>\n\n        </form>\n    );\n}\n\nconst LoginForm = withFormLogic(\n    LoginFormTemplate, \n    {\n        user_name: \"\",\n        user_pass: \"\",\n    }, \n    \"/api/login\");\n\nexport default LoginForm;","import React from \"react\";\nimport FormField from \"../Utilities/formField\"\nimport { Wrapper, ErrorMessage, SubmitButton } from \"../Utilities/common\";\nimport withFormLogic from \"../Utilities/formLogic\";\n\nfunction RegisterFormTemplate(props) {\n    return (\n        <form\n            onSubmit={props.handleSubmit}\n            id=\"registerForm\"\n            style={props.style}>\n\n            <FormField\n                id=\"user_name\"\n                value={props.user_name}\n                onChange={props.handleChange}\n                name=\"user_name\"\n                type=\"text\" >\n                Login:\n            </FormField>\n\n            <FormField\n                id=\"user_pass\"\n                value={props.user_pass}\n                onChange={props.handleChange}\n                name=\"user_pass\"\n                type=\"password\" >\n                Password:\n            </FormField>\n\n            <FormField\n                id=\"user_pass_repeat\"\n                value={props.user_pass_repeat}\n                onChange={props.handleChange}\n                name=\"user_pass_repeat\"\n                type=\"password\" >\n                Retype password:\n            </FormField>\n\n            <FormField\n                id=\"secret_key\"\n                value={props.secret_key}\n                onChange={props.handleChange}\n                name=\"secret_key\"\n                type=\"text\" >\n                Group key:\n            </FormField>\n\n\n            <Wrapper>\n                <ErrorMessage>{props.errorMessage}</ErrorMessage>\n                <SubmitButton type=\"submit\">Submit</SubmitButton>\n            </Wrapper>\n\n        </form>\n    );\n}\n\nconst RegisterForm = withFormLogic(\n    RegisterFormTemplate,\n    {\n        user_name: \"\",\n        user_pass: \"\",\n        user_pass_repeat: \"\",\n        secret_key: \"\",\n    },\n    \"/api/register\");\n\nexport default RegisterForm;","import React from \"react\";\nimport LoginForm from \"./login\";\nimport RegisterForm from \"./register\";\nimport styled from \"styled-components\";\n\n// < STYLE >\nconst LoginWindow = styled.div`\n    width: 25em;\n    border-radius: 10px;\n    margin: auto;\n    margin-right: 5em;\n    padding: 2.6em;\n\n    background-color: var(--form-color);\n    color: var(--text-color);\n\n    &, & form {\n        display: flex;\n        flex-direction: column;\n    }\n    \n    @media screen and (max-width: 1100px) {\n        width: 60%;\n        margin: 0 auto;\n        margin-bottom: 10%;\n    }\n`;\n\nconst Switch = styled.div`\n    position: relative;\n    width: 100%;\n    margin-top: 1em;\n    display: flex;\n\n    button {\n        background-color: var(--form-color);\n        color: var(--text-color);\n        font-size: 1.3em;\n        flex: 1;\n        transition: all 300ms ease;\n    }\n\n    button.active {\n        font-size: 1.8em;\n        color: var(--input-color);\n        font-weight: bold;\n    }\n\n    button.active:hover {\n        transform: none;\n    }\n`;\n\nconst Divisor = styled.div`\n    width: 6px;\n    height: 3em;\n    border-radius: 5px;\n    background-color: var(--input-color);\n    margin: 0 auto;\n`;\n\nconst DivisorWrapper = styled.div`\n    flex: 1;\n`;\n// </ STYLE >\n\n\nclass LoginManager extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.switchToLogin = this.switchToLogin.bind(this);\n        this.switchToRegister = this.switchToRegister.bind(this);\n\n        this.state = { tab: \"login\" };\n    }\n\n    switchToLogin() {\n        this.setState({ tab: \"login\" });\n    }\n\n    switchToRegister() {\n        this.setState({ tab: \"register\" });\n    }\n\n    render() {\n        const form =\n            this.state.tab === \"login\"\n                ? <LoginForm afterSuccessfulFetch={this.props.onLogin} />\n                : <RegisterForm />\n\n        return (\n            <LoginWindow>\n\n                { form }\n\n                <Switch>\n                    <button\n                        type=\"button\"\n                        className={this.state.tab === \"register\" ? 'active' : \"\"}\n                        onClick={this.switchToRegister} >\n                        Register\n                    </button>\n\n                    <DivisorWrapper>\n                        <Divisor />\n                    </DivisorWrapper>\n\n                    <button\n                        type=\"button\"\n                        className={this.state.tab === \"login\" ? 'active' : \"\"}\n                        onClick={this.switchToLogin}>\n                        Login\n                    </button>\n                </Switch>\n            </LoginWindow>\n        );\n    }\n}\n\nexport default LoginManager;","import React from \"react\"\nimport Info from \"./info\";\nimport LoginManager from \"../LoginManager\";\nimport { Page } from \"../Utilities/common\"\nimport styled from \"styled-components\";\n\nconst Wrapper = styled(Page)`\n  @media screen and (max-width: 1100px) {\n    article h2 {\n      margin: 0;\n      font-size: 20px;\n    }\n    article li {\n      margin: 10px 0;\n    }\n  }\n`;\n\nexport default function LoginPage(props) {\n    return (\n      <Wrapper>\n        <Info />\n        <LoginManager onLogin={props.onLogin} />\n      </Wrapper>\n    )\n  }\n  \n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Themes from \"./themes\";\n\n\n// < STYLE >\nconst labels = [\n    \"light gradient\",\n    \"dark gradient\",\n    \"text\",\n    \"main\",\n    \"accent\"\n];\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    margin: 1em 0;\n    min-height: 30%;\n\n    overflow-y: scroll;\n\n    & > h3, p {\n        margin: 0;\n    }\n    \n`;\n\nconst Box = styled.div`\n    height: 1.5em;\n    width: 1.5em;\n\n    box-sizing: border-box;\n    border: 2px solid black;\n    ${props => \"background: \" + props.rgb + \";\"}\n`;\n\nconst Button = styled.div`\n    padding: 0 0.5em;\n    display: flex;\n    align-items: center;\n    \n    transition: 400ms all ease;\n\n    p {\n        margin-right: auto;\n        cursor: default;\n    }\n\n    ${Box} {\n        margin: 0.5em 0;\n        margin-left: 5px;\n    }\n\n    &:hover {\n        backdrop-filter: contrast(120%);\n    }\n`;\n// </ STYLE >\n\n\nexport default class ColorPicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.setTheme = this.setTheme.bind(this);\n\n        this.themes = Themes;\n        this.names = Object.keys(this.themes);\n    }\n\n    setTheme(themeName) {\n        let theme = this.themes[themeName];\n\n        for (let prop in theme) {\n            document.documentElement.style.setProperty(prop, theme[prop]);\n        }\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <h3>Select theme</h3>\n\n                {this.names.map((name, i) => (\n                    <Button onClick={() => this.setTheme(name)} key={i}>\n                        <p>{name}</p>\n                        {Object.values(this.themes[name]).map( (rgb, i) => <Box rgb={rgb} key={i} title={labels[i]} />)}\n                    </Button>))\n                    }\n            </Wrapper>\n        );\n    }\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SubmitButton, ErrorMessage } from \"../Utilities/common\";\nimport FormField from \"../Utilities/formField\";\nimport withFormLogic from \"../Utilities/formLogic\";\n\n\n// < STYLE >\nconst SuccessMessage = styled(ErrorMessage)`\n    color: green;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    margin-top: 1em;\n\n    button {\n        margin: 0;\n        margin-top: auto;\n        margin-left: 1em;\n        margin-bottom: 0.2em;\n    }\n\n    form {\n        display: flex;\n        margin-bottom: 1em;\n\n        input {\n        }\n    }\n`;\n\nconst InputWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    width: 100%;\n\n    > div {\n        margin: 0.2em 0;\n    }\n\n    h3 {\n        margin: 0;\n    }\n\n    ${ErrorMessage}, ${SuccessMessage} {\n        margin-left: 10%;\n        margin-top: 0.5em;\n    }\n`;\n// </ STYLE >\n\n\nfunction JoinFormTemplate(props) {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <InputWrapper>\n                <h3>Join existing group</h3>\n                <ErrorMessage>{props.errorMessage}</ErrorMessage>\n                <SuccessMessage>{props.successMessage}</SuccessMessage>\n                <FormField\n                    value={props.group_key_join}\n                    id=\"group_key_join\"\n                    type=\"text\"\n                    onChange={props.handleChange}\n                    name=\"group_key_join\"\n                    placeholder=\"Key\" />\n            </InputWrapper>\n            <SubmitButton type=\"submit\">Join</SubmitButton>\n        </form>\n    );\n}\n\nfunction CreateFormTemplate(props) {\n    return (\n        <form onSubmit={props.handleSubmit} id=\"createForm\">\n            <InputWrapper>\n                <h3>Create new group</h3>\n                <ErrorMessage>{props.errorMessage}</ErrorMessage>\n                <SuccessMessage>{props.successMessage}</SuccessMessage>\n                <FormField\n                    value={props.group_name_create}\n                    id=\"group_name_create\"\n                    type=\"text\"\n                    onChange={props.handleChange}\n                    name=\"group_name_create\"\n                    placeholder=\"Name\" />\n                <FormField\n                    value={props.group_key_create}\n                    id=\"group_key_create\"\n                    type=\"text\"\n                    onChange={props.handleChange}\n                    name=\"group_key_create\"\n                    placeholder=\"Key\" />\n            </InputWrapper>\n            <SubmitButton type=\"submit\">Create</SubmitButton>\n        </form>\n    );\n}\n\nconst JoinForm = withFormLogic(\n    JoinFormTemplate,\n    { group_key_join: \"\" },\n    \"/api/join_group\",\n    (data) => `Joined ${data.name} group.`\n);\n\nconst CreateForm = withFormLogic(\n    CreateFormTemplate,\n    { \n        group_name_create: \"\",\n        group_key_create: \"\",\n    },\n    \"/api/create_group\",\n    (data) => `Created group ${data.name} with key ${data.key}`\n);\n\nexport default function GroupManager(props) {\n        return (\n            <Wrapper>\n                { props.loggedIn \n                ? <JoinForm afterSuccessfulFetch={props.fetchUserData} /> \n                : \"\" }\n                <CreateForm />\n            </Wrapper>\n        );\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport ColorPicker from \"./colorPicker\";\nimport GroupManager from \"./groupManager\";\n\n\n// < STYLE >\nconst Icon = (props) => (\n    <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" width=\"122.88px\" height=\"122.878px\" viewBox=\"0 0 122.88 122.878\" enableBackground=\"new 0 0 122.88 122.878\"><g>\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M101.589,14.7l8.818,8.819c2.321,2.321,2.321,6.118,0,8.439l-7.101,7.101 c1.959,3.658,3.454,7.601,4.405,11.752h9.199c3.283,0,5.969,2.686,5.969,5.968V69.25c0,3.283-2.686,5.969-5.969,5.969h-10.039 c-1.231,4.063-2.992,7.896-5.204,11.418l6.512,6.51c2.321,2.323,2.321,6.12,0,8.44l-8.818,8.819c-2.321,2.32-6.119,2.32-8.439,0 l-7.102-7.102c-3.657,1.96-7.601,3.456-11.753,4.406v9.199c0,3.282-2.685,5.968-5.968,5.968H53.629 c-3.283,0-5.969-2.686-5.969-5.968v-10.039c-4.063-1.232-7.896-2.993-11.417-5.205l-6.511,6.512c-2.323,2.321-6.12,2.321-8.441,0 l-8.818-8.818c-2.321-2.321-2.321-6.118,0-8.439l7.102-7.102c-1.96-3.657-3.456-7.6-4.405-11.751H5.968 C2.686,72.067,0,69.382,0,66.099V53.628c0-3.283,2.686-5.968,5.968-5.968h10.039c1.232-4.063,2.993-7.896,5.204-11.418l-6.511-6.51 c-2.321-2.322-2.321-6.12,0-8.44l8.819-8.819c2.321-2.321,6.118-2.321,8.439,0l7.101,7.101c3.658-1.96,7.601-3.456,11.753-4.406 V5.969C50.812,2.686,53.498,0,56.78,0h12.471c3.282,0,5.968,2.686,5.968,5.969v10.036c4.064,1.231,7.898,2.992,11.422,5.204 l6.507-6.509C95.471,12.379,99.268,12.379,101.589,14.7L101.589,14.7z M61.44,36.92c13.54,0,24.519,10.98,24.519,24.519 c0,13.538-10.979,24.519-24.519,24.519c-13.539,0-24.519-10.98-24.519-24.519C36.921,47.9,47.901,36.92,61.44,36.92L61.44,36.92z\" />\n    </g>\n    </svg>\n);\n\nconst Button = styled.button`\n\n    width: 8em;\n    height: 2em;\n    font-size: 1.1em;\n    line-height: 0.9em;\n    color: var(--form-color);\n    background-color: var(--input-color);\n\n    @media screen and (max-width: 1100px) {\n        font-size: 0.9em;\n        top: unset;\n        bottom: 0.5em;\n        right: unset;\n        left: 0.5em;\n        width: 4.5em;\n    }\n`;\n\nconst Wrapper = styled.div`\n    position: absolute;\n    top: 2rem;\n    right: 2rem;\n    padding: 2rem;\n    width: 20%;\n    min-height: 30rem;\n    display: flex;\n    flex-direction: column;\n    z-index: 4;\n    border-radius: 10px;\n    background-color: var(--form-color);\n    transition: 500ms all cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n    clip-path: circle(8% at 88% 8%);\n\n    & > * {\n        transition: 500ms all ease-in-out;\n        opacity: 0;\n    }\n\n    &:hover {\n        clip-path: circle(100% at 50% 50%);\n    }\n\n    &:hover > * {\n        opacity: 1;\n    }\n\n    > svg {\n        transition: 200ms opacity ease;\n        position: absolute;\n        transform: translate(-50%, -50%) scale(0.35);\n        left: 88%;\n        top: 8%;\n        opacity: 1;\n        fill: var(--input-color);\n    }\n\n    &:hover > svg {\n        opacity: 0;\n    }\n\n    h1 {\n        margin: 0;\n    }\n\n    @media screen and (max-width: 1100px) {\n        width: 60%;\n        height: auto;\n\n        top: 1rem;\n        right: 1rem;\n\n        clip-path: circle(5% at 92% 2em);\n\n        > svg {\n            left: 92%;\n            top: 2em;\n            transform: translate(-50%, -50%) scale(0.15);\n        }\n\n    }\n`;\n\nconst Header = styled.h1`\n    margin: auto 0;\n    margin-right: auto;\n`;\n\nconst ButtonsWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 100%;\n\n    margin-top: auto;\n`;\n// </ STYLE >\n\n\nconst LogoutButton = (props) => (\n    <Button\n        onClick={props.onLogout}\n        type=\"button\">\n        Logout\n    </Button>\n);\n\nconst CornerButton = (props) => (\n    <Button\n        onClick={props.switchCorner}>\n        Switch corner\n    </Button>\n);\n\nexport default function Settings(props) {\n    return (\n        <Wrapper>\n            <Icon />\n            <Header>Hello {props.name}!</Header>\n            <GroupManager \n                loggedIn={props.loggedIn} \n                fetchUserData={props.fetchUserData}\n                />\n            <ColorPicker />\n            { props.loggedIn \n            ? <ButtonsWrapper>\n                <LogoutButton onLogout={props.onLogout} />\n                <CornerButton switchCorner={props.switchCorner} />\n            </ButtonsWrapper>\n            : \"\" }\n        </Wrapper>\n    );\n}","import React from \"react\"\nimport './global.css';\nimport Footer from \"./Utilities/footer\";\nimport Logo from \"./Utilities/logo\";\nimport MainPage from \"./MainPage\";\nimport LoginPage from \"./LoginPage\";\nimport Settings from \"./Settings\";\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onLogin = this.onLogin.bind(this);\n        this.onLogout = this.onLogout.bind(this);\n        this.switchCorner = this.switchCorner.bind(this);\n        this.fetchUserData = this.fetchUserData.bind(this);\n\n        this.state = {\n            loggedIn: false,\n            opened: false,\n            username: \"stranger\",\n            groups: [],\n        };\n    }\n\n    fetchUserData() {\n        fetch(\"/api/user\", {\n            method: \"GET\",\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                }\n                else {\n                    this.setState({ loggedIn: false });\n                    throw new Error(\"Not logged.\");\n                }\n            })\n            .then(data => {\n                this.setState({\n                    loggedIn: true,\n                    username: data.name,\n                    groups: data.groups,\n                });\n                this.openCorner();\n            })\n            .catch(err => console.error(err));\n    }\n\n    componentDidMount() {\n        this.fetchUserData();\n    }\n\n    onLogin() {\n        this.fetchUserData();\n    }\n\n    onLogout() {\n        fetch(\"/api/logout\", {\n            method: \"GET\"\n        })\n            .then(res => {\n                if (res.ok) {\n                    this.setState({ \n                        loggedIn: false,\n                        username: \"stranger\",\n                    });\n                }\n            })\n            .catch(err => console.error(err));\n    }\n\n    openCorner() {\n        setTimeout(\n            () => { this.setState(state => ({ opened: state.loggedIn })) }\n            , 0)\n    }\n\n    switchCorner() {\n        setTimeout(\n            () => { this.setState(state => ({ opened: !state.opened })) }\n            , 0)\n        console.log(this.state)\n    }\n\n\n    render() {\n        let page = this.state.loggedIn\n            ? <MainPage \n                switched={this.state.opened} \n                switchCorner={this.switchCorner} \n                onLogout={this.onLogout} \n                groups={this.state.groups} />\n            : <LoginPage onLogin={this.onLogin} />\n\n        return (\n            <div className=\"app\">\n                <Logo />\n                <Settings\n                    name={this.state.username}\n                    onLogout={this.onLogout}\n                    switchCorner={this.switchCorner}\n                    loggedIn={this.state.loggedIn}\n                    fetchUserData={this.fetchUserData}\n                />\n                {page}\n                <Footer />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}