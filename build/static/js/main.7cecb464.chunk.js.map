{"version":3,"sources":["components/Utilities/footer.jsx","components/Utilities/logo.jsx","components/MainPage/tutorial.jsx","components/CornerAnimation/panel.jsx","components/CornerAnimation/index.jsx","components/Utilities/common.jsx","components/MainPage/wordsForm.jsx","components/MainPage/wordsInfo.jsx","components/MainPage/index.jsx","components/LoginPage/info.jsx","components/LoginManager/formField.jsx","components/LoginManager/login.jsx","components/LoginManager/register.jsx","components/LoginManager/index.jsx","components/LoginPage/index.jsx","components/ui.jsx","index.js"],"names":["FooterEl","styled","footer","Footer","props","href","class","Logo","h1","Tutorial","className","Wrapper","div","Word","p","Author","Panel","updateAnimationIndex","bind","speed","ref","React","createRef","w","undefined","state","animationIndex","this","RAF","window","requestAnimationFrame","cancelAnimationFrame","newAnimationIndex","current","offsetLeft","offsetWidth","setState","offsetParent","startAnimation","stopAnimation","style","left","word","author","Component","SVGPathSmall","width","height","id","d","SVGPathBig","AnimationContainer","corner","SliderCorner","moved","BackCorner","MessagesWrapper","Row","Corner","panels","animationSpeed","prevProps","prevState","messages","panelsSorted","map","i","user","forEach","panel","key","push","switched","transform","ErrorMessage","SubmitButton","button","Bar","InnerFieldWrapper","attrs","tabIndex","Page","ProtoBar","Form","form","WordsForm","handleChange","handleSubmit","words","csrf","e","target","value","preventDefault","split","filter","s","match","fetch","method","mode","headers","body","JSON","stringify","then","res","ok","json","Error","status","data","console","log","addedNewWords","added_words","catch","err","error","csrf_token","onSubmit","autoComplete","htmlFor","onChange","name","placeholder","type","Button","NewWords","h2","CopySucess","WordsInfo","addedWordsMessage","newWords","length","NewWordsInfo","wordsCount","copySuccess","showSuccessMessage","setSuccessMessage","GetWordsButton","handleClick","navigator","clipboard","writeText","onClick","MainPage","count","setTimeout","fetchWordsCount","fetchWordsForSlider","text","onLogout","article","Info","FormField","children","required","LoginForm","password","errorMessage","user_name","user_pass","options","onLogin","RegisterForm","password2","secretKey","user_pass_repeat","secret_key","autocomplete","LoginWindow","Switch","Divisor","DivisorWrapper","LoginManager","switchToLogin","switchToRegister","tab","LoginPage","UI","switchCorner","loggedIn","opened","logged","setInterval","page","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cecb464.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst FooterEl = styled.footer`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  margin: 0.5em;\n  text-align: right;\n  font-size: 0.9em;\n  color: var(--form-color);\n  z-index: 3;\n\n  p {\n      margin: 0;\n  }\n\n  a {\n    text-decoration: none;\n    color: var(--form-color);\n    font-size: 1.4em;\n    font-weight: bold;\n  }\n\n    @media screen and (max-width: 1100px) {\n        text-align: center;\n        top: 5em;\n        bottom: unset;\n        height: auto;\n        left: 50%;\n        transform: translateX(-50%);\n    }\n`;\n\nfunction Footer(props) {\n    return(\n    <FooterEl>\n        <p>Created by: <br /> <a href=\"https://github.com/RafalKornel\"> <i class=\"fab fa-github-square\"></i> Rafał Kornel </a> </p>\n    </FooterEl>\n    )\n}\n\nexport default Footer;","import styled from \"styled-components\";\n\nconst Logo = styled.h1`\n    position: absolute;\n    font-size: 100px;\n    line-height: 70px;\n    margin: 2rem;\n    cursor: default;\n    user-select: none;\n\n    @media screen and (max-width: 1100px) {\n        margin: 0;\n        margin-top: 1rem;\n        font-size: 50px;\n        left: 50%;\n        transform: translateX(-50%);\n        text-align: center;\n    }\n`;\n\nexport default (props) => {\n    return <Logo>PICTIONAR</Logo>;\n  }","function Tutorial(props) {\n    return (\n        <article className=\"tutorial\">\n            <h2>Type phrases or words separated by coma, then hit “Send” button to add them to database!\n            Words can only contain letters and numbers, and can be separated by spaces to form phrases.\n            </h2>\n        </article>\n    );\n}\n\nexport default Tutorial;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n    position: relative;\n    min-width: 200px;\n    width: max-content;\n    height: 70px;\n    z-index: 2;\n    border-radius: 9px;\n    display: flex;\n    flex-direction: column;\n    margin: 10px;\n\n    background-color: var(--input-color);\n    color: var(--form-color);\n\n    p {\n        margin: 5px 10px;\n    }\n`;\n\nconst Word = styled.p`\n    font-size: 1.6em;\n    text-align: left;\n`;\n\nconst Author = styled.p`\n    font-size: 1.3em;\n    text-align: right;\n`;\n\nclass Panel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.updateAnimationIndex = this.updateAnimationIndex.bind(this);\n\n        this.speed = this.props.speed || 1;\n        this.ref = React.createRef();\n        this.w = undefined;\n\n        this.state = { \n            animationIndex: 0,\n        };\n    }\n\n    startAnimation() {\n        if (!this.RAF) {\n            this.RAF = window.requestAnimationFrame( this.updateAnimationIndex );\n        }\n    }\n\n    stopAnimation() {\n        window.cancelAnimationFrame(this.RAF);\n    }\n\n    updateAnimationIndex() {\n        let newAnimationIndex = this.state.animationIndex + this.speed;\n        if (this.ref.current.offsetLeft - this.ref.current.offsetWidth >= this.w) {\n            newAnimationIndex -= this.w;\n        }\n        this.setState({ animationIndex: newAnimationIndex });\n\n        this.RAF = window.requestAnimationFrame( this.updateAnimationIndex );\n    }\n\n    componentDidMount() {\n        this.w = this.ref.current.offsetParent.offsetWidth;\n        this.startAnimation();\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    render() {\n        return (\n            <Wrapper ref={this.ref} style={{ left: this.state.animationIndex }}>\n                <Word>{this.props.word}</Word>\n                <Author>{this.props.author}</Author>\n            </Wrapper>\n        )\n    }\n}\n\nexport default Panel;","import Panel from \"./panel\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\n// < SVG's components >\nfunction SVGPathSmall() {\n    return (\n        <svg width=\"0\" height=\"0\">\n            <defs>\n                <clipPath id=\"smallClip\">\n                    <path d=\"M632 0V553H0L632 0Z\" />\n                </clipPath>\n            </defs>\n        </svg>\n    );\n}\n\nfunction SVGPathBig() {\n    return (\n        <svg width=\"0\" height=\"0\">\n            <defs>\n                <clipPath id=\"mainClip\">\n                    <path d=\"M2828 0H0V2189H2226L2828 1664V0Z\" />\n                </clipPath>\n            </defs>\n        </svg>\n    );\n}\n// </ SVG's components >\n\n\n// < STYLE >\nconst AnimationContainer = styled.div`\n    position: absolute;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n`;\n\nconst corner = styled.div`\n    width: 632px;\n    height: 553px;\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    clip-path: url(#smallClip);\n    background-attachment: fixed;\n    transition: transform 500ms ease;\n\n    @media screen and (max-width: 1100px) {\n        transform: scale(0.4) translate(75%, 75%);\n        bottom: 0%;\n    }\n`;\n\nconst SliderCorner = styled(corner)`\n    background-image: var(--bcg);\n    z-index: 2;\n\n    ${props => props.moved ? \"transform: translate(200px, 200px)\" : \"\"};\n\n\n    @media screen and (max-width: 1100px) {\n        background-image: none;\n        background-color: var(--gradient-light);\n\n        ${props => props.moved ? \"transform: scale(0.4) translate(109%, 109%)\" : \"\"};\n    }\n`;\n\nconst BackCorner = styled(corner)`\n    background-color: var(--form-color);\n    display: flex;\n\n    z-index: 0;\n`;\n\nconst MessagesWrapper = styled.div`\n    display: flex;\n    transform-origin: top left;\n    transform: rotate(-41deg) translate(-60%, 76%);\n    flex-direction: column;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: max-content;\n`;\n// </ STYLE >\n\n\n\nclass Corner extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            panels: [],\n        };\n\n        this.animationSpeed = 1;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.messages === this.props.messages || this.props.messages === []) return;\n\n        let panelsSorted = [[], [], []];\n        let panels = this.props.messages.map(({ user, word }, i) => (<Panel author={user} word={word} speed={this.animationSpeed} key={i} />));\n\n        panels.forEach(panel => {\n            let i = panel.key % 3;\n            panelsSorted[i].push(panel);\n        });\n\n        this.setState({panels: panelsSorted});\n    }\n\n\n    render() {\n        return (\n            <AnimationContainer>\n                <SVGPathSmall />\n                <SVGPathBig />\n\n                <SliderCorner moved={this.props.switched} />\n                <BackCorner >\n                    <MessagesWrapper>\n                        <Row>\n                           {this.state.panels[0]}\n                        </Row>\n                        <Row style={{ transform: \"translate(300px, 0)\" }}>\n                            {this.state.panels[1]}\n                        </Row>\n                        <Row>\n                           {this.state.panels[2]}\n                        </Row>\n                    </MessagesWrapper>\n                </BackCorner>\n            </AnimationContainer>\n        )\n    }\n}\n\n\nexport default Corner;","import styled from \"styled-components\";\n\n// < STYLE >\nexport const Wrapper = styled.div`\n    display: flex;\n    margin: 0.5em 0;\n`;\n\nexport const ErrorMessage = styled.p`\n    color: red;\n    margin: auto;\n    line-height: 100%;\n`;\n\nexport const SubmitButton = styled.button`\n    background-color: var(--input-color);\n    color: var(--form-color);\n    font-size: 1.15em;\n    width: 100px;\n    height: 30px;\n    margin-left: auto;  \n    margin-bottom: auto;\n`;\n\nexport const Bar = styled.div`\n    width: 90%;\n    height: 6px;\n    transition: 150ms all ease;\n    background-color: var(--input-color);\n    border-radius: 9px;\n    margin-left: auto;\n`;\n\nexport const InnerFieldWrapper = styled.div.attrs(props => ({\n    tabIndex: \"-1\",\n}))\n`\n    &:focus-within {\n        outline: none;\n    }\n\n    &:focus-within > ${Bar} {\n        width: 100%;\n    }\n`;\n\nexport const Page = styled.div`\n    display: flex;\n    height: 100%;\n\n    @media screen and (max-width: 1100px) {\n        flex-direction: column;\n        margin-top: 6.5em;\n    }\n`;","import React from \"react\";\nimport { SubmitButton, InnerFieldWrapper, Bar as ProtoBar } from \"../Utilities/common\"\nimport styled from \"styled-components\";\n\n//  < STYLE >\nconst Bar = styled(ProtoBar)`\n    margin-bottom: 1em;\n`;\n\nconst Form = styled.form`\n    background-color: var(--form-color);\n    color: var(--text-color);\n\n    display: flex;\n    flex-direction: column;\n\n    transition: all 400ms ease;\n\n    border-radius: 10px;\n    width: 25em;\n    padding: 3em;\n    margin: 0 auto;\n    \n    textarea {\n        margin-left: 10%;\n        margin-top: 1em;\n        height: 12em;\n        width: 90%;\n        resize: none;\n        border: none;\n        outline: none;\n        background-color: var(--form-color);\n        color: var(--text-color);\n        font-size: 1.1em;\n    }\n\n    @media screen and (max-width: 1100px) {\n        width: 80%;\n        padding: 2em;\n    }\n`;\n//  </ STYLE >\n\n\nclass WordsForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = { \n            words: \"\",\n            csrf: \"\",\n        };\n    }\n\n    handleChange(e) {\n        this.setState({ words:e.target.value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        let words_unfiltered = this.state.words.split(\",\");\n        let words = words_unfiltered.filter( (s) => s.match(\"^[A-Za-z0-9ąćęłńóśźżĄĘŁŃÓŚŹŻ ]+$\"))\n    \n        fetch(\"/api/add\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": this.state.csrf,\n\n            },\n            body: JSON.stringify({ words: words }),\n        })\n        .then(res => {\n    \n            if (res.ok)  return res.json()\n            else                    throw Error(`Bad response, status ${res.status}`)\n    \n        })\n        .then(data => {console.log(data); return data;})\n        .then(data => this.props.addedNewWords( data.added_words ) )\n        .catch(err => console.error(err));\n\n    }\n\n    componentDidMount() {\n        fetch(\"/api/add\", {\n            method: \"GET\",\n        })\n        .then(res => {\n            if (res.ok) return res.json()\n        })\n        .then(data => this.setState({ csrf: data.csrf_token }))\n        .then( () => console.log(this.state))\n        .catch(err => console.error(err));\n    }\n\n    render() {\n        return(\n            <Form \n                onSubmit={this.handleSubmit} \n                autoComplete=\"off\" \n                className=\"wordsForm\">\n\n                <label htmlFor=\"words\">Words: </label>\n                <InnerFieldWrapper>\n                    <textarea \n                        onChange={this.handleChange} \n                        id=\"words\" \n                        name=\"words\" \n                        placeholder=\"Type word(s) here\">\n                            {this.state.words}\n                    </textarea>\n                    <Bar />\n                </InnerFieldWrapper>\n\n                <SubmitButton \n                    type=\"submit\" \n                    onSubmit={this.handleSubmit}>\n                        Submit\n                </SubmitButton>\n            </Form>\n        );\n    }\n}\n\nexport default WordsForm;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n    height: 3em;\n    background-color: var(--input-color);\n    color: var(--form-color);\n    border: none;\n    border-radius: 12px;\n    font-size: 36px;\n    margin: 0 30px;\n    width: 9em;\n\n    &:focus {\n        outline: none;\n    }\n\n    @media screen and (max-width: 1100px) {\n        font-size: 32px;\n        width: 6.5em;\n        height: 2em;\n    }\n`;\n\nconst NewWords = styled.h2`\n    font-size: 1.1em;\n    color: var(--form-color);\n    font-weight: bold;\n`;\n\nconst CopySucess = styled.h2`\n    color: var(--form-color);\n    font-weight: bold;\n`;\n\nconst Wrapper = styled.div`\n    text-align: center;\n    margin: auto;\n\n    transition: all 400ms ease;   \n\n    span {\n        color: var(--form-color);\n        font-weight: bold;\n    }\n\n    @media screen and (max-width: 1100px) {\n        padding-bottom: 10em;\n        width: 100%;\n\n        article {\n            margin: 20px 0;\n        }\n        \n        h2 {\n            margin: 0.5em 0;\n        }\n    }\n\n    @media screen and (max-width: 1250px) {\n        padding-bottom: 15em;\n    }\n`;\n\n\nclass WordsInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const addedWordsMessage = this.props.newWords.length > 0\n            ? <NewWordsInfo newWords={this.props.newWords} />\n            :  null;\n\n        return (\n            <Wrapper>\n                <article>\n                    {addedWordsMessage}\n                    <h2>There are <span>{this.props.wordsCount}</span> words in database.</h2>\n                    <h2>Hit the button below to get words from database</h2>\n                    <CopySucess>{this.props.copySuccess}</CopySucess>\n                </article>\n\n                <GetWordsButton showSuccessMessage={this.props.setSuccessMessage} />\n            </Wrapper>\n        );\n    }\n}\n\nclass GetWordsButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        fetch(\"/api/bank\")\n            .then(res => res.json())\n            .then(data => {\n                navigator.clipboard.writeText(data);\n                this.props.showSuccessMessage();\n            })\n            .catch(err => console.error(err))\n    }\n\n    render() {\n        return (<Button \n                    type=\"button\" \n                    onClick={this.handleClick}>\n                        Get words!\n                </Button>);\n\n    }\n}\n\nfunction NewWordsInfo(props) {\n    return (\n        <div>\n            <h2>Following words have been added to database:</h2>\n            <NewWords>{props.newWords}</NewWords>\n        </div>\n    )\n}\n\nexport default WordsInfo;","import React from \"react\"\nimport Tutorial from \"./tutorial\";\nimport Corner from \"../CornerAnimation\";\nimport WordsForm from \"./wordsForm\";\nimport WordsInfo from \"./wordsInfo\";\nimport styled from \"styled-components\";\nimport { Page } from \"../Utilities/common\";\n\n// < STYLE >\nconst Wrapper = styled(Page)`\n    padding-right: 20%;\n\n    .tutorial {\n        padding-top: 5em;\n    }\n\n    section {\n        flex: 1;\n        margin: auto 2em;\n        display: flex;\n        flex-direction: column;\n    }\n\n    @media screen and (max-width: 1100px) {\n        position: relative;\n        padding: 0;\n        height: auto;\n\n        .tutorial {\n            padding-top: 0;\n        }\n    }\n`;\n\nconst Button = styled.button`\n    position: absolute;\n    top: 1.5rem;\n    right: 1.5rem;\n    width: 6em;\n    height: 2em;\n    font-size: 1.1em;\n    border-radius: 10px;\n    z-index: 2;\n    color: var(--input-color);\n    background-color: var(--form-color);\n\n    @media screen and (max-width: 1100px) {\n        font-size: 0.9em;\n        top: unset;\n        bottom: 0.5em;\n        right: unset;\n        left: 0.5em;\n        width: 4.5em;\n    }\n`;\n// < STYLE >\n\n\nexport default class MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addedNewWords = this.addedNewWords.bind(this);\n        this.setSuccessMessage = this.setSuccessMessage.bind(this);\n\n        this.state = {\n            count: 0,\n            messages: [],\n            copySuccess: \"\",\n            newWords: [],\n        }\n    }\n\n    addedNewWords(words) {\n        this.setState({ newWords: words });\n        setTimeout(() => this.setState({ newWords: \"\" }), 5000);\n        this.fetchWordsCount();\n        this.fetchWordsForSlider();\n    }\n\n    setSuccessMessage() {\n        this.setState({ copySuccess: \"Database words have been copied to clipboard.\" });\n        setTimeout(() => this.setState({ copySuccess: \"\" }), 5000);\n    }\n\n    fetchWordsForSlider() {\n        fetch(\"/api/words\")\n            .then(res => {\n                console.log(res);\n                if (res.ok) return res.json();\n            })\n            .then(data => {\n                this.setState({ messages: data });\n            })\n            .catch(err => console.error(err));\n    }\n\n    fetchWordsCount() {\n        fetch(\"/api/count\")\n            .then(res => {\n                if (res.ok) return res.text()\n            })\n            .then(text => this.setState({ count: text }))\n            .catch(err => console.error(err));\n    }\n\n    componentDidMount() {\n        this.fetchWordsForSlider();\n        this.fetchWordsCount();\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <Button \n                    onClick={this.props.onLogout} \n                    type=\"button\">\n                        Logout\n                </Button>\n\n                <section>\n                    <Tutorial />\n                    <WordsForm addedNewWords={this.addedNewWords} />\n                </section>\n                <section>\n                    <WordsInfo\n                        newWords={this.state.newWords}\n                        wordsCount={this.state.count}\n                        copySuccess={this.state.copySuccess}\n                        setSuccessMessage={this.setSuccessMessage}\n                    />\n                </section>\n\n                <Corner switched={this.props.switched} messages={this.state.messages} />\n            </Wrapper>\n        );\n    }\n}","import styled from \"styled-components\";\n\nconst Wrapper = styled.article`\n    margin: auto 3rem;\n    margin-right: 10%;\n    flex: 1;\n    font-size: 1.2em;\n\n    ul {\n        padding-left: 0;\n        list-style: none;\n    }\n\n    li {\n        margin: 20px 0;\n    }\n\n    @media screen and (max-width: 1100px) {\n        margin: 0 1em;\n        flex: unset;\n    }\n\n`;\n\nfunction Info() {\n    return (\n        <Wrapper>\n                <ul>\n                    <li>\n                        <h2>\n                            This app allows you to create and\n                            store words dictionary. First, you have to\n                            log in, or register, if you don't have an account.\n                        </h2>\n                    </li>\n                    <li>\n                        <h2>\n                            After login you can see already existing \n                            words in slider, or add your\n                            own ones!\n                        </h2>\n                    </li>\n                    <li>\n                        <h2>\n                            You can also retrieve dictionary from the database.\n                            Words are returned in form of text, separated by comma (so they are \n                            ready to put in pictionary game)\n                        </h2>\n                    </li>\n                </ul>\n\n        </Wrapper>\n    )\n}\n\nexport default Info;","import styled from \"styled-components\";\nimport { InnerFieldWrapper, Bar } from \"../Utilities/common\"\n\n// < STYLE >\nconst Wrapper = styled.div`\n    margin: 0.9em 0;\n\n    input {\n        width: 90%;\n        margin-left: 10%;\n        line-height: 1.8em;\n        border: none;\n        outline: none;\n        background-color: var(--form-color);\n        color: var(--text-color);\n        font-size: 1.1em;\n    }\n\n`;\n// </ STYLE >\n\n\nfunction FormField(props) {\n    return (\n        <Wrapper>\n            <label htmlFor={props.id}>{props.children}</label>\n            <InnerFieldWrapper>\n                <input value={props.value} onChange={props.onChange} id={props.id} type={props.type} name={props.name} required />\n                <Bar />\n            </InnerFieldWrapper>\n        </Wrapper>\n    );\n}\n\nexport default FormField;","import React from \"react\";\nimport FormField from \"./formField\"\nimport { Wrapper, ErrorMessage, SubmitButton } from \"../Utilities/common\";\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            name: \"\",\n            password: \"\",\n            errorMessage: \"\",\n            csrf: \"\",\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"/api/login\", {\n            method: \"GET\",\n        })\n            .then(res => {\n                if (res.ok) return res.json()\n            })\n            .then(data => {\n                this.setState({ csrf: data.csrf_token })\n            })\n            .catch(err => console.error(err));\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.id]: e.target.value });\n        console.log(this.state);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        let data = {\n            user_name: this.state.name,\n            user_pass: this.state.password,\n        }\n\n        let options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": this.state.csrf,\n            },\n            body: JSON.stringify(data),\n        }\n\n        fetch(\"/api/login\", options)\n            .then(res => {\n                if (!res.ok) {\n                    this.setState({ errorMessage: \"Something went wrong!\" });\n                    return;\n                }\n                this.props.onLogin();\n            })\n            .catch(err => console.error(err));\n\n    }\n\n    render() {\n        return (\n            <form \n                onSubmit={this.handleSubmit} \n                id=\"loginForm\" \n                autoComplete=\"off\">\n       \n                <FormField \n                    id=\"name\" \n                    value={this.state.name} \n                    onChange={this.handleChange} \n                    name=\"user_name\" \n                    type=\"text\" >\n                        Login: \n                </FormField>\n       \n                <FormField \n                    id=\"password\" \n                    value={this.state.password} \n                    onChange={this.handleChange} \n                    name=\"user_pass\" \n                    type=\"password\" >\n                        Password: \n                </FormField>\n\n                <Wrapper>\n                    <ErrorMessage>{this.state.errorMessage}</ErrorMessage>\n                    <SubmitButton type=\"submit\">Submit</SubmitButton>\n                </Wrapper>\n\n            </form>\n        );\n    }\n}\n\n\nexport default LoginForm;","import React from \"react\";\nimport FormField from \"./formField\"\nimport { Wrapper, ErrorMessage, SubmitButton } from \"../Utilities/common\";\n\n\nclass RegisterForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            name: \"\",\n            password: \"\",\n            password2: \"\",\n            secretKey: \"\",\n            errorMessage: \"\",\n            csrf: \"\",\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"/api/register\", {\n            method: \"GET\",\n        })\n            .then(res => {\n                if (res.ok) return res.json()\n            })\n            .then(data => {\n                console.log(data);\n                this.setState({ csrf: data.csrf_token })\n            })\n            .catch(err => console.error(err));\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.id]: e.target.value });\n        console.log(this.state);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        let data = {\n            user_name: this.state.name,\n            user_pass: this.state.password,\n            user_pass_repeat: this.state.password2,\n            secret_key: this.state.secretKey,\n        }\n\n        let options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": this.state.csrf,\n            },\n            body: JSON.stringify(data),\n        }\n\n        fetch(\"/api/register\", options)\n            .then(res => {\n                if (!res.ok) {\n                    this.setState({ errorMessage: \"Something went wrong\" });\n                    return\n                }\n                console.log(\"sucess\");\n            })\n            .catch(err => console.error(err));\n\n        console.log(this.state);\n    }\n\n\n    render() {\n        return (\n            <form \n                onSubmit={this.handleSubmit} \n                id=\"registerForm\" \n                autocomplete=\"off\" \n                style={this.state.style}>\n\n                <FormField \n                    id=\"name\" \n                    value={this.state.name} \n                    onChange={this.handleChange} \n                    name=\"user_name\" \n                    type=\"text\" >\n                        Login: \n                </FormField>\n                \n                <FormField \n                    id=\"password\" \n                    value={this.state.password} \n                    onChange={this.handleChange} \n                    name=\"user_pass\" \n                    type=\"password\" >\n                        Password: \n                </FormField>\n\n                <FormField \n                    id=\"password2\" \n                    value={this.state.password2} \n                    onChange={this.handleChange} \n                    name=\"user_pass2\" \n                    type=\"password\" >\n                        Retype password: \n                </FormField>\n\n                <FormField \n                    id=\"secretKey\" \n                    value={this.state.secretKey} \n                    onChange={this.handleChange} \n                    name=\"secret_key\" \n                    type=\"text\" >\n                        Group key: \n                </FormField>\n\n\n                <Wrapper>\n                    <ErrorMessage>{this.state.errorMessage}</ErrorMessage>\n                    <SubmitButton type=\"submit\">Submit</SubmitButton>\n                </Wrapper>\n\n            </form>\n        );\n    }\n}\n\n\nexport default RegisterForm;","import React from \"react\";\nimport LoginForm from \"./login\";\nimport RegisterForm from \"./register\";\nimport styled from \"styled-components\";\n\n// < STYLE >\nconst LoginWindow = styled.div`\n    width: 25em;\n    border-radius: 10px;\n    margin: auto;\n    margin-right: 5em;\n    padding: 2.6em;\n\n    background-color: var(--form-color);\n    color: var(--text-color);\n\n    &, & form {\n        display: flex;\n        flex-direction: column;\n    }\n    \n    @media screen and (max-width: 1100px) {\n        width: 60%;\n        margin: 0 auto;\n        margin-bottom: 10%;\n    }\n`;\n\nconst Switch = styled.div`\n    position: relative;\n    width: 100%;\n    margin-top: 1em;\n    display: flex;\n\n    button {\n        background-color: var(--form-color);\n        color: var(--text-color);\n        font-size: 1.3em;\n        flex: 1;\n        transition: all 300ms ease;\n    }\n\n    button.active {\n        font-size: 1.8em;\n        color: var(--input-color);\n        font-weight: bold;\n    }\n\n    button.active:hover {\n        transform: none;\n    }\n`;\n\nconst Divisor = styled.div`\n    width: 6px;\n    height: 3em;\n    border-radius: 5px;\n    background-color: var(--input-color);\n    margin: 0 auto;\n`;\n\nconst DivisorWrapper = styled.div`flex: 1;`;\n// </ STYLE >\n\n\nclass LoginManager extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.switchToLogin = this.switchToLogin.bind(this);\n        this.switchToRegister = this.switchToRegister.bind(this);\n\n        this.state = { tab: \"login\" };\n    }\n\n    switchToLogin() {\n        this.setState({ tab: \"login\" });\n    }\n\n    switchToRegister() {\n        this.setState({ tab: \"register\" });\n    }\n\n    render() {\n        const form =\n            this.state.tab === \"login\"\n                ? <LoginForm onLogin={this.props.onLogin} />\n                : <RegisterForm />\n\n        return (\n            <LoginWindow>\n\n                { form }\n\n                <Switch>\n                    <button\n                        type=\"button\"\n                        className={this.state.tab === \"register\" ? 'active' : \"\"}\n                        onClick={this.switchToRegister} >\n                        Register\n                    </button>\n\n                    <DivisorWrapper>\n                        <Divisor />\n                    </DivisorWrapper>\n\n                    <button\n                        type=\"button\"\n                        className={this.state.tab === \"login\" ? 'active' : \"\"}\n                        onClick={this.switchToLogin}>\n                        Login\n                    </button>\n                </Switch>\n            </LoginWindow>\n        );\n    }\n}\n\nexport default LoginManager;","import React from \"react\"\nimport Info from \"./info\";\nimport LoginManager from \"../LoginManager\";\nimport { Page } from \"../Utilities/common\"\nimport styled from \"styled-components\";\n\nconst Wrapper = styled(Page)`\n  @media screen and (max-width: 1100px) {\n    article h2 {\n      margin: 0;\n      font-size: 20px;\n    }\n    article li {\n      margin: 10px 0;\n    }\n  }\n`;\n\nexport default function LoginPage(props) {\n    return (\n      <Wrapper>\n        <Info />\n        <LoginManager onLogin={props.onLogin} />\n      </Wrapper>\n    )\n  }\n  \n","import React from \"react\"\nimport './global.css';\nimport Footer from \"./Utilities/footer\";\nimport Logo from \"./Utilities/logo\";\nimport MainPage from \"./MainPage\";\nimport LoginPage from \"./LoginPage\";\n\nclass UI extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogin = this.onLogin.bind(this);\n    this.onLogout = this.onLogout.bind(this);\n    this.switchCorner = this.switchCorner.bind(this);\n\n    this.state = {\n      loggedIn: false,\n      opened: false,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/api/check\", {\n      method: \"GET\",\n    })\n      .then(res => {\n        if (res.ok) return res.json()\n      })\n      .then(data => {\n        console.log(\"this is data \");\n        console.log(data);\n        if (data.logged) {\n          this.setState({ loggedIn: true });\n          this.switchCorner();\n        }\n        else if (data.logged == \"False\") {\n          this.setState({ loggedIn: false });\n        }\n      })\n      .catch(err => console.error(err));\n  }\n\n  onLogin() {\n    this.setState({ loggedIn: true });\n    this.switchCorner();\n  }\n\n  onLogout() {\n    fetch(\"/api/logout\", {\n      method: \"GET\"\n    })\n      .then(res => {\n        if (res.ok) {\n          this.setState({ loggedIn: false });\n        }\n      })\n      .catch(err => console.error(err));\n  }\n\n  switchCorner() {\n    setInterval(\n      () => { this.setState(state => ({ opened: state.loggedIn })) }\n      , 0)\n  }\n\n\n  render() {\n    let page = this.state.loggedIn\n      ? <MainPage switched={this.state.opened} onLogout={this.onLogout} />\n      : <LoginPage onLogin={this.onLogin} />\n\n    return (\n      <div className=\"app\">\n        <Logo />\n        { page }\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default UI;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport UI from './components/ui';\n\nReactDOM.render(\n  <React.StrictMode>\n    <UI />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}